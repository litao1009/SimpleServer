// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HeadInfo.proto

#ifndef PROTOBUF_HeadInfo_2eproto__INCLUDED
#define PROTOBUF_HeadInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace moriMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_HeadInfo_2eproto();
void protobuf_AssignDesc_HeadInfo_2eproto();
void protobuf_ShutdownFile_HeadInfo_2eproto();

class SMsgInfo;
class SFileInfo;
class HeadInfo;

// ===================================================================

class SMsgInfo : public ::google::protobuf::Message {
 public:
  SMsgInfo();
  virtual ~SMsgInfo();

  SMsgInfo(const SMsgInfo& from);

  inline SMsgInfo& operator=(const SMsgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SMsgInfo& default_instance();

  void Swap(SMsgInfo* other);

  // implements Message ----------------------------------------------

  SMsgInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SMsgInfo& from);
  void MergeFrom(const SMsgInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MsgLen = 1;
  inline bool has_msglen() const;
  inline void clear_msglen();
  static const int kMsgLenFieldNumber = 1;
  inline ::google::protobuf::int32 msglen() const;
  inline void set_msglen(::google::protobuf::int32 value);

  // required int32 MsgChksum = 2;
  inline bool has_msgchksum() const;
  inline void clear_msgchksum();
  static const int kMsgChksumFieldNumber = 2;
  inline ::google::protobuf::int32 msgchksum() const;
  inline void set_msgchksum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:moriMsg.SMsgInfo)
 private:
  inline void set_has_msglen();
  inline void clear_has_msglen();
  inline void set_has_msgchksum();
  inline void clear_has_msgchksum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 msglen_;
  ::google::protobuf::int32 msgchksum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_HeadInfo_2eproto();
  friend void protobuf_AssignDesc_HeadInfo_2eproto();
  friend void protobuf_ShutdownFile_HeadInfo_2eproto();

  void InitAsDefaultInstance();
  static SMsgInfo* default_instance_;
};
// -------------------------------------------------------------------

class SFileInfo : public ::google::protobuf::Message {
 public:
  SFileInfo();
  virtual ~SFileInfo();

  SFileInfo(const SFileInfo& from);

  inline SFileInfo& operator=(const SFileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SFileInfo& default_instance();

  void Swap(SFileInfo* other);

  // implements Message ----------------------------------------------

  SFileInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SFileInfo& from);
  void MergeFrom(const SFileInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 FileLen = 1;
  inline bool has_filelen() const;
  inline void clear_filelen();
  static const int kFileLenFieldNumber = 1;
  inline ::google::protobuf::int32 filelen() const;
  inline void set_filelen(::google::protobuf::int32 value);

  // required int32 FileChksum = 2;
  inline bool has_filechksum() const;
  inline void clear_filechksum();
  static const int kFileChksumFieldNumber = 2;
  inline ::google::protobuf::int32 filechksum() const;
  inline void set_filechksum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:moriMsg.SFileInfo)
 private:
  inline void set_has_filelen();
  inline void clear_has_filelen();
  inline void set_has_filechksum();
  inline void clear_has_filechksum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 filelen_;
  ::google::protobuf::int32 filechksum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_HeadInfo_2eproto();
  friend void protobuf_AssignDesc_HeadInfo_2eproto();
  friend void protobuf_ShutdownFile_HeadInfo_2eproto();

  void InitAsDefaultInstance();
  static SFileInfo* default_instance_;
};
// -------------------------------------------------------------------

class HeadInfo : public ::google::protobuf::Message {
 public:
  HeadInfo();
  virtual ~HeadInfo();

  HeadInfo(const HeadInfo& from);

  inline HeadInfo& operator=(const HeadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeadInfo& default_instance();

  void Swap(HeadInfo* other);

  // implements Message ----------------------------------------------

  HeadInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeadInfo& from);
  void MergeFrom(const HeadInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .moriMsg.SMsgInfo MsgInfo = 1;
  inline bool has_msginfo() const;
  inline void clear_msginfo();
  static const int kMsgInfoFieldNumber = 1;
  inline const ::moriMsg::SMsgInfo& msginfo() const;
  inline ::moriMsg::SMsgInfo* mutable_msginfo();
  inline ::moriMsg::SMsgInfo* release_msginfo();
  inline void set_allocated_msginfo(::moriMsg::SMsgInfo* msginfo);

  // repeated .moriMsg.SFileInfo FilesInfo = 2;
  inline int filesinfo_size() const;
  inline void clear_filesinfo();
  static const int kFilesInfoFieldNumber = 2;
  inline const ::moriMsg::SFileInfo& filesinfo(int index) const;
  inline ::moriMsg::SFileInfo* mutable_filesinfo(int index);
  inline ::moriMsg::SFileInfo* add_filesinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::moriMsg::SFileInfo >&
      filesinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::moriMsg::SFileInfo >*
      mutable_filesinfo();

  // @@protoc_insertion_point(class_scope:moriMsg.HeadInfo)
 private:
  inline void set_has_msginfo();
  inline void clear_has_msginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::moriMsg::SMsgInfo* msginfo_;
  ::google::protobuf::RepeatedPtrField< ::moriMsg::SFileInfo > filesinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_HeadInfo_2eproto();
  friend void protobuf_AssignDesc_HeadInfo_2eproto();
  friend void protobuf_ShutdownFile_HeadInfo_2eproto();

  void InitAsDefaultInstance();
  static HeadInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SMsgInfo

// required int32 MsgLen = 1;
inline bool SMsgInfo::has_msglen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SMsgInfo::set_has_msglen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SMsgInfo::clear_has_msglen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SMsgInfo::clear_msglen() {
  msglen_ = 0;
  clear_has_msglen();
}
inline ::google::protobuf::int32 SMsgInfo::msglen() const {
  return msglen_;
}
inline void SMsgInfo::set_msglen(::google::protobuf::int32 value) {
  set_has_msglen();
  msglen_ = value;
}

// required int32 MsgChksum = 2;
inline bool SMsgInfo::has_msgchksum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SMsgInfo::set_has_msgchksum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SMsgInfo::clear_has_msgchksum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SMsgInfo::clear_msgchksum() {
  msgchksum_ = 0;
  clear_has_msgchksum();
}
inline ::google::protobuf::int32 SMsgInfo::msgchksum() const {
  return msgchksum_;
}
inline void SMsgInfo::set_msgchksum(::google::protobuf::int32 value) {
  set_has_msgchksum();
  msgchksum_ = value;
}

// -------------------------------------------------------------------

// SFileInfo

// required int32 FileLen = 1;
inline bool SFileInfo::has_filelen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SFileInfo::set_has_filelen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SFileInfo::clear_has_filelen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SFileInfo::clear_filelen() {
  filelen_ = 0;
  clear_has_filelen();
}
inline ::google::protobuf::int32 SFileInfo::filelen() const {
  return filelen_;
}
inline void SFileInfo::set_filelen(::google::protobuf::int32 value) {
  set_has_filelen();
  filelen_ = value;
}

// required int32 FileChksum = 2;
inline bool SFileInfo::has_filechksum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SFileInfo::set_has_filechksum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SFileInfo::clear_has_filechksum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SFileInfo::clear_filechksum() {
  filechksum_ = 0;
  clear_has_filechksum();
}
inline ::google::protobuf::int32 SFileInfo::filechksum() const {
  return filechksum_;
}
inline void SFileInfo::set_filechksum(::google::protobuf::int32 value) {
  set_has_filechksum();
  filechksum_ = value;
}

// -------------------------------------------------------------------

// HeadInfo

// optional .moriMsg.SMsgInfo MsgInfo = 1;
inline bool HeadInfo::has_msginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeadInfo::set_has_msginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeadInfo::clear_has_msginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeadInfo::clear_msginfo() {
  if (msginfo_ != NULL) msginfo_->::moriMsg::SMsgInfo::Clear();
  clear_has_msginfo();
}
inline const ::moriMsg::SMsgInfo& HeadInfo::msginfo() const {
  return msginfo_ != NULL ? *msginfo_ : *default_instance_->msginfo_;
}
inline ::moriMsg::SMsgInfo* HeadInfo::mutable_msginfo() {
  set_has_msginfo();
  if (msginfo_ == NULL) msginfo_ = new ::moriMsg::SMsgInfo;
  return msginfo_;
}
inline ::moriMsg::SMsgInfo* HeadInfo::release_msginfo() {
  clear_has_msginfo();
  ::moriMsg::SMsgInfo* temp = msginfo_;
  msginfo_ = NULL;
  return temp;
}
inline void HeadInfo::set_allocated_msginfo(::moriMsg::SMsgInfo* msginfo) {
  delete msginfo_;
  msginfo_ = msginfo;
  if (msginfo) {
    set_has_msginfo();
  } else {
    clear_has_msginfo();
  }
}

// repeated .moriMsg.SFileInfo FilesInfo = 2;
inline int HeadInfo::filesinfo_size() const {
  return filesinfo_.size();
}
inline void HeadInfo::clear_filesinfo() {
  filesinfo_.Clear();
}
inline const ::moriMsg::SFileInfo& HeadInfo::filesinfo(int index) const {
  return filesinfo_.Get(index);
}
inline ::moriMsg::SFileInfo* HeadInfo::mutable_filesinfo(int index) {
  return filesinfo_.Mutable(index);
}
inline ::moriMsg::SFileInfo* HeadInfo::add_filesinfo() {
  return filesinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::moriMsg::SFileInfo >&
HeadInfo::filesinfo() const {
  return filesinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::moriMsg::SFileInfo >*
HeadInfo::mutable_filesinfo() {
  return &filesinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace moriMsg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_HeadInfo_2eproto__INCLUDED
