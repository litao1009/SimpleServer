// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetOrderInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GetOrderInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

namespace {

const ::google::protobuf::Descriptor* SOrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SOrderInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SRejectedOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SRejectedOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* QGetOrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QGetOrderInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AGetOrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AGetOrderInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GetOrderInfo_2eproto() {
  protobuf_AddDesc_GetOrderInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GetOrderInfo.proto");
  GOOGLE_CHECK(file != NULL);
  SOrderInfo_descriptor_ = file->message_type(0);
  static const int SOrderInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderInfo, orderinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderInfo, statusinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderInfo, vercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderInfo, verindex_),
  };
  SOrderInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SOrderInfo_descriptor_,
      SOrderInfo::default_instance_,
      SOrderInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SOrderInfo));
  SRejectedOrder_descriptor_ = file->message_type(1);
  static const int SRejectedOrder_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRejectedOrder, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRejectedOrder, errcode_),
  };
  SRejectedOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SRejectedOrder_descriptor_,
      SRejectedOrder::default_instance_,
      SRejectedOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRejectedOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRejectedOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SRejectedOrder));
  QGetOrderInfo_descriptor_ = file->message_type(2);
  static const int QGetOrderInfo_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, tabletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, ordercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, ordertitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, orderstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, orderstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, orderstoptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, shopauditstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, shopauditstoptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, shopcommitstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, shopcommitstoptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, graphauditstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, graphauditstoptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, listauditstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, listauditstoptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, priceauditstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, priceauditstoptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, financeauditstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, financeauditstoptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, geocode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, isshare_),
  };
  QGetOrderInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QGetOrderInfo_descriptor_,
      QGetOrderInfo::default_instance_,
      QGetOrderInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QGetOrderInfo));
  AGetOrderInfo_descriptor_ = file->message_type(3);
  static const int AGetOrderInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AGetOrderInfo, stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AGetOrderInfo, orderinfo_),
  };
  AGetOrderInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AGetOrderInfo_descriptor_,
      AGetOrderInfo::default_instance_,
      AGetOrderInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AGetOrderInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AGetOrderInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AGetOrderInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GetOrderInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SOrderInfo_descriptor_, &SOrderInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SRejectedOrder_descriptor_, &SRejectedOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QGetOrderInfo_descriptor_, &QGetOrderInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AGetOrderInfo_descriptor_, &AGetOrderInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GetOrderInfo_2eproto() {
  delete SOrderInfo::default_instance_;
  delete SOrderInfo_reflection_;
  delete SRejectedOrder::default_instance_;
  delete SRejectedOrder_reflection_;
  delete QGetOrderInfo::default_instance_;
  delete QGetOrderInfo_reflection_;
  delete AGetOrderInfo::default_instance_;
  delete AGetOrderInfo_reflection_;
}

void protobuf_AddDesc_GetOrderInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::transMsg::protobuf_AddDesc_EReturnStatus_2eproto();
  ::transMsg::protobuf_AddDesc_ETableType_2eproto();
  ::transMsg::protobuf_AddDesc_msg_2dGL_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022GetOrderInfo.proto\022\010transMsg\032\023EReturnS"
    "tatus.proto\032\020ETableType.proto\032\014msg-GL.pr"
    "oto\"n\n\nSOrderInfo\022\021\n\tOrderInfo\030\001 \002(\014\022*\n\n"
    "StatusInfo\030\002 \002(\0132\026.transMsg.GL_OrderInfo"
    "\022\017\n\007VerCode\030\003 \002(\003\022\020\n\010VerIndex\030\004 \002(\005\"K\n\016S"
    "RejectedOrder\022\017\n\007OrderID\030\001 \002(\003\022(\n\007ErrCod"
    "e\030\002 \002(\0162\027.transMsg.EReturnStatus\"\266\004\n\rQGe"
    "tOrderInfo\022\'\n\tTableType\030\001 \001(\0162\024.transMsg"
    ".ETableType\022\021\n\tOrderCode\030\002 \001(\t\022\022\n\nOrderT"
    "itle\030\003 \001(\t\022\027\n\013OrderStatus\030\004 \003(\005B\002\020\001\022\026\n\016O"
    "rderStartTime\030\005 \001(\003\022\025\n\rOrderStopTime\030\006 \001"
    "(\003\022\016\n\006Amount\030\007 \001(\005\022\032\n\022ShopAuditStartTime"
    "\030\010 \001(\003\022\031\n\021ShopAuditStopTime\030\t \001(\003\022\033\n\023Sho"
    "pCommitStartTime\030\n \001(\003\022\032\n\022ShopCommitStop"
    "Time\030\013 \001(\003\022\033\n\023GraphAuditStartTime\030\014 \001(\003\022"
    "\032\n\022GraphAuditStopTime\030\r \001(\003\022\032\n\022ListAudit"
    "StartTime\030\016 \001(\003\022\031\n\021ListAuditStopTime\030\017 \001"
    "(\003\022\033\n\023PriceAuditStartTime\030\020 \001(\003\022\032\n\022Price"
    "AuditStopTime\030\021 \001(\003\022\035\n\025FinanceAuditStart"
    "Time\030\022 \001(\003\022\034\n\024FinanceAuditStopTime\030\023 \001(\003"
    "\022\017\n\007GeoCode\030\024 \001(\t\022\026\n\007IsShare\030\025 \001(\010:\005fals"
    "e\"`\n\rAGetOrderInfo\022&\n\005Stats\030\001 \002(\0162\027.tran"
    "sMsg.EReturnStatus\022\'\n\tOrderInfo\030\002 \003(\0132\024."
    "transMsg.SOrderInfo", 939);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GetOrderInfo.proto", &protobuf_RegisterTypes);
  SOrderInfo::default_instance_ = new SOrderInfo();
  SRejectedOrder::default_instance_ = new SRejectedOrder();
  QGetOrderInfo::default_instance_ = new QGetOrderInfo();
  AGetOrderInfo::default_instance_ = new AGetOrderInfo();
  SOrderInfo::default_instance_->InitAsDefaultInstance();
  SRejectedOrder::default_instance_->InitAsDefaultInstance();
  QGetOrderInfo::default_instance_->InitAsDefaultInstance();
  AGetOrderInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GetOrderInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GetOrderInfo_2eproto {
  StaticDescriptorInitializer_GetOrderInfo_2eproto() {
    protobuf_AddDesc_GetOrderInfo_2eproto();
  }
} static_descriptor_initializer_GetOrderInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SOrderInfo::kOrderInfoFieldNumber;
const int SOrderInfo::kStatusInfoFieldNumber;
const int SOrderInfo::kVerCodeFieldNumber;
const int SOrderInfo::kVerIndexFieldNumber;
#endif  // !_MSC_VER

SOrderInfo::SOrderInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SOrderInfo::InitAsDefaultInstance() {
  statusinfo_ = const_cast< ::transMsg::GL_OrderInfo*>(&::transMsg::GL_OrderInfo::default_instance());
}

SOrderInfo::SOrderInfo(const SOrderInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SOrderInfo::SharedCtor() {
  _cached_size_ = 0;
  orderinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  statusinfo_ = NULL;
  vercode_ = GOOGLE_LONGLONG(0);
  verindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SOrderInfo::~SOrderInfo() {
  SharedDtor();
}

void SOrderInfo::SharedDtor() {
  if (orderinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete orderinfo_;
  }
  if (this != default_instance_) {
    delete statusinfo_;
  }
}

void SOrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SOrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SOrderInfo_descriptor_;
}

const SOrderInfo& SOrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrderInfo_2eproto();
  return *default_instance_;
}

SOrderInfo* SOrderInfo::default_instance_ = NULL;

SOrderInfo* SOrderInfo::New() const {
  return new SOrderInfo;
}

void SOrderInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_orderinfo()) {
      if (orderinfo_ != &::google::protobuf::internal::kEmptyString) {
        orderinfo_->clear();
      }
    }
    if (has_statusinfo()) {
      if (statusinfo_ != NULL) statusinfo_->::transMsg::GL_OrderInfo::Clear();
    }
    vercode_ = GOOGLE_LONGLONG(0);
    verindex_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SOrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes OrderInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_orderinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_StatusInfo;
        break;
      }

      // required .transMsg.GL_OrderInfo StatusInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StatusInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statusinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_VerCode;
        break;
      }

      // required int64 VerCode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_VerCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vercode_)));
          set_has_vercode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_VerIndex;
        break;
      }

      // required int32 VerIndex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_VerIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &verindex_)));
          set_has_verindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SOrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes OrderInfo = 1;
  if (has_orderinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->orderinfo(), output);
  }

  // required .transMsg.GL_OrderInfo StatusInfo = 2;
  if (has_statusinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->statusinfo(), output);
  }

  // required int64 VerCode = 3;
  if (has_vercode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->vercode(), output);
  }

  // required int32 VerIndex = 4;
  if (has_verindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->verindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SOrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes OrderInfo = 1;
  if (has_orderinfo()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->orderinfo(), target);
  }

  // required .transMsg.GL_OrderInfo StatusInfo = 2;
  if (has_statusinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->statusinfo(), target);
  }

  // required int64 VerCode = 3;
  if (has_vercode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->vercode(), target);
  }

  // required int32 VerIndex = 4;
  if (has_verindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->verindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SOrderInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes OrderInfo = 1;
    if (has_orderinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->orderinfo());
    }

    // required .transMsg.GL_OrderInfo StatusInfo = 2;
    if (has_statusinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->statusinfo());
    }

    // required int64 VerCode = 3;
    if (has_vercode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->vercode());
    }

    // required int32 VerIndex = 4;
    if (has_verindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->verindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SOrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SOrderInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SOrderInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SOrderInfo::MergeFrom(const SOrderInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderinfo()) {
      set_orderinfo(from.orderinfo());
    }
    if (from.has_statusinfo()) {
      mutable_statusinfo()->::transMsg::GL_OrderInfo::MergeFrom(from.statusinfo());
    }
    if (from.has_vercode()) {
      set_vercode(from.vercode());
    }
    if (from.has_verindex()) {
      set_verindex(from.verindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SOrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SOrderInfo::CopyFrom(const SOrderInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SOrderInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void SOrderInfo::Swap(SOrderInfo* other) {
  if (other != this) {
    std::swap(orderinfo_, other->orderinfo_);
    std::swap(statusinfo_, other->statusinfo_);
    std::swap(vercode_, other->vercode_);
    std::swap(verindex_, other->verindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SOrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SOrderInfo_descriptor_;
  metadata.reflection = SOrderInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SRejectedOrder::kOrderIDFieldNumber;
const int SRejectedOrder::kErrCodeFieldNumber;
#endif  // !_MSC_VER

SRejectedOrder::SRejectedOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SRejectedOrder::InitAsDefaultInstance() {
}

SRejectedOrder::SRejectedOrder(const SRejectedOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SRejectedOrder::SharedCtor() {
  _cached_size_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  errcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SRejectedOrder::~SRejectedOrder() {
  SharedDtor();
}

void SRejectedOrder::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SRejectedOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SRejectedOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SRejectedOrder_descriptor_;
}

const SRejectedOrder& SRejectedOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrderInfo_2eproto();
  return *default_instance_;
}

SRejectedOrder* SRejectedOrder::default_instance_ = NULL;

SRejectedOrder* SRejectedOrder::New() const {
  return new SRejectedOrder;
}

void SRejectedOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    orderid_ = GOOGLE_LONGLONG(0);
    errcode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SRejectedOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 OrderID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ErrCode;
        break;
      }

      // required .transMsg.EReturnStatus ErrCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ErrCode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::EReturnStatus_IsValid(value)) {
            set_errcode(static_cast< ::transMsg::EReturnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SRejectedOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 OrderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->orderid(), output);
  }

  // required .transMsg.EReturnStatus ErrCode = 2;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SRejectedOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 OrderID = 1;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->orderid(), target);
  }

  // required .transMsg.EReturnStatus ErrCode = 2;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->errcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SRejectedOrder::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 OrderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required .transMsg.EReturnStatus ErrCode = 2;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SRejectedOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SRejectedOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SRejectedOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SRejectedOrder::MergeFrom(const SRejectedOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SRejectedOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRejectedOrder::CopyFrom(const SRejectedOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRejectedOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SRejectedOrder::Swap(SRejectedOrder* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SRejectedOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SRejectedOrder_descriptor_;
  metadata.reflection = SRejectedOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QGetOrderInfo::kTableTypeFieldNumber;
const int QGetOrderInfo::kOrderCodeFieldNumber;
const int QGetOrderInfo::kOrderTitleFieldNumber;
const int QGetOrderInfo::kOrderStatusFieldNumber;
const int QGetOrderInfo::kOrderStartTimeFieldNumber;
const int QGetOrderInfo::kOrderStopTimeFieldNumber;
const int QGetOrderInfo::kAmountFieldNumber;
const int QGetOrderInfo::kShopAuditStartTimeFieldNumber;
const int QGetOrderInfo::kShopAuditStopTimeFieldNumber;
const int QGetOrderInfo::kShopCommitStartTimeFieldNumber;
const int QGetOrderInfo::kShopCommitStopTimeFieldNumber;
const int QGetOrderInfo::kGraphAuditStartTimeFieldNumber;
const int QGetOrderInfo::kGraphAuditStopTimeFieldNumber;
const int QGetOrderInfo::kListAuditStartTimeFieldNumber;
const int QGetOrderInfo::kListAuditStopTimeFieldNumber;
const int QGetOrderInfo::kPriceAuditStartTimeFieldNumber;
const int QGetOrderInfo::kPriceAuditStopTimeFieldNumber;
const int QGetOrderInfo::kFinanceAuditStartTimeFieldNumber;
const int QGetOrderInfo::kFinanceAuditStopTimeFieldNumber;
const int QGetOrderInfo::kGeoCodeFieldNumber;
const int QGetOrderInfo::kIsShareFieldNumber;
#endif  // !_MSC_VER

QGetOrderInfo::QGetOrderInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QGetOrderInfo::InitAsDefaultInstance() {
}

QGetOrderInfo::QGetOrderInfo(const QGetOrderInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QGetOrderInfo::SharedCtor() {
  _cached_size_ = 0;
  tabletype_ = 1;
  ordercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ordertitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orderstarttime_ = GOOGLE_LONGLONG(0);
  orderstoptime_ = GOOGLE_LONGLONG(0);
  amount_ = 0;
  shopauditstarttime_ = GOOGLE_LONGLONG(0);
  shopauditstoptime_ = GOOGLE_LONGLONG(0);
  shopcommitstarttime_ = GOOGLE_LONGLONG(0);
  shopcommitstoptime_ = GOOGLE_LONGLONG(0);
  graphauditstarttime_ = GOOGLE_LONGLONG(0);
  graphauditstoptime_ = GOOGLE_LONGLONG(0);
  listauditstarttime_ = GOOGLE_LONGLONG(0);
  listauditstoptime_ = GOOGLE_LONGLONG(0);
  priceauditstarttime_ = GOOGLE_LONGLONG(0);
  priceauditstoptime_ = GOOGLE_LONGLONG(0);
  financeauditstarttime_ = GOOGLE_LONGLONG(0);
  financeauditstoptime_ = GOOGLE_LONGLONG(0);
  geocode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  isshare_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QGetOrderInfo::~QGetOrderInfo() {
  SharedDtor();
}

void QGetOrderInfo::SharedDtor() {
  if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
    delete ordercode_;
  }
  if (ordertitle_ != &::google::protobuf::internal::kEmptyString) {
    delete ordertitle_;
  }
  if (geocode_ != &::google::protobuf::internal::kEmptyString) {
    delete geocode_;
  }
  if (this != default_instance_) {
  }
}

void QGetOrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QGetOrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QGetOrderInfo_descriptor_;
}

const QGetOrderInfo& QGetOrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrderInfo_2eproto();
  return *default_instance_;
}

QGetOrderInfo* QGetOrderInfo::default_instance_ = NULL;

QGetOrderInfo* QGetOrderInfo::New() const {
  return new QGetOrderInfo;
}

void QGetOrderInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tabletype_ = 1;
    if (has_ordercode()) {
      if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
        ordercode_->clear();
      }
    }
    if (has_ordertitle()) {
      if (ordertitle_ != &::google::protobuf::internal::kEmptyString) {
        ordertitle_->clear();
      }
    }
    orderstarttime_ = GOOGLE_LONGLONG(0);
    orderstoptime_ = GOOGLE_LONGLONG(0);
    amount_ = 0;
    shopauditstarttime_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    shopauditstoptime_ = GOOGLE_LONGLONG(0);
    shopcommitstarttime_ = GOOGLE_LONGLONG(0);
    shopcommitstoptime_ = GOOGLE_LONGLONG(0);
    graphauditstarttime_ = GOOGLE_LONGLONG(0);
    graphauditstoptime_ = GOOGLE_LONGLONG(0);
    listauditstarttime_ = GOOGLE_LONGLONG(0);
    listauditstoptime_ = GOOGLE_LONGLONG(0);
    priceauditstarttime_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    priceauditstoptime_ = GOOGLE_LONGLONG(0);
    financeauditstarttime_ = GOOGLE_LONGLONG(0);
    financeauditstoptime_ = GOOGLE_LONGLONG(0);
    if (has_geocode()) {
      if (geocode_ != &::google::protobuf::internal::kEmptyString) {
        geocode_->clear();
      }
    }
    isshare_ = false;
  }
  orderstatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QGetOrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .transMsg.ETableType TableType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::ETableType_IsValid(value)) {
            set_tabletype(static_cast< ::transMsg::ETableType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OrderCode;
        break;
      }

      // optional string OrderCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordercode().data(), this->ordercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_OrderTitle;
        break;
      }

      // optional string OrderTitle = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordertitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordertitle().data(), this->ordertitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_OrderStatus;
        break;
      }

      // repeated int32 OrderStatus = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_orderstatus())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34, input, this->mutable_orderstatus())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_OrderStartTime;
        break;
      }

      // optional int64 OrderStartTime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderstarttime_)));
          set_has_orderstarttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_OrderStopTime;
        break;
      }

      // optional int64 OrderStopTime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderStopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderstoptime_)));
          set_has_orderstoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_Amount;
        break;
      }

      // optional int32 Amount = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_ShopAuditStartTime;
        break;
      }

      // optional int64 ShopAuditStartTime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ShopAuditStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shopauditstarttime_)));
          set_has_shopauditstarttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ShopAuditStopTime;
        break;
      }

      // optional int64 ShopAuditStopTime = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ShopAuditStopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shopauditstoptime_)));
          set_has_shopauditstoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_ShopCommitStartTime;
        break;
      }

      // optional int64 ShopCommitStartTime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ShopCommitStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shopcommitstarttime_)));
          set_has_shopcommitstarttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_ShopCommitStopTime;
        break;
      }

      // optional int64 ShopCommitStopTime = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ShopCommitStopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shopcommitstoptime_)));
          set_has_shopcommitstoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_GraphAuditStartTime;
        break;
      }

      // optional int64 GraphAuditStartTime = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GraphAuditStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &graphauditstarttime_)));
          set_has_graphauditstarttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_GraphAuditStopTime;
        break;
      }

      // optional int64 GraphAuditStopTime = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GraphAuditStopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &graphauditstoptime_)));
          set_has_graphauditstoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_ListAuditStartTime;
        break;
      }

      // optional int64 ListAuditStartTime = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ListAuditStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &listauditstarttime_)));
          set_has_listauditstarttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_ListAuditStopTime;
        break;
      }

      // optional int64 ListAuditStopTime = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ListAuditStopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &listauditstoptime_)));
          set_has_listauditstoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_PriceAuditStartTime;
        break;
      }

      // optional int64 PriceAuditStartTime = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_PriceAuditStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &priceauditstarttime_)));
          set_has_priceauditstarttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_PriceAuditStopTime;
        break;
      }

      // optional int64 PriceAuditStopTime = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_PriceAuditStopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &priceauditstoptime_)));
          set_has_priceauditstoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_FinanceAuditStartTime;
        break;
      }

      // optional int64 FinanceAuditStartTime = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FinanceAuditStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &financeauditstarttime_)));
          set_has_financeauditstarttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_FinanceAuditStopTime;
        break;
      }

      // optional int64 FinanceAuditStopTime = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FinanceAuditStopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &financeauditstoptime_)));
          set_has_financeauditstoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_GeoCode;
        break;
      }

      // optional string GeoCode = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_GeoCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_geocode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->geocode().data(), this->geocode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_IsShare;
        break;
      }

      // optional bool IsShare = 21 [default = false];
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_IsShare:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isshare_)));
          set_has_isshare();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QGetOrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .transMsg.ETableType TableType = 1;
  if (has_tabletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tabletype(), output);
  }

  // optional string OrderCode = 2;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->ordercode(), output);
  }

  // optional string OrderTitle = 3;
  if (has_ordertitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordertitle().data(), this->ordertitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->ordertitle(), output);
  }

  // repeated int32 OrderStatus = 4 [packed = true];
  if (this->orderstatus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_orderstatus_cached_byte_size_);
  }
  for (int i = 0; i < this->orderstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->orderstatus(i), output);
  }

  // optional int64 OrderStartTime = 5;
  if (has_orderstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->orderstarttime(), output);
  }

  // optional int64 OrderStopTime = 6;
  if (has_orderstoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->orderstoptime(), output);
  }

  // optional int32 Amount = 7;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->amount(), output);
  }

  // optional int64 ShopAuditStartTime = 8;
  if (has_shopauditstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->shopauditstarttime(), output);
  }

  // optional int64 ShopAuditStopTime = 9;
  if (has_shopauditstoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->shopauditstoptime(), output);
  }

  // optional int64 ShopCommitStartTime = 10;
  if (has_shopcommitstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->shopcommitstarttime(), output);
  }

  // optional int64 ShopCommitStopTime = 11;
  if (has_shopcommitstoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->shopcommitstoptime(), output);
  }

  // optional int64 GraphAuditStartTime = 12;
  if (has_graphauditstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->graphauditstarttime(), output);
  }

  // optional int64 GraphAuditStopTime = 13;
  if (has_graphauditstoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->graphauditstoptime(), output);
  }

  // optional int64 ListAuditStartTime = 14;
  if (has_listauditstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->listauditstarttime(), output);
  }

  // optional int64 ListAuditStopTime = 15;
  if (has_listauditstoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->listauditstoptime(), output);
  }

  // optional int64 PriceAuditStartTime = 16;
  if (has_priceauditstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->priceauditstarttime(), output);
  }

  // optional int64 PriceAuditStopTime = 17;
  if (has_priceauditstoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->priceauditstoptime(), output);
  }

  // optional int64 FinanceAuditStartTime = 18;
  if (has_financeauditstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->financeauditstarttime(), output);
  }

  // optional int64 FinanceAuditStopTime = 19;
  if (has_financeauditstoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->financeauditstoptime(), output);
  }

  // optional string GeoCode = 20;
  if (has_geocode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->geocode().data(), this->geocode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->geocode(), output);
  }

  // optional bool IsShare = 21 [default = false];
  if (has_isshare()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->isshare(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QGetOrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .transMsg.ETableType TableType = 1;
  if (has_tabletype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tabletype(), target);
  }

  // optional string OrderCode = 2;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ordercode(), target);
  }

  // optional string OrderTitle = 3;
  if (has_ordertitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordertitle().data(), this->ordertitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ordertitle(), target);
  }

  // repeated int32 OrderStatus = 4 [packed = true];
  if (this->orderstatus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _orderstatus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->orderstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->orderstatus(i), target);
  }

  // optional int64 OrderStartTime = 5;
  if (has_orderstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->orderstarttime(), target);
  }

  // optional int64 OrderStopTime = 6;
  if (has_orderstoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->orderstoptime(), target);
  }

  // optional int32 Amount = 7;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->amount(), target);
  }

  // optional int64 ShopAuditStartTime = 8;
  if (has_shopauditstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->shopauditstarttime(), target);
  }

  // optional int64 ShopAuditStopTime = 9;
  if (has_shopauditstoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->shopauditstoptime(), target);
  }

  // optional int64 ShopCommitStartTime = 10;
  if (has_shopcommitstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->shopcommitstarttime(), target);
  }

  // optional int64 ShopCommitStopTime = 11;
  if (has_shopcommitstoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->shopcommitstoptime(), target);
  }

  // optional int64 GraphAuditStartTime = 12;
  if (has_graphauditstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->graphauditstarttime(), target);
  }

  // optional int64 GraphAuditStopTime = 13;
  if (has_graphauditstoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->graphauditstoptime(), target);
  }

  // optional int64 ListAuditStartTime = 14;
  if (has_listauditstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->listauditstarttime(), target);
  }

  // optional int64 ListAuditStopTime = 15;
  if (has_listauditstoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->listauditstoptime(), target);
  }

  // optional int64 PriceAuditStartTime = 16;
  if (has_priceauditstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->priceauditstarttime(), target);
  }

  // optional int64 PriceAuditStopTime = 17;
  if (has_priceauditstoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->priceauditstoptime(), target);
  }

  // optional int64 FinanceAuditStartTime = 18;
  if (has_financeauditstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->financeauditstarttime(), target);
  }

  // optional int64 FinanceAuditStopTime = 19;
  if (has_financeauditstoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->financeauditstoptime(), target);
  }

  // optional string GeoCode = 20;
  if (has_geocode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->geocode().data(), this->geocode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->geocode(), target);
  }

  // optional bool IsShare = 21 [default = false];
  if (has_isshare()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->isshare(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QGetOrderInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .transMsg.ETableType TableType = 1;
    if (has_tabletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->tabletype());
    }

    // optional string OrderCode = 2;
    if (has_ordercode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordercode());
    }

    // optional string OrderTitle = 3;
    if (has_ordertitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordertitle());
    }

    // optional int64 OrderStartTime = 5;
    if (has_orderstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderstarttime());
    }

    // optional int64 OrderStopTime = 6;
    if (has_orderstoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderstoptime());
    }

    // optional int32 Amount = 7;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }

    // optional int64 ShopAuditStartTime = 8;
    if (has_shopauditstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shopauditstarttime());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 ShopAuditStopTime = 9;
    if (has_shopauditstoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shopauditstoptime());
    }

    // optional int64 ShopCommitStartTime = 10;
    if (has_shopcommitstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shopcommitstarttime());
    }

    // optional int64 ShopCommitStopTime = 11;
    if (has_shopcommitstoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shopcommitstoptime());
    }

    // optional int64 GraphAuditStartTime = 12;
    if (has_graphauditstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->graphauditstarttime());
    }

    // optional int64 GraphAuditStopTime = 13;
    if (has_graphauditstoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->graphauditstoptime());
    }

    // optional int64 ListAuditStartTime = 14;
    if (has_listauditstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->listauditstarttime());
    }

    // optional int64 ListAuditStopTime = 15;
    if (has_listauditstoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->listauditstoptime());
    }

    // optional int64 PriceAuditStartTime = 16;
    if (has_priceauditstarttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->priceauditstarttime());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int64 PriceAuditStopTime = 17;
    if (has_priceauditstoptime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->priceauditstoptime());
    }

    // optional int64 FinanceAuditStartTime = 18;
    if (has_financeauditstarttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->financeauditstarttime());
    }

    // optional int64 FinanceAuditStopTime = 19;
    if (has_financeauditstoptime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->financeauditstoptime());
    }

    // optional string GeoCode = 20;
    if (has_geocode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->geocode());
    }

    // optional bool IsShare = 21 [default = false];
    if (has_isshare()) {
      total_size += 2 + 1;
    }

  }
  // repeated int32 OrderStatus = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->orderstatus_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->orderstatus(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _orderstatus_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QGetOrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QGetOrderInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QGetOrderInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QGetOrderInfo::MergeFrom(const QGetOrderInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  orderstatus_.MergeFrom(from.orderstatus_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tabletype()) {
      set_tabletype(from.tabletype());
    }
    if (from.has_ordercode()) {
      set_ordercode(from.ordercode());
    }
    if (from.has_ordertitle()) {
      set_ordertitle(from.ordertitle());
    }
    if (from.has_orderstarttime()) {
      set_orderstarttime(from.orderstarttime());
    }
    if (from.has_orderstoptime()) {
      set_orderstoptime(from.orderstoptime());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_shopauditstarttime()) {
      set_shopauditstarttime(from.shopauditstarttime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_shopauditstoptime()) {
      set_shopauditstoptime(from.shopauditstoptime());
    }
    if (from.has_shopcommitstarttime()) {
      set_shopcommitstarttime(from.shopcommitstarttime());
    }
    if (from.has_shopcommitstoptime()) {
      set_shopcommitstoptime(from.shopcommitstoptime());
    }
    if (from.has_graphauditstarttime()) {
      set_graphauditstarttime(from.graphauditstarttime());
    }
    if (from.has_graphauditstoptime()) {
      set_graphauditstoptime(from.graphauditstoptime());
    }
    if (from.has_listauditstarttime()) {
      set_listauditstarttime(from.listauditstarttime());
    }
    if (from.has_listauditstoptime()) {
      set_listauditstoptime(from.listauditstoptime());
    }
    if (from.has_priceauditstarttime()) {
      set_priceauditstarttime(from.priceauditstarttime());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_priceauditstoptime()) {
      set_priceauditstoptime(from.priceauditstoptime());
    }
    if (from.has_financeauditstarttime()) {
      set_financeauditstarttime(from.financeauditstarttime());
    }
    if (from.has_financeauditstoptime()) {
      set_financeauditstoptime(from.financeauditstoptime());
    }
    if (from.has_geocode()) {
      set_geocode(from.geocode());
    }
    if (from.has_isshare()) {
      set_isshare(from.isshare());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QGetOrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QGetOrderInfo::CopyFrom(const QGetOrderInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QGetOrderInfo::IsInitialized() const {

  return true;
}

void QGetOrderInfo::Swap(QGetOrderInfo* other) {
  if (other != this) {
    std::swap(tabletype_, other->tabletype_);
    std::swap(ordercode_, other->ordercode_);
    std::swap(ordertitle_, other->ordertitle_);
    orderstatus_.Swap(&other->orderstatus_);
    std::swap(orderstarttime_, other->orderstarttime_);
    std::swap(orderstoptime_, other->orderstoptime_);
    std::swap(amount_, other->amount_);
    std::swap(shopauditstarttime_, other->shopauditstarttime_);
    std::swap(shopauditstoptime_, other->shopauditstoptime_);
    std::swap(shopcommitstarttime_, other->shopcommitstarttime_);
    std::swap(shopcommitstoptime_, other->shopcommitstoptime_);
    std::swap(graphauditstarttime_, other->graphauditstarttime_);
    std::swap(graphauditstoptime_, other->graphauditstoptime_);
    std::swap(listauditstarttime_, other->listauditstarttime_);
    std::swap(listauditstoptime_, other->listauditstoptime_);
    std::swap(priceauditstarttime_, other->priceauditstarttime_);
    std::swap(priceauditstoptime_, other->priceauditstoptime_);
    std::swap(financeauditstarttime_, other->financeauditstarttime_);
    std::swap(financeauditstoptime_, other->financeauditstoptime_);
    std::swap(geocode_, other->geocode_);
    std::swap(isshare_, other->isshare_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QGetOrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QGetOrderInfo_descriptor_;
  metadata.reflection = QGetOrderInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AGetOrderInfo::kStatsFieldNumber;
const int AGetOrderInfo::kOrderInfoFieldNumber;
#endif  // !_MSC_VER

AGetOrderInfo::AGetOrderInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AGetOrderInfo::InitAsDefaultInstance() {
}

AGetOrderInfo::AGetOrderInfo(const AGetOrderInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AGetOrderInfo::SharedCtor() {
  _cached_size_ = 0;
  stats_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AGetOrderInfo::~AGetOrderInfo() {
  SharedDtor();
}

void AGetOrderInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AGetOrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AGetOrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AGetOrderInfo_descriptor_;
}

const AGetOrderInfo& AGetOrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrderInfo_2eproto();
  return *default_instance_;
}

AGetOrderInfo* AGetOrderInfo::default_instance_ = NULL;

AGetOrderInfo* AGetOrderInfo::New() const {
  return new AGetOrderInfo;
}

void AGetOrderInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stats_ = 0;
  }
  orderinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AGetOrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .transMsg.EReturnStatus Stats = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::EReturnStatus_IsValid(value)) {
            set_stats(static_cast< ::transMsg::EReturnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OrderInfo;
        break;
      }

      // repeated .transMsg.SOrderInfo OrderInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_orderinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OrderInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AGetOrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stats(), output);
  }

  // repeated .transMsg.SOrderInfo OrderInfo = 2;
  for (int i = 0; i < this->orderinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->orderinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AGetOrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stats(), target);
  }

  // repeated .transMsg.SOrderInfo OrderInfo = 2;
  for (int i = 0; i < this->orderinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->orderinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AGetOrderInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .transMsg.EReturnStatus Stats = 1;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stats());
    }

  }
  // repeated .transMsg.SOrderInfo OrderInfo = 2;
  total_size += 1 * this->orderinfo_size();
  for (int i = 0; i < this->orderinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->orderinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AGetOrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AGetOrderInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AGetOrderInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AGetOrderInfo::MergeFrom(const AGetOrderInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  orderinfo_.MergeFrom(from.orderinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stats()) {
      set_stats(from.stats());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AGetOrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AGetOrderInfo::CopyFrom(const AGetOrderInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AGetOrderInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < orderinfo_size(); i++) {
    if (!this->orderinfo(i).IsInitialized()) return false;
  }
  return true;
}

void AGetOrderInfo::Swap(AGetOrderInfo* other) {
  if (other != this) {
    std::swap(stats_, other->stats_);
    orderinfo_.Swap(&other->orderinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AGetOrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AGetOrderInfo_descriptor_;
  metadata.reflection = AGetOrderInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

// @@protoc_insertion_point(global_scope)
