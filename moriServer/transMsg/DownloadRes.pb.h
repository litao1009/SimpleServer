// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DownloadRes.proto

#ifndef PROTOBUF_DownloadRes_2eproto__INCLUDED
#define PROTOBUF_DownloadRes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EReturnStatus.pb.h"
// @@protoc_insertion_point(includes)

namespace transMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DownloadRes_2eproto();
void protobuf_AssignDesc_DownloadRes_2eproto();
void protobuf_ShutdownFile_DownloadRes_2eproto();

class QDownloadRes;
class ADownloadRes;

// ===================================================================

class QDownloadRes : public ::google::protobuf::Message {
 public:
  QDownloadRes();
  virtual ~QDownloadRes();

  QDownloadRes(const QDownloadRes& from);

  inline QDownloadRes& operator=(const QDownloadRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QDownloadRes& default_instance();

  void Swap(QDownloadRes* other);

  // implements Message ----------------------------------------------

  QDownloadRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QDownloadRes& from);
  void MergeFrom(const QDownloadRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes FileHashs = 1;
  inline int filehashs_size() const;
  inline void clear_filehashs();
  static const int kFileHashsFieldNumber = 1;
  inline const ::std::string& filehashs(int index) const;
  inline ::std::string* mutable_filehashs(int index);
  inline void set_filehashs(int index, const ::std::string& value);
  inline void set_filehashs(int index, const char* value);
  inline void set_filehashs(int index, const void* value, size_t size);
  inline ::std::string* add_filehashs();
  inline void add_filehashs(const ::std::string& value);
  inline void add_filehashs(const char* value);
  inline void add_filehashs(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& filehashs() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filehashs();

  // @@protoc_insertion_point(class_scope:transMsg.QDownloadRes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> filehashs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DownloadRes_2eproto();
  friend void protobuf_AssignDesc_DownloadRes_2eproto();
  friend void protobuf_ShutdownFile_DownloadRes_2eproto();

  void InitAsDefaultInstance();
  static QDownloadRes* default_instance_;
};
// -------------------------------------------------------------------

class ADownloadRes : public ::google::protobuf::Message {
 public:
  ADownloadRes();
  virtual ~ADownloadRes();

  ADownloadRes(const ADownloadRes& from);

  inline ADownloadRes& operator=(const ADownloadRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ADownloadRes& default_instance();

  void Swap(ADownloadRes* other);

  // implements Message ----------------------------------------------

  ADownloadRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ADownloadRes& from);
  void MergeFrom(const ADownloadRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .transMsg.EReturnStatus Stats = 1;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline ::transMsg::EReturnStatus stats() const;
  inline void set_stats(::transMsg::EReturnStatus value);

  // repeated bytes PassedHashs = 2;
  inline int passedhashs_size() const;
  inline void clear_passedhashs();
  static const int kPassedHashsFieldNumber = 2;
  inline const ::std::string& passedhashs(int index) const;
  inline ::std::string* mutable_passedhashs(int index);
  inline void set_passedhashs(int index, const ::std::string& value);
  inline void set_passedhashs(int index, const char* value);
  inline void set_passedhashs(int index, const void* value, size_t size);
  inline ::std::string* add_passedhashs();
  inline void add_passedhashs(const ::std::string& value);
  inline void add_passedhashs(const char* value);
  inline void add_passedhashs(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& passedhashs() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_passedhashs();

  // repeated bytes RejectedHashs = 3;
  inline int rejectedhashs_size() const;
  inline void clear_rejectedhashs();
  static const int kRejectedHashsFieldNumber = 3;
  inline const ::std::string& rejectedhashs(int index) const;
  inline ::std::string* mutable_rejectedhashs(int index);
  inline void set_rejectedhashs(int index, const ::std::string& value);
  inline void set_rejectedhashs(int index, const char* value);
  inline void set_rejectedhashs(int index, const void* value, size_t size);
  inline ::std::string* add_rejectedhashs();
  inline void add_rejectedhashs(const ::std::string& value);
  inline void add_rejectedhashs(const char* value);
  inline void add_rejectedhashs(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& rejectedhashs() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_rejectedhashs();

  // @@protoc_insertion_point(class_scope:transMsg.ADownloadRes)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> passedhashs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> rejectedhashs_;
  int stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DownloadRes_2eproto();
  friend void protobuf_AssignDesc_DownloadRes_2eproto();
  friend void protobuf_ShutdownFile_DownloadRes_2eproto();

  void InitAsDefaultInstance();
  static ADownloadRes* default_instance_;
};
// ===================================================================


// ===================================================================

// QDownloadRes

// repeated bytes FileHashs = 1;
inline int QDownloadRes::filehashs_size() const {
  return filehashs_.size();
}
inline void QDownloadRes::clear_filehashs() {
  filehashs_.Clear();
}
inline const ::std::string& QDownloadRes::filehashs(int index) const {
  return filehashs_.Get(index);
}
inline ::std::string* QDownloadRes::mutable_filehashs(int index) {
  return filehashs_.Mutable(index);
}
inline void QDownloadRes::set_filehashs(int index, const ::std::string& value) {
  filehashs_.Mutable(index)->assign(value);
}
inline void QDownloadRes::set_filehashs(int index, const char* value) {
  filehashs_.Mutable(index)->assign(value);
}
inline void QDownloadRes::set_filehashs(int index, const void* value, size_t size) {
  filehashs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QDownloadRes::add_filehashs() {
  return filehashs_.Add();
}
inline void QDownloadRes::add_filehashs(const ::std::string& value) {
  filehashs_.Add()->assign(value);
}
inline void QDownloadRes::add_filehashs(const char* value) {
  filehashs_.Add()->assign(value);
}
inline void QDownloadRes::add_filehashs(const void* value, size_t size) {
  filehashs_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
QDownloadRes::filehashs() const {
  return filehashs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
QDownloadRes::mutable_filehashs() {
  return &filehashs_;
}

// -------------------------------------------------------------------

// ADownloadRes

// required .transMsg.EReturnStatus Stats = 1;
inline bool ADownloadRes::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ADownloadRes::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ADownloadRes::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ADownloadRes::clear_stats() {
  stats_ = 0;
  clear_has_stats();
}
inline ::transMsg::EReturnStatus ADownloadRes::stats() const {
  return static_cast< ::transMsg::EReturnStatus >(stats_);
}
inline void ADownloadRes::set_stats(::transMsg::EReturnStatus value) {
  assert(::transMsg::EReturnStatus_IsValid(value));
  set_has_stats();
  stats_ = value;
}

// repeated bytes PassedHashs = 2;
inline int ADownloadRes::passedhashs_size() const {
  return passedhashs_.size();
}
inline void ADownloadRes::clear_passedhashs() {
  passedhashs_.Clear();
}
inline const ::std::string& ADownloadRes::passedhashs(int index) const {
  return passedhashs_.Get(index);
}
inline ::std::string* ADownloadRes::mutable_passedhashs(int index) {
  return passedhashs_.Mutable(index);
}
inline void ADownloadRes::set_passedhashs(int index, const ::std::string& value) {
  passedhashs_.Mutable(index)->assign(value);
}
inline void ADownloadRes::set_passedhashs(int index, const char* value) {
  passedhashs_.Mutable(index)->assign(value);
}
inline void ADownloadRes::set_passedhashs(int index, const void* value, size_t size) {
  passedhashs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ADownloadRes::add_passedhashs() {
  return passedhashs_.Add();
}
inline void ADownloadRes::add_passedhashs(const ::std::string& value) {
  passedhashs_.Add()->assign(value);
}
inline void ADownloadRes::add_passedhashs(const char* value) {
  passedhashs_.Add()->assign(value);
}
inline void ADownloadRes::add_passedhashs(const void* value, size_t size) {
  passedhashs_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ADownloadRes::passedhashs() const {
  return passedhashs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ADownloadRes::mutable_passedhashs() {
  return &passedhashs_;
}

// repeated bytes RejectedHashs = 3;
inline int ADownloadRes::rejectedhashs_size() const {
  return rejectedhashs_.size();
}
inline void ADownloadRes::clear_rejectedhashs() {
  rejectedhashs_.Clear();
}
inline const ::std::string& ADownloadRes::rejectedhashs(int index) const {
  return rejectedhashs_.Get(index);
}
inline ::std::string* ADownloadRes::mutable_rejectedhashs(int index) {
  return rejectedhashs_.Mutable(index);
}
inline void ADownloadRes::set_rejectedhashs(int index, const ::std::string& value) {
  rejectedhashs_.Mutable(index)->assign(value);
}
inline void ADownloadRes::set_rejectedhashs(int index, const char* value) {
  rejectedhashs_.Mutable(index)->assign(value);
}
inline void ADownloadRes::set_rejectedhashs(int index, const void* value, size_t size) {
  rejectedhashs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ADownloadRes::add_rejectedhashs() {
  return rejectedhashs_.Add();
}
inline void ADownloadRes::add_rejectedhashs(const ::std::string& value) {
  rejectedhashs_.Add()->assign(value);
}
inline void ADownloadRes::add_rejectedhashs(const char* value) {
  rejectedhashs_.Add()->assign(value);
}
inline void ADownloadRes::add_rejectedhashs(const void* value, size_t size) {
  rejectedhashs_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ADownloadRes::rejectedhashs() const {
  return rejectedhashs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ADownloadRes::mutable_rejectedhashs() {
  return &rejectedhashs_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DownloadRes_2eproto__INCLUDED
