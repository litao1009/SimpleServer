// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DownloadLib.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DownloadLib.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

namespace {

const ::google::protobuf::Descriptor* QDownloadLib_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QDownloadLib_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADownloadLib_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADownloadLib_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DownloadLib_2eproto() {
  protobuf_AddDesc_DownloadLib_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DownloadLib.proto");
  GOOGLE_CHECK(file != NULL);
  QDownloadLib_descriptor_ = file->message_type(0);
  static const int QDownloadLib_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QDownloadLib, vercodes_),
  };
  QDownloadLib_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QDownloadLib_descriptor_,
      QDownloadLib::default_instance_,
      QDownloadLib_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QDownloadLib, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QDownloadLib, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QDownloadLib));
  ADownloadLib_descriptor_ = file->message_type(1);
  static const int ADownloadLib_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADownloadLib, stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADownloadLib, rejectedvercodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADownloadLib, jk_table_),
  };
  ADownloadLib_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ADownloadLib_descriptor_,
      ADownloadLib::default_instance_,
      ADownloadLib_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADownloadLib, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADownloadLib, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ADownloadLib));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DownloadLib_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QDownloadLib_descriptor_, &QDownloadLib::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ADownloadLib_descriptor_, &ADownloadLib::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DownloadLib_2eproto() {
  delete QDownloadLib::default_instance_;
  delete QDownloadLib_reflection_;
  delete ADownloadLib::default_instance_;
  delete ADownloadLib_reflection_;
}

void protobuf_AddDesc_DownloadLib_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::transMsg::protobuf_AddDesc_EReturnStatus_2eproto();
  ::transMsg::protobuf_AddDesc_msg_2dJK_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021DownloadLib.proto\022\010transMsg\032\023EReturnSt"
    "atus.proto\032\014msg-JK.proto\"$\n\014QDownloadLib"
    "\022\024\n\010VerCodes\030\001 \003(\003B\002\020\001\"z\n\014ADownloadLib\022&"
    "\n\005Stats\030\001 \002(\0162\027.transMsg.EReturnStatus\022\034"
    "\n\020RejectedVerCodes\030\003 \003(\003B\002\020\001\022$\n\010JK_Table"
    "\030e \003(\0132\022.transMsg.JK_Table", 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DownloadLib.proto", &protobuf_RegisterTypes);
  QDownloadLib::default_instance_ = new QDownloadLib();
  ADownloadLib::default_instance_ = new ADownloadLib();
  QDownloadLib::default_instance_->InitAsDefaultInstance();
  ADownloadLib::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DownloadLib_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DownloadLib_2eproto {
  StaticDescriptorInitializer_DownloadLib_2eproto() {
    protobuf_AddDesc_DownloadLib_2eproto();
  }
} static_descriptor_initializer_DownloadLib_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int QDownloadLib::kVerCodesFieldNumber;
#endif  // !_MSC_VER

QDownloadLib::QDownloadLib()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QDownloadLib::InitAsDefaultInstance() {
}

QDownloadLib::QDownloadLib(const QDownloadLib& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QDownloadLib::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QDownloadLib::~QDownloadLib() {
  SharedDtor();
}

void QDownloadLib::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QDownloadLib::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QDownloadLib::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QDownloadLib_descriptor_;
}

const QDownloadLib& QDownloadLib::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DownloadLib_2eproto();
  return *default_instance_;
}

QDownloadLib* QDownloadLib::default_instance_ = NULL;

QDownloadLib* QDownloadLib::New() const {
  return new QDownloadLib;
}

void QDownloadLib::Clear() {
  vercodes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QDownloadLib::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 VerCodes = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_vercodes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10, input, this->mutable_vercodes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QDownloadLib::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 VerCodes = 1 [packed = true];
  if (this->vercodes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_vercodes_cached_byte_size_);
  }
  for (int i = 0; i < this->vercodes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->vercodes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QDownloadLib::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 VerCodes = 1 [packed = true];
  if (this->vercodes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _vercodes_cached_byte_size_, target);
  }
  for (int i = 0; i < this->vercodes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->vercodes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QDownloadLib::ByteSize() const {
  int total_size = 0;

  // repeated int64 VerCodes = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->vercodes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->vercodes(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vercodes_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QDownloadLib::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QDownloadLib* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QDownloadLib*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QDownloadLib::MergeFrom(const QDownloadLib& from) {
  GOOGLE_CHECK_NE(&from, this);
  vercodes_.MergeFrom(from.vercodes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QDownloadLib::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QDownloadLib::CopyFrom(const QDownloadLib& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QDownloadLib::IsInitialized() const {

  return true;
}

void QDownloadLib::Swap(QDownloadLib* other) {
  if (other != this) {
    vercodes_.Swap(&other->vercodes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QDownloadLib::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QDownloadLib_descriptor_;
  metadata.reflection = QDownloadLib_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ADownloadLib::kStatsFieldNumber;
const int ADownloadLib::kRejectedVerCodesFieldNumber;
const int ADownloadLib::kJKTableFieldNumber;
#endif  // !_MSC_VER

ADownloadLib::ADownloadLib()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ADownloadLib::InitAsDefaultInstance() {
}

ADownloadLib::ADownloadLib(const ADownloadLib& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ADownloadLib::SharedCtor() {
  _cached_size_ = 0;
  stats_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ADownloadLib::~ADownloadLib() {
  SharedDtor();
}

void ADownloadLib::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ADownloadLib::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADownloadLib::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADownloadLib_descriptor_;
}

const ADownloadLib& ADownloadLib::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DownloadLib_2eproto();
  return *default_instance_;
}

ADownloadLib* ADownloadLib::default_instance_ = NULL;

ADownloadLib* ADownloadLib::New() const {
  return new ADownloadLib;
}

void ADownloadLib::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stats_ = 0;
  }
  rejectedvercodes_.Clear();
  jk_table_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ADownloadLib::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .transMsg.EReturnStatus Stats = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::EReturnStatus_IsValid(value)) {
            set_stats(static_cast< ::transMsg::EReturnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_RejectedVerCodes;
        break;
      }

      // repeated int64 RejectedVerCodes = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RejectedVerCodes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_rejectedvercodes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26, input, this->mutable_rejectedvercodes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(810)) goto parse_JK_Table;
        break;
      }

      // repeated .transMsg.JK_Table JK_Table = 101;
      case 101: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_JK_Table:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_jk_table()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(810)) goto parse_JK_Table;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ADownloadLib::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stats(), output);
  }

  // repeated int64 RejectedVerCodes = 3 [packed = true];
  if (this->rejectedvercodes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rejectedvercodes_cached_byte_size_);
  }
  for (int i = 0; i < this->rejectedvercodes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->rejectedvercodes(i), output);
  }

  // repeated .transMsg.JK_Table JK_Table = 101;
  for (int i = 0; i < this->jk_table_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, this->jk_table(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ADownloadLib::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stats(), target);
  }

  // repeated int64 RejectedVerCodes = 3 [packed = true];
  if (this->rejectedvercodes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rejectedvercodes_cached_byte_size_, target);
  }
  for (int i = 0; i < this->rejectedvercodes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->rejectedvercodes(i), target);
  }

  // repeated .transMsg.JK_Table JK_Table = 101;
  for (int i = 0; i < this->jk_table_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        101, this->jk_table(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ADownloadLib::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .transMsg.EReturnStatus Stats = 1;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stats());
    }

  }
  // repeated int64 RejectedVerCodes = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->rejectedvercodes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->rejectedvercodes(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rejectedvercodes_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .transMsg.JK_Table JK_Table = 101;
  total_size += 2 * this->jk_table_size();
  for (int i = 0; i < this->jk_table_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->jk_table(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADownloadLib::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ADownloadLib* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ADownloadLib*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ADownloadLib::MergeFrom(const ADownloadLib& from) {
  GOOGLE_CHECK_NE(&from, this);
  rejectedvercodes_.MergeFrom(from.rejectedvercodes_);
  jk_table_.MergeFrom(from.jk_table_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stats()) {
      set_stats(from.stats());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ADownloadLib::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADownloadLib::CopyFrom(const ADownloadLib& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADownloadLib::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < jk_table_size(); i++) {
    if (!this->jk_table(i).IsInitialized()) return false;
  }
  return true;
}

void ADownloadLib::Swap(ADownloadLib* other) {
  if (other != this) {
    std::swap(stats_, other->stats_);
    rejectedvercodes_.Swap(&other->rejectedvercodes_);
    jk_table_.Swap(&other->jk_table_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ADownloadLib::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADownloadLib_descriptor_;
  metadata.reflection = ADownloadLib_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

// @@protoc_insertion_point(global_scope)
