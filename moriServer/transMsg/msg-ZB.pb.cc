// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg-ZB.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg-ZB.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

namespace {

const ::google::protobuf::Descriptor* ZB_BoardGapInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZB_BoardGapInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZB_BoardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZB_BoardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZB_BoardSealInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZB_BoardSealInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZB_Objects_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZB_Objects_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZB_OrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZB_OrderInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZB_Table_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZB_Table_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_2dZB_2eproto() {
  protobuf_AddDesc_msg_2dZB_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg-ZB.proto");
  GOOGLE_CHECK(file != NULL);
  ZB_BoardGapInfo_descriptor_ = file->message_type(0);
  static const int ZB_BoardGapInfo_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, ordercate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, factoryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, boardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, gapindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, gapshape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, xlen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, ylen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, square_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, xoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, yoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, zoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, ordercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, oldtablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, oldid_),
  };
  ZB_BoardGapInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ZB_BoardGapInfo_descriptor_,
      ZB_BoardGapInfo::default_instance_,
      ZB_BoardGapInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardGapInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ZB_BoardGapInfo));
  ZB_BoardInfo_descriptor_ = file->message_type(1);
  static const int ZB_BoardInfo_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, ordercate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, factoryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, boardtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, materialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, cabinetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, grain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, isuseradd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, xlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, ylength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, zlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, square_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, cutxlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, cutylength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, ordercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, objectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, objectcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, materialname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, cabinetname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, cabinetcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, oldtablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, oldid_),
  };
  ZB_BoardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ZB_BoardInfo_descriptor_,
      ZB_BoardInfo::default_instance_,
      ZB_BoardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ZB_BoardInfo));
  ZB_BoardSealInfo_descriptor_ = file->message_type(2);
  static const int ZB_BoardSealInfo_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, ordercate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, factoryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, boardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, sealindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, materialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, premill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, ordercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, materialcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, materialname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, oldtablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, oldid_),
  };
  ZB_BoardSealInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ZB_BoardSealInfo_descriptor_,
      ZB_BoardSealInfo::default_instance_,
      ZB_BoardSealInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_BoardSealInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ZB_BoardSealInfo));
  ZB_Objects_descriptor_ = file->message_type(3);
  static const int ZB_Objects_offsets_[29] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, ordercate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, factoryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, objecttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, parentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, gtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, xlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, ylength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, zlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, shapexlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, shapezlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, gapxlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, gapylength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, gapzlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, isstandard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, isuseradd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, materialplanid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, cabgaptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, cabshape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, ordercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, materialplanname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, barcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, remarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, oldtablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, oldid_),
  };
  ZB_Objects_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ZB_Objects_descriptor_,
      ZB_Objects::default_instance_,
      ZB_Objects_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Objects, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ZB_Objects));
  ZB_OrderInfo_descriptor_ = file->message_type(4);
  static const int ZB_OrderInfo_offsets_[47] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, ordercate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, parentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, ordertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, orderindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, factoryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, vercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, presurveyorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, resurveyorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, designerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, sellerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, auditorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, square_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, presurveytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, resurveytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, ordertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, deliverytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, installtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, shopname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, shopcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, ordercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, designername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, designerusercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, presurveyorname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, presurveyorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, resurveyorname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, resurveyorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, sellername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, sellerusercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, auditorname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, auditorusercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, geocode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, geoname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, ordertitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, customername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, customertel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, customerpostcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, customerqq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, customeremail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, installaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, orderremarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, planname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, planremarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, attachfilepath_),
  };
  ZB_OrderInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ZB_OrderInfo_descriptor_,
      ZB_OrderInfo::default_instance_,
      ZB_OrderInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_OrderInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ZB_OrderInfo));
  ZB_Table_descriptor_ = file->message_type(5);
  static const int ZB_Table_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Table, zb_boardgapinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Table, zb_boardinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Table, zb_boardsealinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Table, zb_objects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Table, zb_orderinfo_),
  };
  ZB_Table_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ZB_Table_descriptor_,
      ZB_Table::default_instance_,
      ZB_Table_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Table, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZB_Table, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ZB_Table));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_2dZB_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ZB_BoardGapInfo_descriptor_, &ZB_BoardGapInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ZB_BoardInfo_descriptor_, &ZB_BoardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ZB_BoardSealInfo_descriptor_, &ZB_BoardSealInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ZB_Objects_descriptor_, &ZB_Objects::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ZB_OrderInfo_descriptor_, &ZB_OrderInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ZB_Table_descriptor_, &ZB_Table::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_2dZB_2eproto() {
  delete ZB_BoardGapInfo::default_instance_;
  delete ZB_BoardGapInfo_reflection_;
  delete ZB_BoardInfo::default_instance_;
  delete ZB_BoardInfo_reflection_;
  delete ZB_BoardSealInfo::default_instance_;
  delete ZB_BoardSealInfo_reflection_;
  delete ZB_Objects::default_instance_;
  delete ZB_Objects_reflection_;
  delete ZB_OrderInfo::default_instance_;
  delete ZB_OrderInfo_reflection_;
  delete ZB_Table::default_instance_;
  delete ZB_Table_reflection_;
}

void protobuf_AddDesc_msg_2dZB_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014msg-ZB.proto\022\010transMsg\"\244\002\n\017ZB_BoardGap"
    "Info\022\016\n\006ItemID\030\001 \002(\003\022\021\n\tOrderCate\030\002 \002(\005\022"
    "\017\n\007OrderID\030\003 \002(\003\022\021\n\tFactoryID\030\004 \002(\005\022\017\n\007B"
    "oardID\030\005 \002(\003\022\020\n\010GapIndex\030\006 \002(\005\022\020\n\010GapSha"
    "pe\030\007 \002(\005\022\014\n\004XLen\030\010 \002(\001\022\014\n\004YLen\030\t \002(\001\022\016\n\006"
    "Square\030\n \002(\001\022\017\n\007XOffset\030\013 \002(\001\022\017\n\007YOffset"
    "\030\014 \002(\001\022\017\n\007ZOffset\030\r \002(\001\022\021\n\tOrderCode\030\016 \002"
    "(\t\022\024\n\014OldTableName\030\017 \002(\t\022\r\n\005OldID\030\020 \002(\005\""
    "\334\003\n\014ZB_BoardInfo\022\016\n\006ItemID\030\001 \002(\003\022\021\n\tOrde"
    "rCate\030\002 \002(\005\022\017\n\007OrderID\030\003 \002(\003\022\021\n\tFactoryI"
    "D\030\004 \002(\005\022\021\n\tBoardType\030\005 \002(\005\022\020\n\010ObjectID\030\006"
    " \002(\003\022\022\n\nMaterialID\030\007 \002(\005\022\021\n\tCabinetID\030\010 "
    "\002(\003\022\r\n\005Grain\030\t \002(\005\022\021\n\tIsUserAdd\030\n \002(\010\022\017\n"
    "\007XLength\030\013 \002(\001\022\017\n\007YLength\030\014 \002(\001\022\017\n\007ZLeng"
    "th\030\r \002(\001\022\016\n\006Square\030\016 \002(\001\022\022\n\nCutXLength\030\017"
    " \002(\001\022\022\n\nCutYLength\030\020 \002(\001\022\021\n\tOrderCode\030\021 "
    "\002(\t\022\014\n\004Name\030\022 \002(\t\022\022\n\nObjectName\030\023 \002(\t\022\022\n"
    "\nObjectCode\030\024 \002(\t\022\024\n\014MaterialName\030\025 \002(\t\022"
    "\023\n\013CabinetName\030\026 \002(\t\022\023\n\013CabinetCode\030\027 \002("
    "\t\022\024\n\014OldTableName\030\030 \002(\t\022\r\n\005OldID\030\031 \002(\005\"\206"
    "\002\n\020ZB_BoardSealInfo\022\016\n\006ItemID\030\001 \002(\003\022\021\n\tO"
    "rderCate\030\002 \002(\005\022\017\n\007OrderID\030\003 \002(\003\022\021\n\tFacto"
    "ryID\030\004 \002(\005\022\017\n\007BoardID\030\005 \002(\003\022\021\n\tSealIndex"
    "\030\006 \002(\005\022\022\n\nMaterialID\030\007 \002(\005\022\017\n\007PreMill\030\010 "
    "\002(\001\022\021\n\tOrderCode\030\t \002(\t\022\024\n\014MaterialCode\030\n"
    " \002(\t\022\024\n\014MaterialName\030\013 \002(\t\022\024\n\014OldTableNa"
    "me\030\014 \002(\t\022\r\n\005OldID\030\r \002(\005\"\250\004\n\nZB_Objects\022\016"
    "\n\006ItemID\030\001 \002(\003\022\021\n\tOrderCate\030\002 \002(\005\022\017\n\007Ord"
    "erID\030\003 \002(\003\022\021\n\tFactoryID\030\004 \002(\005\022\022\n\nObjectT"
    "ype\030\005 \002(\005\022\020\n\010ParentID\030\006 \002(\003\022\r\n\005GType\030\007 \002"
    "(\005\022\017\n\007XLength\030\010 \002(\001\022\017\n\007YLength\030\t \002(\001\022\017\n\007"
    "ZLength\030\n \002(\001\022\024\n\014ShapeXLength\030\013 \002(\001\022\024\n\014S"
    "hapeZLength\030\014 \002(\001\022\022\n\nGapXLength\030\r \002(\001\022\022\n"
    "\nGapYLength\030\016 \002(\001\022\022\n\nGapZLength\030\017 \002(\001\022\016\n"
    "\006Amount\030\020 \002(\001\022\022\n\nIsStandard\030\021 \002(\010\022\021\n\tIsU"
    "serAdd\030\022 \002(\010\022\026\n\016MaterialPlanID\030\023 \002(\005\022\022\n\n"
    "CabGapType\030\024 \002(\005\022\020\n\010CabShape\030\025 \002(\005\022\021\n\tOr"
    "derCode\030\026 \002(\t\022\014\n\004Name\030\027 \002(\t\022\014\n\004Code\030\030 \002("
    "\t\022\030\n\020MaterialPlanName\030\031 \002(\t\022\017\n\007BarCode\030\032"
    " \002(\t\022\017\n\007Remarks\030\033 \002(\t\022\024\n\014OldTableName\030\034 "
    "\002(\t\022\r\n\005OldID\030\035 \002(\005\"\332\007\n\014ZB_OrderInfo\022\016\n\006I"
    "temID\030\001 \002(\003\022\021\n\tOrderCate\030\002 \002(\005\022\017\n\007OrderI"
    "D\030\003 \002(\003\022\020\n\010ParentID\030\004 \002(\003\022\021\n\tOrderType\030\005"
    " \002(\005\022\022\n\nOrderIndex\030\006 \002(\005\022\021\n\tFactoryID\030\007 "
    "\002(\005\022\017\n\007VerCode\030\010 \002(\003\022\016\n\006ShopID\030\t \002(\005\022\025\n\r"
    "PreSurveyorID\030\n \002(\005\022\024\n\014ReSurveyorID\030\013 \002("
    "\005\022\022\n\nDesignerID\030\014 \002(\005\022\020\n\010SellerID\030\r \002(\005\022"
    "\021\n\tAuditorID\030\016 \002(\005\022\016\n\006Square\030\017 \002(\001\022\022\n\nCr"
    "eateTime\030\020 \002(\003\022\025\n\rPreSurveyTime\030\021 \002(\003\022\024\n"
    "\014ReSurveyTime\030\022 \002(\003\022\021\n\tOrderTime\030\023 \002(\003\022\024"
    "\n\014DeliveryTime\030\024 \002(\003\022\023\n\013InstallTime\030\025 \002("
    "\003\022\020\n\010ShopName\030\026 \002(\t\022\020\n\010ShopCode\030\027 \002(\t\022\021\n"
    "\tOrderCode\030\030 \002(\t\022\024\n\014DesignerName\030\031 \002(\t\022\030"
    "\n\020DesignerUserCode\030\032 \002(\t\022\027\n\017PreSurveyorN"
    "ame\030\033 \002(\t\022\027\n\017PreSurveyorCode\030\034 \002(\t\022\026\n\016Re"
    "SurveyorName\030\035 \002(\t\022\026\n\016ReSurveyorCode\030\036 \002"
    "(\t\022\022\n\nSellerName\030\037 \002(\t\022\026\n\016SellerUserCode"
    "\030  \002(\t\022\023\n\013AuditorName\030! \002(\t\022\027\n\017AuditorUs"
    "erCode\030\" \002(\t\022\017\n\007GeoCode\030# \002(\t\022\017\n\007GeoName"
    "\030$ \002(\t\022\022\n\nOrderTitle\030% \002(\t\022\024\n\014CustomerNa"
    "me\030& \002(\t\022\023\n\013CustomerTel\030\' \002(\t\022\030\n\020Custome"
    "rPostCode\030( \002(\t\022\022\n\nCustomerQQ\030) \002(\t\022\025\n\rC"
    "ustomerEmail\030* \002(\t\022\026\n\016InstallAddress\030+ \002"
    "(\t\022\024\n\014OrderRemarks\030, \002(\t\022\020\n\010PlanName\030- \002"
    "(\t\022\023\n\013PlanRemarks\030. \002(\t\022\026\n\016AttachFilePat"
    "h\030/ \002(\t\"\372\001\n\010ZB_Table\0222\n\017ZB_BoardGapInfo\030"
    "\001 \003(\0132\031.transMsg.ZB_BoardGapInfo\022,\n\014ZB_B"
    "oardInfo\030\002 \003(\0132\026.transMsg.ZB_BoardInfo\0224"
    "\n\020ZB_BoardSealInfo\030\003 \003(\0132\032.transMsg.ZB_B"
    "oardSealInfo\022(\n\nZB_Objects\030\004 \003(\0132\024.trans"
    "Msg.ZB_Objects\022,\n\014ZB_OrderInfo\030\005 \003(\0132\026.t"
    "ransMsg.ZB_OrderInfo", 2860);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg-ZB.proto", &protobuf_RegisterTypes);
  ZB_BoardGapInfo::default_instance_ = new ZB_BoardGapInfo();
  ZB_BoardInfo::default_instance_ = new ZB_BoardInfo();
  ZB_BoardSealInfo::default_instance_ = new ZB_BoardSealInfo();
  ZB_Objects::default_instance_ = new ZB_Objects();
  ZB_OrderInfo::default_instance_ = new ZB_OrderInfo();
  ZB_Table::default_instance_ = new ZB_Table();
  ZB_BoardGapInfo::default_instance_->InitAsDefaultInstance();
  ZB_BoardInfo::default_instance_->InitAsDefaultInstance();
  ZB_BoardSealInfo::default_instance_->InitAsDefaultInstance();
  ZB_Objects::default_instance_->InitAsDefaultInstance();
  ZB_OrderInfo::default_instance_->InitAsDefaultInstance();
  ZB_Table::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_2dZB_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_2dZB_2eproto {
  StaticDescriptorInitializer_msg_2dZB_2eproto() {
    protobuf_AddDesc_msg_2dZB_2eproto();
  }
} static_descriptor_initializer_msg_2dZB_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ZB_BoardGapInfo::kItemIDFieldNumber;
const int ZB_BoardGapInfo::kOrderCateFieldNumber;
const int ZB_BoardGapInfo::kOrderIDFieldNumber;
const int ZB_BoardGapInfo::kFactoryIDFieldNumber;
const int ZB_BoardGapInfo::kBoardIDFieldNumber;
const int ZB_BoardGapInfo::kGapIndexFieldNumber;
const int ZB_BoardGapInfo::kGapShapeFieldNumber;
const int ZB_BoardGapInfo::kXLenFieldNumber;
const int ZB_BoardGapInfo::kYLenFieldNumber;
const int ZB_BoardGapInfo::kSquareFieldNumber;
const int ZB_BoardGapInfo::kXOffsetFieldNumber;
const int ZB_BoardGapInfo::kYOffsetFieldNumber;
const int ZB_BoardGapInfo::kZOffsetFieldNumber;
const int ZB_BoardGapInfo::kOrderCodeFieldNumber;
const int ZB_BoardGapInfo::kOldTableNameFieldNumber;
const int ZB_BoardGapInfo::kOldIDFieldNumber;
#endif  // !_MSC_VER

ZB_BoardGapInfo::ZB_BoardGapInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ZB_BoardGapInfo::InitAsDefaultInstance() {
}

ZB_BoardGapInfo::ZB_BoardGapInfo(const ZB_BoardGapInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ZB_BoardGapInfo::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ordercate_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  factoryid_ = 0;
  boardid_ = GOOGLE_LONGLONG(0);
  gapindex_ = 0;
  gapshape_ = 0;
  xlen_ = 0;
  ylen_ = 0;
  square_ = 0;
  xoffset_ = 0;
  yoffset_ = 0;
  zoffset_ = 0;
  ordercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldtablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZB_BoardGapInfo::~ZB_BoardGapInfo() {
  SharedDtor();
}

void ZB_BoardGapInfo::SharedDtor() {
  if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
    delete ordercode_;
  }
  if (oldtablename_ != &::google::protobuf::internal::kEmptyString) {
    delete oldtablename_;
  }
  if (this != default_instance_) {
  }
}

void ZB_BoardGapInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZB_BoardGapInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZB_BoardGapInfo_descriptor_;
}

const ZB_BoardGapInfo& ZB_BoardGapInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_2dZB_2eproto();
  return *default_instance_;
}

ZB_BoardGapInfo* ZB_BoardGapInfo::default_instance_ = NULL;

ZB_BoardGapInfo* ZB_BoardGapInfo::New() const {
  return new ZB_BoardGapInfo;
}

void ZB_BoardGapInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    ordercate_ = 0;
    orderid_ = GOOGLE_LONGLONG(0);
    factoryid_ = 0;
    boardid_ = GOOGLE_LONGLONG(0);
    gapindex_ = 0;
    gapshape_ = 0;
    xlen_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ylen_ = 0;
    square_ = 0;
    xoffset_ = 0;
    yoffset_ = 0;
    zoffset_ = 0;
    if (has_ordercode()) {
      if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
        ordercode_->clear();
      }
    }
    if (has_oldtablename()) {
      if (oldtablename_ != &::google::protobuf::internal::kEmptyString) {
        oldtablename_->clear();
      }
    }
    oldid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ZB_BoardGapInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ItemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_OrderCate;
        break;
      }

      // required int32 OrderCate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderCate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordercate_)));
          set_has_ordercate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_OrderID;
        break;
      }

      // required int64 OrderID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_FactoryID;
        break;
      }

      // required int32 FactoryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FactoryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &factoryid_)));
          set_has_factoryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_BoardID;
        break;
      }

      // required int64 BoardID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_BoardID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boardid_)));
          set_has_boardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_GapIndex;
        break;
      }

      // required int32 GapIndex = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GapIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gapindex_)));
          set_has_gapindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_GapShape;
        break;
      }

      // required int32 GapShape = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GapShape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gapshape_)));
          set_has_gapshape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_XLen;
        break;
      }

      // required double XLen = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_XLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xlen_)));
          set_has_xlen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(73)) goto parse_YLen;
        break;
      }

      // required double YLen = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_YLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ylen_)));
          set_has_ylen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(81)) goto parse_Square;
        break;
      }

      // required double Square = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Square:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &square_)));
          set_has_square();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_XOffset;
        break;
      }

      // required double XOffset = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_XOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xoffset_)));
          set_has_xoffset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(97)) goto parse_YOffset;
        break;
      }

      // required double YOffset = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_YOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yoffset_)));
          set_has_yoffset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(105)) goto parse_ZOffset;
        break;
      }

      // required double ZOffset = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ZOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zoffset_)));
          set_has_zoffset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_OrderCode;
        break;
      }

      // required string OrderCode = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordercode().data(), this->ordercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_OldTableName;
        break;
      }

      // required string OldTableName = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OldTableName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldtablename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oldtablename().data(), this->oldtablename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_OldID;
        break;
      }

      // required int32 OldID = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OldID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oldid_)));
          set_has_oldid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ZB_BoardGapInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ordercate(), output);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // required int32 FactoryID = 4;
  if (has_factoryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->factoryid(), output);
  }

  // required int64 BoardID = 5;
  if (has_boardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->boardid(), output);
  }

  // required int32 GapIndex = 6;
  if (has_gapindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->gapindex(), output);
  }

  // required int32 GapShape = 7;
  if (has_gapshape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gapshape(), output);
  }

  // required double XLen = 8;
  if (has_xlen()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->xlen(), output);
  }

  // required double YLen = 9;
  if (has_ylen()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->ylen(), output);
  }

  // required double Square = 10;
  if (has_square()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->square(), output);
  }

  // required double XOffset = 11;
  if (has_xoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->xoffset(), output);
  }

  // required double YOffset = 12;
  if (has_yoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->yoffset(), output);
  }

  // required double ZOffset = 13;
  if (has_zoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->zoffset(), output);
  }

  // required string OrderCode = 14;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->ordercode(), output);
  }

  // required string OldTableName = 15;
  if (has_oldtablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldtablename().data(), this->oldtablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->oldtablename(), output);
  }

  // required int32 OldID = 16;
  if (has_oldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->oldid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ZB_BoardGapInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ordercate(), target);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // required int32 FactoryID = 4;
  if (has_factoryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->factoryid(), target);
  }

  // required int64 BoardID = 5;
  if (has_boardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->boardid(), target);
  }

  // required int32 GapIndex = 6;
  if (has_gapindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->gapindex(), target);
  }

  // required int32 GapShape = 7;
  if (has_gapshape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gapshape(), target);
  }

  // required double XLen = 8;
  if (has_xlen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->xlen(), target);
  }

  // required double YLen = 9;
  if (has_ylen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->ylen(), target);
  }

  // required double Square = 10;
  if (has_square()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->square(), target);
  }

  // required double XOffset = 11;
  if (has_xoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->xoffset(), target);
  }

  // required double YOffset = 12;
  if (has_yoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->yoffset(), target);
  }

  // required double ZOffset = 13;
  if (has_zoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->zoffset(), target);
  }

  // required string OrderCode = 14;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->ordercode(), target);
  }

  // required string OldTableName = 15;
  if (has_oldtablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldtablename().data(), this->oldtablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->oldtablename(), target);
  }

  // required int32 OldID = 16;
  if (has_oldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->oldid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ZB_BoardGapInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 ItemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // required int32 OrderCate = 2;
    if (has_ordercate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ordercate());
    }

    // required int64 OrderID = 3;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required int32 FactoryID = 4;
    if (has_factoryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->factoryid());
    }

    // required int64 BoardID = 5;
    if (has_boardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boardid());
    }

    // required int32 GapIndex = 6;
    if (has_gapindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gapindex());
    }

    // required int32 GapShape = 7;
    if (has_gapshape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gapshape());
    }

    // required double XLen = 8;
    if (has_xlen()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required double YLen = 9;
    if (has_ylen()) {
      total_size += 1 + 8;
    }

    // required double Square = 10;
    if (has_square()) {
      total_size += 1 + 8;
    }

    // required double XOffset = 11;
    if (has_xoffset()) {
      total_size += 1 + 8;
    }

    // required double YOffset = 12;
    if (has_yoffset()) {
      total_size += 1 + 8;
    }

    // required double ZOffset = 13;
    if (has_zoffset()) {
      total_size += 1 + 8;
    }

    // required string OrderCode = 14;
    if (has_ordercode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordercode());
    }

    // required string OldTableName = 15;
    if (has_oldtablename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldtablename());
    }

    // required int32 OldID = 16;
    if (has_oldid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oldid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZB_BoardGapInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ZB_BoardGapInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ZB_BoardGapInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ZB_BoardGapInfo::MergeFrom(const ZB_BoardGapInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_ordercate()) {
      set_ordercate(from.ordercate());
    }
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_factoryid()) {
      set_factoryid(from.factoryid());
    }
    if (from.has_boardid()) {
      set_boardid(from.boardid());
    }
    if (from.has_gapindex()) {
      set_gapindex(from.gapindex());
    }
    if (from.has_gapshape()) {
      set_gapshape(from.gapshape());
    }
    if (from.has_xlen()) {
      set_xlen(from.xlen());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ylen()) {
      set_ylen(from.ylen());
    }
    if (from.has_square()) {
      set_square(from.square());
    }
    if (from.has_xoffset()) {
      set_xoffset(from.xoffset());
    }
    if (from.has_yoffset()) {
      set_yoffset(from.yoffset());
    }
    if (from.has_zoffset()) {
      set_zoffset(from.zoffset());
    }
    if (from.has_ordercode()) {
      set_ordercode(from.ordercode());
    }
    if (from.has_oldtablename()) {
      set_oldtablename(from.oldtablename());
    }
    if (from.has_oldid()) {
      set_oldid(from.oldid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ZB_BoardGapInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZB_BoardGapInfo::CopyFrom(const ZB_BoardGapInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZB_BoardGapInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000ffff) != 0x0000ffff) return false;

  return true;
}

void ZB_BoardGapInfo::Swap(ZB_BoardGapInfo* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(ordercate_, other->ordercate_);
    std::swap(orderid_, other->orderid_);
    std::swap(factoryid_, other->factoryid_);
    std::swap(boardid_, other->boardid_);
    std::swap(gapindex_, other->gapindex_);
    std::swap(gapshape_, other->gapshape_);
    std::swap(xlen_, other->xlen_);
    std::swap(ylen_, other->ylen_);
    std::swap(square_, other->square_);
    std::swap(xoffset_, other->xoffset_);
    std::swap(yoffset_, other->yoffset_);
    std::swap(zoffset_, other->zoffset_);
    std::swap(ordercode_, other->ordercode_);
    std::swap(oldtablename_, other->oldtablename_);
    std::swap(oldid_, other->oldid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ZB_BoardGapInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZB_BoardGapInfo_descriptor_;
  metadata.reflection = ZB_BoardGapInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ZB_BoardInfo::kItemIDFieldNumber;
const int ZB_BoardInfo::kOrderCateFieldNumber;
const int ZB_BoardInfo::kOrderIDFieldNumber;
const int ZB_BoardInfo::kFactoryIDFieldNumber;
const int ZB_BoardInfo::kBoardTypeFieldNumber;
const int ZB_BoardInfo::kObjectIDFieldNumber;
const int ZB_BoardInfo::kMaterialIDFieldNumber;
const int ZB_BoardInfo::kCabinetIDFieldNumber;
const int ZB_BoardInfo::kGrainFieldNumber;
const int ZB_BoardInfo::kIsUserAddFieldNumber;
const int ZB_BoardInfo::kXLengthFieldNumber;
const int ZB_BoardInfo::kYLengthFieldNumber;
const int ZB_BoardInfo::kZLengthFieldNumber;
const int ZB_BoardInfo::kSquareFieldNumber;
const int ZB_BoardInfo::kCutXLengthFieldNumber;
const int ZB_BoardInfo::kCutYLengthFieldNumber;
const int ZB_BoardInfo::kOrderCodeFieldNumber;
const int ZB_BoardInfo::kNameFieldNumber;
const int ZB_BoardInfo::kObjectNameFieldNumber;
const int ZB_BoardInfo::kObjectCodeFieldNumber;
const int ZB_BoardInfo::kMaterialNameFieldNumber;
const int ZB_BoardInfo::kCabinetNameFieldNumber;
const int ZB_BoardInfo::kCabinetCodeFieldNumber;
const int ZB_BoardInfo::kOldTableNameFieldNumber;
const int ZB_BoardInfo::kOldIDFieldNumber;
#endif  // !_MSC_VER

ZB_BoardInfo::ZB_BoardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ZB_BoardInfo::InitAsDefaultInstance() {
}

ZB_BoardInfo::ZB_BoardInfo(const ZB_BoardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ZB_BoardInfo::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ordercate_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  factoryid_ = 0;
  boardtype_ = 0;
  objectid_ = GOOGLE_LONGLONG(0);
  materialid_ = 0;
  cabinetid_ = GOOGLE_LONGLONG(0);
  grain_ = 0;
  isuseradd_ = false;
  xlength_ = 0;
  ylength_ = 0;
  zlength_ = 0;
  square_ = 0;
  cutxlength_ = 0;
  cutylength_ = 0;
  ordercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  objectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  objectcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  materialname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cabinetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cabinetcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldtablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZB_BoardInfo::~ZB_BoardInfo() {
  SharedDtor();
}

void ZB_BoardInfo::SharedDtor() {
  if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
    delete ordercode_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (objectname_ != &::google::protobuf::internal::kEmptyString) {
    delete objectname_;
  }
  if (objectcode_ != &::google::protobuf::internal::kEmptyString) {
    delete objectcode_;
  }
  if (materialname_ != &::google::protobuf::internal::kEmptyString) {
    delete materialname_;
  }
  if (cabinetname_ != &::google::protobuf::internal::kEmptyString) {
    delete cabinetname_;
  }
  if (cabinetcode_ != &::google::protobuf::internal::kEmptyString) {
    delete cabinetcode_;
  }
  if (oldtablename_ != &::google::protobuf::internal::kEmptyString) {
    delete oldtablename_;
  }
  if (this != default_instance_) {
  }
}

void ZB_BoardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZB_BoardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZB_BoardInfo_descriptor_;
}

const ZB_BoardInfo& ZB_BoardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_2dZB_2eproto();
  return *default_instance_;
}

ZB_BoardInfo* ZB_BoardInfo::default_instance_ = NULL;

ZB_BoardInfo* ZB_BoardInfo::New() const {
  return new ZB_BoardInfo;
}

void ZB_BoardInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    ordercate_ = 0;
    orderid_ = GOOGLE_LONGLONG(0);
    factoryid_ = 0;
    boardtype_ = 0;
    objectid_ = GOOGLE_LONGLONG(0);
    materialid_ = 0;
    cabinetid_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    grain_ = 0;
    isuseradd_ = false;
    xlength_ = 0;
    ylength_ = 0;
    zlength_ = 0;
    square_ = 0;
    cutxlength_ = 0;
    cutylength_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_ordercode()) {
      if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
        ordercode_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_objectname()) {
      if (objectname_ != &::google::protobuf::internal::kEmptyString) {
        objectname_->clear();
      }
    }
    if (has_objectcode()) {
      if (objectcode_ != &::google::protobuf::internal::kEmptyString) {
        objectcode_->clear();
      }
    }
    if (has_materialname()) {
      if (materialname_ != &::google::protobuf::internal::kEmptyString) {
        materialname_->clear();
      }
    }
    if (has_cabinetname()) {
      if (cabinetname_ != &::google::protobuf::internal::kEmptyString) {
        cabinetname_->clear();
      }
    }
    if (has_cabinetcode()) {
      if (cabinetcode_ != &::google::protobuf::internal::kEmptyString) {
        cabinetcode_->clear();
      }
    }
    if (has_oldtablename()) {
      if (oldtablename_ != &::google::protobuf::internal::kEmptyString) {
        oldtablename_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    oldid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ZB_BoardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ItemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_OrderCate;
        break;
      }

      // required int32 OrderCate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderCate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordercate_)));
          set_has_ordercate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_OrderID;
        break;
      }

      // required int64 OrderID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_FactoryID;
        break;
      }

      // required int32 FactoryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FactoryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &factoryid_)));
          set_has_factoryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_BoardType;
        break;
      }

      // required int32 BoardType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_BoardType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boardtype_)));
          set_has_boardtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_ObjectID;
        break;
      }

      // required int64 ObjectID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_MaterialID;
        break;
      }

      // required int32 MaterialID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_MaterialID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &materialid_)));
          set_has_materialid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_CabinetID;
        break;
      }

      // required int64 CabinetID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_CabinetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cabinetid_)));
          set_has_cabinetid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_Grain;
        break;
      }

      // required int32 Grain = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Grain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grain_)));
          set_has_grain();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_IsUserAdd;
        break;
      }

      // required bool IsUserAdd = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_IsUserAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isuseradd_)));
          set_has_isuseradd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_XLength;
        break;
      }

      // required double XLength = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_XLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xlength_)));
          set_has_xlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(97)) goto parse_YLength;
        break;
      }

      // required double YLength = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_YLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ylength_)));
          set_has_ylength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(105)) goto parse_ZLength;
        break;
      }

      // required double ZLength = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ZLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zlength_)));
          set_has_zlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(113)) goto parse_Square;
        break;
      }

      // required double Square = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Square:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &square_)));
          set_has_square();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(121)) goto parse_CutXLength;
        break;
      }

      // required double CutXLength = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_CutXLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cutxlength_)));
          set_has_cutxlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(129)) goto parse_CutYLength;
        break;
      }

      // required double CutYLength = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_CutYLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cutylength_)));
          set_has_cutylength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_OrderCode;
        break;
      }

      // required string OrderCode = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordercode().data(), this->ordercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_Name;
        break;
      }

      // required string Name = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_ObjectName;
        break;
      }

      // required string ObjectName = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ObjectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objectname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->objectname().data(), this->objectname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_ObjectCode;
        break;
      }

      // required string ObjectCode = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ObjectCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objectcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->objectcode().data(), this->objectcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_MaterialName;
        break;
      }

      // required string MaterialName = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MaterialName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_materialname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->materialname().data(), this->materialname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_CabinetName;
        break;
      }

      // required string CabinetName = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CabinetName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cabinetname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cabinetname().data(), this->cabinetname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_CabinetCode;
        break;
      }

      // required string CabinetCode = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CabinetCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cabinetcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cabinetcode().data(), this->cabinetcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_OldTableName;
        break;
      }

      // required string OldTableName = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OldTableName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldtablename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oldtablename().data(), this->oldtablename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_OldID;
        break;
      }

      // required int32 OldID = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OldID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oldid_)));
          set_has_oldid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ZB_BoardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ordercate(), output);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // required int32 FactoryID = 4;
  if (has_factoryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->factoryid(), output);
  }

  // required int32 BoardType = 5;
  if (has_boardtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->boardtype(), output);
  }

  // required int64 ObjectID = 6;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->objectid(), output);
  }

  // required int32 MaterialID = 7;
  if (has_materialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->materialid(), output);
  }

  // required int64 CabinetID = 8;
  if (has_cabinetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->cabinetid(), output);
  }

  // required int32 Grain = 9;
  if (has_grain()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->grain(), output);
  }

  // required bool IsUserAdd = 10;
  if (has_isuseradd()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isuseradd(), output);
  }

  // required double XLength = 11;
  if (has_xlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->xlength(), output);
  }

  // required double YLength = 12;
  if (has_ylength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->ylength(), output);
  }

  // required double ZLength = 13;
  if (has_zlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->zlength(), output);
  }

  // required double Square = 14;
  if (has_square()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->square(), output);
  }

  // required double CutXLength = 15;
  if (has_cutxlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->cutxlength(), output);
  }

  // required double CutYLength = 16;
  if (has_cutylength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->cutylength(), output);
  }

  // required string OrderCode = 17;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->ordercode(), output);
  }

  // required string Name = 18;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->name(), output);
  }

  // required string ObjectName = 19;
  if (has_objectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objectname().data(), this->objectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->objectname(), output);
  }

  // required string ObjectCode = 20;
  if (has_objectcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objectcode().data(), this->objectcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->objectcode(), output);
  }

  // required string MaterialName = 21;
  if (has_materialname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->materialname().data(), this->materialname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->materialname(), output);
  }

  // required string CabinetName = 22;
  if (has_cabinetname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cabinetname().data(), this->cabinetname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->cabinetname(), output);
  }

  // required string CabinetCode = 23;
  if (has_cabinetcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cabinetcode().data(), this->cabinetcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->cabinetcode(), output);
  }

  // required string OldTableName = 24;
  if (has_oldtablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldtablename().data(), this->oldtablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->oldtablename(), output);
  }

  // required int32 OldID = 25;
  if (has_oldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->oldid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ZB_BoardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ordercate(), target);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // required int32 FactoryID = 4;
  if (has_factoryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->factoryid(), target);
  }

  // required int32 BoardType = 5;
  if (has_boardtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->boardtype(), target);
  }

  // required int64 ObjectID = 6;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->objectid(), target);
  }

  // required int32 MaterialID = 7;
  if (has_materialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->materialid(), target);
  }

  // required int64 CabinetID = 8;
  if (has_cabinetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->cabinetid(), target);
  }

  // required int32 Grain = 9;
  if (has_grain()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->grain(), target);
  }

  // required bool IsUserAdd = 10;
  if (has_isuseradd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->isuseradd(), target);
  }

  // required double XLength = 11;
  if (has_xlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->xlength(), target);
  }

  // required double YLength = 12;
  if (has_ylength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->ylength(), target);
  }

  // required double ZLength = 13;
  if (has_zlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->zlength(), target);
  }

  // required double Square = 14;
  if (has_square()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->square(), target);
  }

  // required double CutXLength = 15;
  if (has_cutxlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->cutxlength(), target);
  }

  // required double CutYLength = 16;
  if (has_cutylength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->cutylength(), target);
  }

  // required string OrderCode = 17;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->ordercode(), target);
  }

  // required string Name = 18;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->name(), target);
  }

  // required string ObjectName = 19;
  if (has_objectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objectname().data(), this->objectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->objectname(), target);
  }

  // required string ObjectCode = 20;
  if (has_objectcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objectcode().data(), this->objectcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->objectcode(), target);
  }

  // required string MaterialName = 21;
  if (has_materialname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->materialname().data(), this->materialname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->materialname(), target);
  }

  // required string CabinetName = 22;
  if (has_cabinetname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cabinetname().data(), this->cabinetname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->cabinetname(), target);
  }

  // required string CabinetCode = 23;
  if (has_cabinetcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cabinetcode().data(), this->cabinetcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->cabinetcode(), target);
  }

  // required string OldTableName = 24;
  if (has_oldtablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldtablename().data(), this->oldtablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->oldtablename(), target);
  }

  // required int32 OldID = 25;
  if (has_oldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->oldid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ZB_BoardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 ItemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // required int32 OrderCate = 2;
    if (has_ordercate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ordercate());
    }

    // required int64 OrderID = 3;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required int32 FactoryID = 4;
    if (has_factoryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->factoryid());
    }

    // required int32 BoardType = 5;
    if (has_boardtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boardtype());
    }

    // required int64 ObjectID = 6;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->objectid());
    }

    // required int32 MaterialID = 7;
    if (has_materialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->materialid());
    }

    // required int64 CabinetID = 8;
    if (has_cabinetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cabinetid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 Grain = 9;
    if (has_grain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grain());
    }

    // required bool IsUserAdd = 10;
    if (has_isuseradd()) {
      total_size += 1 + 1;
    }

    // required double XLength = 11;
    if (has_xlength()) {
      total_size += 1 + 8;
    }

    // required double YLength = 12;
    if (has_ylength()) {
      total_size += 1 + 8;
    }

    // required double ZLength = 13;
    if (has_zlength()) {
      total_size += 1 + 8;
    }

    // required double Square = 14;
    if (has_square()) {
      total_size += 1 + 8;
    }

    // required double CutXLength = 15;
    if (has_cutxlength()) {
      total_size += 1 + 8;
    }

    // required double CutYLength = 16;
    if (has_cutylength()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required string OrderCode = 17;
    if (has_ordercode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordercode());
    }

    // required string Name = 18;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string ObjectName = 19;
    if (has_objectname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->objectname());
    }

    // required string ObjectCode = 20;
    if (has_objectcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->objectcode());
    }

    // required string MaterialName = 21;
    if (has_materialname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->materialname());
    }

    // required string CabinetName = 22;
    if (has_cabinetname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cabinetname());
    }

    // required string CabinetCode = 23;
    if (has_cabinetcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cabinetcode());
    }

    // required string OldTableName = 24;
    if (has_oldtablename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldtablename());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required int32 OldID = 25;
    if (has_oldid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oldid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZB_BoardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ZB_BoardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ZB_BoardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ZB_BoardInfo::MergeFrom(const ZB_BoardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_ordercate()) {
      set_ordercate(from.ordercate());
    }
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_factoryid()) {
      set_factoryid(from.factoryid());
    }
    if (from.has_boardtype()) {
      set_boardtype(from.boardtype());
    }
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_materialid()) {
      set_materialid(from.materialid());
    }
    if (from.has_cabinetid()) {
      set_cabinetid(from.cabinetid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_grain()) {
      set_grain(from.grain());
    }
    if (from.has_isuseradd()) {
      set_isuseradd(from.isuseradd());
    }
    if (from.has_xlength()) {
      set_xlength(from.xlength());
    }
    if (from.has_ylength()) {
      set_ylength(from.ylength());
    }
    if (from.has_zlength()) {
      set_zlength(from.zlength());
    }
    if (from.has_square()) {
      set_square(from.square());
    }
    if (from.has_cutxlength()) {
      set_cutxlength(from.cutxlength());
    }
    if (from.has_cutylength()) {
      set_cutylength(from.cutylength());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_ordercode()) {
      set_ordercode(from.ordercode());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_objectname()) {
      set_objectname(from.objectname());
    }
    if (from.has_objectcode()) {
      set_objectcode(from.objectcode());
    }
    if (from.has_materialname()) {
      set_materialname(from.materialname());
    }
    if (from.has_cabinetname()) {
      set_cabinetname(from.cabinetname());
    }
    if (from.has_cabinetcode()) {
      set_cabinetcode(from.cabinetcode());
    }
    if (from.has_oldtablename()) {
      set_oldtablename(from.oldtablename());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_oldid()) {
      set_oldid(from.oldid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ZB_BoardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZB_BoardInfo::CopyFrom(const ZB_BoardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZB_BoardInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x01ffffff) != 0x01ffffff) return false;

  return true;
}

void ZB_BoardInfo::Swap(ZB_BoardInfo* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(ordercate_, other->ordercate_);
    std::swap(orderid_, other->orderid_);
    std::swap(factoryid_, other->factoryid_);
    std::swap(boardtype_, other->boardtype_);
    std::swap(objectid_, other->objectid_);
    std::swap(materialid_, other->materialid_);
    std::swap(cabinetid_, other->cabinetid_);
    std::swap(grain_, other->grain_);
    std::swap(isuseradd_, other->isuseradd_);
    std::swap(xlength_, other->xlength_);
    std::swap(ylength_, other->ylength_);
    std::swap(zlength_, other->zlength_);
    std::swap(square_, other->square_);
    std::swap(cutxlength_, other->cutxlength_);
    std::swap(cutylength_, other->cutylength_);
    std::swap(ordercode_, other->ordercode_);
    std::swap(name_, other->name_);
    std::swap(objectname_, other->objectname_);
    std::swap(objectcode_, other->objectcode_);
    std::swap(materialname_, other->materialname_);
    std::swap(cabinetname_, other->cabinetname_);
    std::swap(cabinetcode_, other->cabinetcode_);
    std::swap(oldtablename_, other->oldtablename_);
    std::swap(oldid_, other->oldid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ZB_BoardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZB_BoardInfo_descriptor_;
  metadata.reflection = ZB_BoardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ZB_BoardSealInfo::kItemIDFieldNumber;
const int ZB_BoardSealInfo::kOrderCateFieldNumber;
const int ZB_BoardSealInfo::kOrderIDFieldNumber;
const int ZB_BoardSealInfo::kFactoryIDFieldNumber;
const int ZB_BoardSealInfo::kBoardIDFieldNumber;
const int ZB_BoardSealInfo::kSealIndexFieldNumber;
const int ZB_BoardSealInfo::kMaterialIDFieldNumber;
const int ZB_BoardSealInfo::kPreMillFieldNumber;
const int ZB_BoardSealInfo::kOrderCodeFieldNumber;
const int ZB_BoardSealInfo::kMaterialCodeFieldNumber;
const int ZB_BoardSealInfo::kMaterialNameFieldNumber;
const int ZB_BoardSealInfo::kOldTableNameFieldNumber;
const int ZB_BoardSealInfo::kOldIDFieldNumber;
#endif  // !_MSC_VER

ZB_BoardSealInfo::ZB_BoardSealInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ZB_BoardSealInfo::InitAsDefaultInstance() {
}

ZB_BoardSealInfo::ZB_BoardSealInfo(const ZB_BoardSealInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ZB_BoardSealInfo::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ordercate_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  factoryid_ = 0;
  boardid_ = GOOGLE_LONGLONG(0);
  sealindex_ = 0;
  materialid_ = 0;
  premill_ = 0;
  ordercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  materialcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  materialname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldtablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZB_BoardSealInfo::~ZB_BoardSealInfo() {
  SharedDtor();
}

void ZB_BoardSealInfo::SharedDtor() {
  if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
    delete ordercode_;
  }
  if (materialcode_ != &::google::protobuf::internal::kEmptyString) {
    delete materialcode_;
  }
  if (materialname_ != &::google::protobuf::internal::kEmptyString) {
    delete materialname_;
  }
  if (oldtablename_ != &::google::protobuf::internal::kEmptyString) {
    delete oldtablename_;
  }
  if (this != default_instance_) {
  }
}

void ZB_BoardSealInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZB_BoardSealInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZB_BoardSealInfo_descriptor_;
}

const ZB_BoardSealInfo& ZB_BoardSealInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_2dZB_2eproto();
  return *default_instance_;
}

ZB_BoardSealInfo* ZB_BoardSealInfo::default_instance_ = NULL;

ZB_BoardSealInfo* ZB_BoardSealInfo::New() const {
  return new ZB_BoardSealInfo;
}

void ZB_BoardSealInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    ordercate_ = 0;
    orderid_ = GOOGLE_LONGLONG(0);
    factoryid_ = 0;
    boardid_ = GOOGLE_LONGLONG(0);
    sealindex_ = 0;
    materialid_ = 0;
    premill_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_ordercode()) {
      if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
        ordercode_->clear();
      }
    }
    if (has_materialcode()) {
      if (materialcode_ != &::google::protobuf::internal::kEmptyString) {
        materialcode_->clear();
      }
    }
    if (has_materialname()) {
      if (materialname_ != &::google::protobuf::internal::kEmptyString) {
        materialname_->clear();
      }
    }
    if (has_oldtablename()) {
      if (oldtablename_ != &::google::protobuf::internal::kEmptyString) {
        oldtablename_->clear();
      }
    }
    oldid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ZB_BoardSealInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ItemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_OrderCate;
        break;
      }

      // required int32 OrderCate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderCate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordercate_)));
          set_has_ordercate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_OrderID;
        break;
      }

      // required int64 OrderID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_FactoryID;
        break;
      }

      // required int32 FactoryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FactoryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &factoryid_)));
          set_has_factoryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_BoardID;
        break;
      }

      // required int64 BoardID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_BoardID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boardid_)));
          set_has_boardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_SealIndex;
        break;
      }

      // required int32 SealIndex = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SealIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sealindex_)));
          set_has_sealindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_MaterialID;
        break;
      }

      // required int32 MaterialID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_MaterialID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &materialid_)));
          set_has_materialid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_PreMill;
        break;
      }

      // required double PreMill = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_PreMill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &premill_)));
          set_has_premill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_OrderCode;
        break;
      }

      // required string OrderCode = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordercode().data(), this->ordercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_MaterialCode;
        break;
      }

      // required string MaterialCode = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MaterialCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_materialcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->materialcode().data(), this->materialcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_MaterialName;
        break;
      }

      // required string MaterialName = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MaterialName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_materialname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->materialname().data(), this->materialname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_OldTableName;
        break;
      }

      // required string OldTableName = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OldTableName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldtablename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oldtablename().data(), this->oldtablename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_OldID;
        break;
      }

      // required int32 OldID = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OldID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oldid_)));
          set_has_oldid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ZB_BoardSealInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ordercate(), output);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // required int32 FactoryID = 4;
  if (has_factoryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->factoryid(), output);
  }

  // required int64 BoardID = 5;
  if (has_boardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->boardid(), output);
  }

  // required int32 SealIndex = 6;
  if (has_sealindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sealindex(), output);
  }

  // required int32 MaterialID = 7;
  if (has_materialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->materialid(), output);
  }

  // required double PreMill = 8;
  if (has_premill()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->premill(), output);
  }

  // required string OrderCode = 9;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->ordercode(), output);
  }

  // required string MaterialCode = 10;
  if (has_materialcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->materialcode().data(), this->materialcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->materialcode(), output);
  }

  // required string MaterialName = 11;
  if (has_materialname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->materialname().data(), this->materialname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->materialname(), output);
  }

  // required string OldTableName = 12;
  if (has_oldtablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldtablename().data(), this->oldtablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->oldtablename(), output);
  }

  // required int32 OldID = 13;
  if (has_oldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->oldid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ZB_BoardSealInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ordercate(), target);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // required int32 FactoryID = 4;
  if (has_factoryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->factoryid(), target);
  }

  // required int64 BoardID = 5;
  if (has_boardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->boardid(), target);
  }

  // required int32 SealIndex = 6;
  if (has_sealindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sealindex(), target);
  }

  // required int32 MaterialID = 7;
  if (has_materialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->materialid(), target);
  }

  // required double PreMill = 8;
  if (has_premill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->premill(), target);
  }

  // required string OrderCode = 9;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ordercode(), target);
  }

  // required string MaterialCode = 10;
  if (has_materialcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->materialcode().data(), this->materialcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->materialcode(), target);
  }

  // required string MaterialName = 11;
  if (has_materialname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->materialname().data(), this->materialname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->materialname(), target);
  }

  // required string OldTableName = 12;
  if (has_oldtablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldtablename().data(), this->oldtablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->oldtablename(), target);
  }

  // required int32 OldID = 13;
  if (has_oldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->oldid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ZB_BoardSealInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 ItemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // required int32 OrderCate = 2;
    if (has_ordercate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ordercate());
    }

    // required int64 OrderID = 3;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required int32 FactoryID = 4;
    if (has_factoryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->factoryid());
    }

    // required int64 BoardID = 5;
    if (has_boardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boardid());
    }

    // required int32 SealIndex = 6;
    if (has_sealindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sealindex());
    }

    // required int32 MaterialID = 7;
    if (has_materialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->materialid());
    }

    // required double PreMill = 8;
    if (has_premill()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string OrderCode = 9;
    if (has_ordercode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordercode());
    }

    // required string MaterialCode = 10;
    if (has_materialcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->materialcode());
    }

    // required string MaterialName = 11;
    if (has_materialname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->materialname());
    }

    // required string OldTableName = 12;
    if (has_oldtablename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldtablename());
    }

    // required int32 OldID = 13;
    if (has_oldid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oldid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZB_BoardSealInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ZB_BoardSealInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ZB_BoardSealInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ZB_BoardSealInfo::MergeFrom(const ZB_BoardSealInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_ordercate()) {
      set_ordercate(from.ordercate());
    }
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_factoryid()) {
      set_factoryid(from.factoryid());
    }
    if (from.has_boardid()) {
      set_boardid(from.boardid());
    }
    if (from.has_sealindex()) {
      set_sealindex(from.sealindex());
    }
    if (from.has_materialid()) {
      set_materialid(from.materialid());
    }
    if (from.has_premill()) {
      set_premill(from.premill());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ordercode()) {
      set_ordercode(from.ordercode());
    }
    if (from.has_materialcode()) {
      set_materialcode(from.materialcode());
    }
    if (from.has_materialname()) {
      set_materialname(from.materialname());
    }
    if (from.has_oldtablename()) {
      set_oldtablename(from.oldtablename());
    }
    if (from.has_oldid()) {
      set_oldid(from.oldid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ZB_BoardSealInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZB_BoardSealInfo::CopyFrom(const ZB_BoardSealInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZB_BoardSealInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;

  return true;
}

void ZB_BoardSealInfo::Swap(ZB_BoardSealInfo* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(ordercate_, other->ordercate_);
    std::swap(orderid_, other->orderid_);
    std::swap(factoryid_, other->factoryid_);
    std::swap(boardid_, other->boardid_);
    std::swap(sealindex_, other->sealindex_);
    std::swap(materialid_, other->materialid_);
    std::swap(premill_, other->premill_);
    std::swap(ordercode_, other->ordercode_);
    std::swap(materialcode_, other->materialcode_);
    std::swap(materialname_, other->materialname_);
    std::swap(oldtablename_, other->oldtablename_);
    std::swap(oldid_, other->oldid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ZB_BoardSealInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZB_BoardSealInfo_descriptor_;
  metadata.reflection = ZB_BoardSealInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ZB_Objects::kItemIDFieldNumber;
const int ZB_Objects::kOrderCateFieldNumber;
const int ZB_Objects::kOrderIDFieldNumber;
const int ZB_Objects::kFactoryIDFieldNumber;
const int ZB_Objects::kObjectTypeFieldNumber;
const int ZB_Objects::kParentIDFieldNumber;
const int ZB_Objects::kGTypeFieldNumber;
const int ZB_Objects::kXLengthFieldNumber;
const int ZB_Objects::kYLengthFieldNumber;
const int ZB_Objects::kZLengthFieldNumber;
const int ZB_Objects::kShapeXLengthFieldNumber;
const int ZB_Objects::kShapeZLengthFieldNumber;
const int ZB_Objects::kGapXLengthFieldNumber;
const int ZB_Objects::kGapYLengthFieldNumber;
const int ZB_Objects::kGapZLengthFieldNumber;
const int ZB_Objects::kAmountFieldNumber;
const int ZB_Objects::kIsStandardFieldNumber;
const int ZB_Objects::kIsUserAddFieldNumber;
const int ZB_Objects::kMaterialPlanIDFieldNumber;
const int ZB_Objects::kCabGapTypeFieldNumber;
const int ZB_Objects::kCabShapeFieldNumber;
const int ZB_Objects::kOrderCodeFieldNumber;
const int ZB_Objects::kNameFieldNumber;
const int ZB_Objects::kCodeFieldNumber;
const int ZB_Objects::kMaterialPlanNameFieldNumber;
const int ZB_Objects::kBarCodeFieldNumber;
const int ZB_Objects::kRemarksFieldNumber;
const int ZB_Objects::kOldTableNameFieldNumber;
const int ZB_Objects::kOldIDFieldNumber;
#endif  // !_MSC_VER

ZB_Objects::ZB_Objects()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ZB_Objects::InitAsDefaultInstance() {
}

ZB_Objects::ZB_Objects(const ZB_Objects& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ZB_Objects::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ordercate_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  factoryid_ = 0;
  objecttype_ = 0;
  parentid_ = GOOGLE_LONGLONG(0);
  gtype_ = 0;
  xlength_ = 0;
  ylength_ = 0;
  zlength_ = 0;
  shapexlength_ = 0;
  shapezlength_ = 0;
  gapxlength_ = 0;
  gapylength_ = 0;
  gapzlength_ = 0;
  amount_ = 0;
  isstandard_ = false;
  isuseradd_ = false;
  materialplanid_ = 0;
  cabgaptype_ = 0;
  cabshape_ = 0;
  ordercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  materialplanname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  barcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  remarks_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldtablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZB_Objects::~ZB_Objects() {
  SharedDtor();
}

void ZB_Objects::SharedDtor() {
  if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
    delete ordercode_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (materialplanname_ != &::google::protobuf::internal::kEmptyString) {
    delete materialplanname_;
  }
  if (barcode_ != &::google::protobuf::internal::kEmptyString) {
    delete barcode_;
  }
  if (remarks_ != &::google::protobuf::internal::kEmptyString) {
    delete remarks_;
  }
  if (oldtablename_ != &::google::protobuf::internal::kEmptyString) {
    delete oldtablename_;
  }
  if (this != default_instance_) {
  }
}

void ZB_Objects::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZB_Objects::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZB_Objects_descriptor_;
}

const ZB_Objects& ZB_Objects::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_2dZB_2eproto();
  return *default_instance_;
}

ZB_Objects* ZB_Objects::default_instance_ = NULL;

ZB_Objects* ZB_Objects::New() const {
  return new ZB_Objects;
}

void ZB_Objects::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    ordercate_ = 0;
    orderid_ = GOOGLE_LONGLONG(0);
    factoryid_ = 0;
    objecttype_ = 0;
    parentid_ = GOOGLE_LONGLONG(0);
    gtype_ = 0;
    xlength_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ylength_ = 0;
    zlength_ = 0;
    shapexlength_ = 0;
    shapezlength_ = 0;
    gapxlength_ = 0;
    gapylength_ = 0;
    gapzlength_ = 0;
    amount_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    isstandard_ = false;
    isuseradd_ = false;
    materialplanid_ = 0;
    cabgaptype_ = 0;
    cabshape_ = 0;
    if (has_ordercode()) {
      if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
        ordercode_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::kEmptyString) {
        code_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_materialplanname()) {
      if (materialplanname_ != &::google::protobuf::internal::kEmptyString) {
        materialplanname_->clear();
      }
    }
    if (has_barcode()) {
      if (barcode_ != &::google::protobuf::internal::kEmptyString) {
        barcode_->clear();
      }
    }
    if (has_remarks()) {
      if (remarks_ != &::google::protobuf::internal::kEmptyString) {
        remarks_->clear();
      }
    }
    if (has_oldtablename()) {
      if (oldtablename_ != &::google::protobuf::internal::kEmptyString) {
        oldtablename_->clear();
      }
    }
    oldid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ZB_Objects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ItemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_OrderCate;
        break;
      }

      // required int32 OrderCate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderCate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordercate_)));
          set_has_ordercate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_OrderID;
        break;
      }

      // required int64 OrderID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_FactoryID;
        break;
      }

      // required int32 FactoryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FactoryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &factoryid_)));
          set_has_factoryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ObjectType;
        break;
      }

      // required int32 ObjectType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ObjectType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objecttype_)));
          set_has_objecttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_ParentID;
        break;
      }

      // required int64 ParentID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ParentID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parentid_)));
          set_has_parentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_GType;
        break;
      }

      // required int32 GType = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gtype_)));
          set_has_gtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_XLength;
        break;
      }

      // required double XLength = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_XLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xlength_)));
          set_has_xlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(73)) goto parse_YLength;
        break;
      }

      // required double YLength = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_YLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ylength_)));
          set_has_ylength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(81)) goto parse_ZLength;
        break;
      }

      // required double ZLength = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ZLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zlength_)));
          set_has_zlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_ShapeXLength;
        break;
      }

      // required double ShapeXLength = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ShapeXLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shapexlength_)));
          set_has_shapexlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(97)) goto parse_ShapeZLength;
        break;
      }

      // required double ShapeZLength = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ShapeZLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shapezlength_)));
          set_has_shapezlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(105)) goto parse_GapXLength;
        break;
      }

      // required double GapXLength = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_GapXLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gapxlength_)));
          set_has_gapxlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(113)) goto parse_GapYLength;
        break;
      }

      // required double GapYLength = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_GapYLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gapylength_)));
          set_has_gapylength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(121)) goto parse_GapZLength;
        break;
      }

      // required double GapZLength = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_GapZLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gapzlength_)));
          set_has_gapzlength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(129)) goto parse_Amount;
        break;
      }

      // required double Amount = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_IsStandard;
        break;
      }

      // required bool IsStandard = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_IsStandard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isstandard_)));
          set_has_isstandard();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_IsUserAdd;
        break;
      }

      // required bool IsUserAdd = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_IsUserAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isuseradd_)));
          set_has_isuseradd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_MaterialPlanID;
        break;
      }

      // required int32 MaterialPlanID = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_MaterialPlanID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &materialplanid_)));
          set_has_materialplanid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_CabGapType;
        break;
      }

      // required int32 CabGapType = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_CabGapType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cabgaptype_)));
          set_has_cabgaptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_CabShape;
        break;
      }

      // required int32 CabShape = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_CabShape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cabshape_)));
          set_has_cabshape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_OrderCode;
        break;
      }

      // required string OrderCode = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordercode().data(), this->ordercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_Name;
        break;
      }

      // required string Name = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_Code;
        break;
      }

      // required string Code = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_MaterialPlanName;
        break;
      }

      // required string MaterialPlanName = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MaterialPlanName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_materialplanname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->materialplanname().data(), this->materialplanname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_BarCode;
        break;
      }

      // required string BarCode = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BarCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_barcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->barcode().data(), this->barcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_Remarks;
        break;
      }

      // required string Remarks = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Remarks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remarks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->remarks().data(), this->remarks().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_OldTableName;
        break;
      }

      // required string OldTableName = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OldTableName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldtablename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oldtablename().data(), this->oldtablename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_OldID;
        break;
      }

      // required int32 OldID = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OldID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oldid_)));
          set_has_oldid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ZB_Objects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ordercate(), output);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // required int32 FactoryID = 4;
  if (has_factoryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->factoryid(), output);
  }

  // required int32 ObjectType = 5;
  if (has_objecttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->objecttype(), output);
  }

  // required int64 ParentID = 6;
  if (has_parentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->parentid(), output);
  }

  // required int32 GType = 7;
  if (has_gtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gtype(), output);
  }

  // required double XLength = 8;
  if (has_xlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->xlength(), output);
  }

  // required double YLength = 9;
  if (has_ylength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->ylength(), output);
  }

  // required double ZLength = 10;
  if (has_zlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->zlength(), output);
  }

  // required double ShapeXLength = 11;
  if (has_shapexlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->shapexlength(), output);
  }

  // required double ShapeZLength = 12;
  if (has_shapezlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->shapezlength(), output);
  }

  // required double GapXLength = 13;
  if (has_gapxlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->gapxlength(), output);
  }

  // required double GapYLength = 14;
  if (has_gapylength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->gapylength(), output);
  }

  // required double GapZLength = 15;
  if (has_gapzlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->gapzlength(), output);
  }

  // required double Amount = 16;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->amount(), output);
  }

  // required bool IsStandard = 17;
  if (has_isstandard()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->isstandard(), output);
  }

  // required bool IsUserAdd = 18;
  if (has_isuseradd()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->isuseradd(), output);
  }

  // required int32 MaterialPlanID = 19;
  if (has_materialplanid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->materialplanid(), output);
  }

  // required int32 CabGapType = 20;
  if (has_cabgaptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->cabgaptype(), output);
  }

  // required int32 CabShape = 21;
  if (has_cabshape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->cabshape(), output);
  }

  // required string OrderCode = 22;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->ordercode(), output);
  }

  // required string Name = 23;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->name(), output);
  }

  // required string Code = 24;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->code(), output);
  }

  // required string MaterialPlanName = 25;
  if (has_materialplanname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->materialplanname().data(), this->materialplanname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->materialplanname(), output);
  }

  // required string BarCode = 26;
  if (has_barcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->barcode().data(), this->barcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->barcode(), output);
  }

  // required string Remarks = 27;
  if (has_remarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remarks().data(), this->remarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->remarks(), output);
  }

  // required string OldTableName = 28;
  if (has_oldtablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldtablename().data(), this->oldtablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->oldtablename(), output);
  }

  // required int32 OldID = 29;
  if (has_oldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->oldid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ZB_Objects::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ordercate(), target);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // required int32 FactoryID = 4;
  if (has_factoryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->factoryid(), target);
  }

  // required int32 ObjectType = 5;
  if (has_objecttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->objecttype(), target);
  }

  // required int64 ParentID = 6;
  if (has_parentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->parentid(), target);
  }

  // required int32 GType = 7;
  if (has_gtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gtype(), target);
  }

  // required double XLength = 8;
  if (has_xlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->xlength(), target);
  }

  // required double YLength = 9;
  if (has_ylength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->ylength(), target);
  }

  // required double ZLength = 10;
  if (has_zlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->zlength(), target);
  }

  // required double ShapeXLength = 11;
  if (has_shapexlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->shapexlength(), target);
  }

  // required double ShapeZLength = 12;
  if (has_shapezlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->shapezlength(), target);
  }

  // required double GapXLength = 13;
  if (has_gapxlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->gapxlength(), target);
  }

  // required double GapYLength = 14;
  if (has_gapylength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->gapylength(), target);
  }

  // required double GapZLength = 15;
  if (has_gapzlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->gapzlength(), target);
  }

  // required double Amount = 16;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->amount(), target);
  }

  // required bool IsStandard = 17;
  if (has_isstandard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->isstandard(), target);
  }

  // required bool IsUserAdd = 18;
  if (has_isuseradd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->isuseradd(), target);
  }

  // required int32 MaterialPlanID = 19;
  if (has_materialplanid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->materialplanid(), target);
  }

  // required int32 CabGapType = 20;
  if (has_cabgaptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->cabgaptype(), target);
  }

  // required int32 CabShape = 21;
  if (has_cabshape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->cabshape(), target);
  }

  // required string OrderCode = 22;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->ordercode(), target);
  }

  // required string Name = 23;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->name(), target);
  }

  // required string Code = 24;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->code(), target);
  }

  // required string MaterialPlanName = 25;
  if (has_materialplanname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->materialplanname().data(), this->materialplanname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->materialplanname(), target);
  }

  // required string BarCode = 26;
  if (has_barcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->barcode().data(), this->barcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->barcode(), target);
  }

  // required string Remarks = 27;
  if (has_remarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remarks().data(), this->remarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->remarks(), target);
  }

  // required string OldTableName = 28;
  if (has_oldtablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldtablename().data(), this->oldtablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->oldtablename(), target);
  }

  // required int32 OldID = 29;
  if (has_oldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->oldid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ZB_Objects::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 ItemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // required int32 OrderCate = 2;
    if (has_ordercate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ordercate());
    }

    // required int64 OrderID = 3;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required int32 FactoryID = 4;
    if (has_factoryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->factoryid());
    }

    // required int32 ObjectType = 5;
    if (has_objecttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objecttype());
    }

    // required int64 ParentID = 6;
    if (has_parentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->parentid());
    }

    // required int32 GType = 7;
    if (has_gtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gtype());
    }

    // required double XLength = 8;
    if (has_xlength()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required double YLength = 9;
    if (has_ylength()) {
      total_size += 1 + 8;
    }

    // required double ZLength = 10;
    if (has_zlength()) {
      total_size += 1 + 8;
    }

    // required double ShapeXLength = 11;
    if (has_shapexlength()) {
      total_size += 1 + 8;
    }

    // required double ShapeZLength = 12;
    if (has_shapezlength()) {
      total_size += 1 + 8;
    }

    // required double GapXLength = 13;
    if (has_gapxlength()) {
      total_size += 1 + 8;
    }

    // required double GapYLength = 14;
    if (has_gapylength()) {
      total_size += 1 + 8;
    }

    // required double GapZLength = 15;
    if (has_gapzlength()) {
      total_size += 1 + 8;
    }

    // required double Amount = 16;
    if (has_amount()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required bool IsStandard = 17;
    if (has_isstandard()) {
      total_size += 2 + 1;
    }

    // required bool IsUserAdd = 18;
    if (has_isuseradd()) {
      total_size += 2 + 1;
    }

    // required int32 MaterialPlanID = 19;
    if (has_materialplanid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->materialplanid());
    }

    // required int32 CabGapType = 20;
    if (has_cabgaptype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cabgaptype());
    }

    // required int32 CabShape = 21;
    if (has_cabshape()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cabshape());
    }

    // required string OrderCode = 22;
    if (has_ordercode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordercode());
    }

    // required string Name = 23;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string Code = 24;
    if (has_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required string MaterialPlanName = 25;
    if (has_materialplanname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->materialplanname());
    }

    // required string BarCode = 26;
    if (has_barcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->barcode());
    }

    // required string Remarks = 27;
    if (has_remarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remarks());
    }

    // required string OldTableName = 28;
    if (has_oldtablename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldtablename());
    }

    // required int32 OldID = 29;
    if (has_oldid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oldid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZB_Objects::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ZB_Objects* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ZB_Objects*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ZB_Objects::MergeFrom(const ZB_Objects& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_ordercate()) {
      set_ordercate(from.ordercate());
    }
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_factoryid()) {
      set_factoryid(from.factoryid());
    }
    if (from.has_objecttype()) {
      set_objecttype(from.objecttype());
    }
    if (from.has_parentid()) {
      set_parentid(from.parentid());
    }
    if (from.has_gtype()) {
      set_gtype(from.gtype());
    }
    if (from.has_xlength()) {
      set_xlength(from.xlength());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ylength()) {
      set_ylength(from.ylength());
    }
    if (from.has_zlength()) {
      set_zlength(from.zlength());
    }
    if (from.has_shapexlength()) {
      set_shapexlength(from.shapexlength());
    }
    if (from.has_shapezlength()) {
      set_shapezlength(from.shapezlength());
    }
    if (from.has_gapxlength()) {
      set_gapxlength(from.gapxlength());
    }
    if (from.has_gapylength()) {
      set_gapylength(from.gapylength());
    }
    if (from.has_gapzlength()) {
      set_gapzlength(from.gapzlength());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_isstandard()) {
      set_isstandard(from.isstandard());
    }
    if (from.has_isuseradd()) {
      set_isuseradd(from.isuseradd());
    }
    if (from.has_materialplanid()) {
      set_materialplanid(from.materialplanid());
    }
    if (from.has_cabgaptype()) {
      set_cabgaptype(from.cabgaptype());
    }
    if (from.has_cabshape()) {
      set_cabshape(from.cabshape());
    }
    if (from.has_ordercode()) {
      set_ordercode(from.ordercode());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_materialplanname()) {
      set_materialplanname(from.materialplanname());
    }
    if (from.has_barcode()) {
      set_barcode(from.barcode());
    }
    if (from.has_remarks()) {
      set_remarks(from.remarks());
    }
    if (from.has_oldtablename()) {
      set_oldtablename(from.oldtablename());
    }
    if (from.has_oldid()) {
      set_oldid(from.oldid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ZB_Objects::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZB_Objects::CopyFrom(const ZB_Objects& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZB_Objects::IsInitialized() const {
  if ((_has_bits_[0] & 0x1fffffff) != 0x1fffffff) return false;

  return true;
}

void ZB_Objects::Swap(ZB_Objects* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(ordercate_, other->ordercate_);
    std::swap(orderid_, other->orderid_);
    std::swap(factoryid_, other->factoryid_);
    std::swap(objecttype_, other->objecttype_);
    std::swap(parentid_, other->parentid_);
    std::swap(gtype_, other->gtype_);
    std::swap(xlength_, other->xlength_);
    std::swap(ylength_, other->ylength_);
    std::swap(zlength_, other->zlength_);
    std::swap(shapexlength_, other->shapexlength_);
    std::swap(shapezlength_, other->shapezlength_);
    std::swap(gapxlength_, other->gapxlength_);
    std::swap(gapylength_, other->gapylength_);
    std::swap(gapzlength_, other->gapzlength_);
    std::swap(amount_, other->amount_);
    std::swap(isstandard_, other->isstandard_);
    std::swap(isuseradd_, other->isuseradd_);
    std::swap(materialplanid_, other->materialplanid_);
    std::swap(cabgaptype_, other->cabgaptype_);
    std::swap(cabshape_, other->cabshape_);
    std::swap(ordercode_, other->ordercode_);
    std::swap(name_, other->name_);
    std::swap(code_, other->code_);
    std::swap(materialplanname_, other->materialplanname_);
    std::swap(barcode_, other->barcode_);
    std::swap(remarks_, other->remarks_);
    std::swap(oldtablename_, other->oldtablename_);
    std::swap(oldid_, other->oldid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ZB_Objects::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZB_Objects_descriptor_;
  metadata.reflection = ZB_Objects_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ZB_OrderInfo::kItemIDFieldNumber;
const int ZB_OrderInfo::kOrderCateFieldNumber;
const int ZB_OrderInfo::kOrderIDFieldNumber;
const int ZB_OrderInfo::kParentIDFieldNumber;
const int ZB_OrderInfo::kOrderTypeFieldNumber;
const int ZB_OrderInfo::kOrderIndexFieldNumber;
const int ZB_OrderInfo::kFactoryIDFieldNumber;
const int ZB_OrderInfo::kVerCodeFieldNumber;
const int ZB_OrderInfo::kShopIDFieldNumber;
const int ZB_OrderInfo::kPreSurveyorIDFieldNumber;
const int ZB_OrderInfo::kReSurveyorIDFieldNumber;
const int ZB_OrderInfo::kDesignerIDFieldNumber;
const int ZB_OrderInfo::kSellerIDFieldNumber;
const int ZB_OrderInfo::kAuditorIDFieldNumber;
const int ZB_OrderInfo::kSquareFieldNumber;
const int ZB_OrderInfo::kCreateTimeFieldNumber;
const int ZB_OrderInfo::kPreSurveyTimeFieldNumber;
const int ZB_OrderInfo::kReSurveyTimeFieldNumber;
const int ZB_OrderInfo::kOrderTimeFieldNumber;
const int ZB_OrderInfo::kDeliveryTimeFieldNumber;
const int ZB_OrderInfo::kInstallTimeFieldNumber;
const int ZB_OrderInfo::kShopNameFieldNumber;
const int ZB_OrderInfo::kShopCodeFieldNumber;
const int ZB_OrderInfo::kOrderCodeFieldNumber;
const int ZB_OrderInfo::kDesignerNameFieldNumber;
const int ZB_OrderInfo::kDesignerUserCodeFieldNumber;
const int ZB_OrderInfo::kPreSurveyorNameFieldNumber;
const int ZB_OrderInfo::kPreSurveyorCodeFieldNumber;
const int ZB_OrderInfo::kReSurveyorNameFieldNumber;
const int ZB_OrderInfo::kReSurveyorCodeFieldNumber;
const int ZB_OrderInfo::kSellerNameFieldNumber;
const int ZB_OrderInfo::kSellerUserCodeFieldNumber;
const int ZB_OrderInfo::kAuditorNameFieldNumber;
const int ZB_OrderInfo::kAuditorUserCodeFieldNumber;
const int ZB_OrderInfo::kGeoCodeFieldNumber;
const int ZB_OrderInfo::kGeoNameFieldNumber;
const int ZB_OrderInfo::kOrderTitleFieldNumber;
const int ZB_OrderInfo::kCustomerNameFieldNumber;
const int ZB_OrderInfo::kCustomerTelFieldNumber;
const int ZB_OrderInfo::kCustomerPostCodeFieldNumber;
const int ZB_OrderInfo::kCustomerQQFieldNumber;
const int ZB_OrderInfo::kCustomerEmailFieldNumber;
const int ZB_OrderInfo::kInstallAddressFieldNumber;
const int ZB_OrderInfo::kOrderRemarksFieldNumber;
const int ZB_OrderInfo::kPlanNameFieldNumber;
const int ZB_OrderInfo::kPlanRemarksFieldNumber;
const int ZB_OrderInfo::kAttachFilePathFieldNumber;
#endif  // !_MSC_VER

ZB_OrderInfo::ZB_OrderInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ZB_OrderInfo::InitAsDefaultInstance() {
}

ZB_OrderInfo::ZB_OrderInfo(const ZB_OrderInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ZB_OrderInfo::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ordercate_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  parentid_ = GOOGLE_LONGLONG(0);
  ordertype_ = 0;
  orderindex_ = 0;
  factoryid_ = 0;
  vercode_ = GOOGLE_LONGLONG(0);
  shopid_ = 0;
  presurveyorid_ = 0;
  resurveyorid_ = 0;
  designerid_ = 0;
  sellerid_ = 0;
  auditorid_ = 0;
  square_ = 0;
  createtime_ = GOOGLE_LONGLONG(0);
  presurveytime_ = GOOGLE_LONGLONG(0);
  resurveytime_ = GOOGLE_LONGLONG(0);
  ordertime_ = GOOGLE_LONGLONG(0);
  deliverytime_ = GOOGLE_LONGLONG(0);
  installtime_ = GOOGLE_LONGLONG(0);
  shopname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  shopcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ordercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  designername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  designerusercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  presurveyorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  presurveyorcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  resurveyorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  resurveyorcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sellername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sellerusercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  auditorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  auditorusercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  geocode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  geoname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ordertitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customertel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customerpostcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customerqq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customeremail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  installaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orderremarks_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  planname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  planremarks_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  attachfilepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZB_OrderInfo::~ZB_OrderInfo() {
  SharedDtor();
}

void ZB_OrderInfo::SharedDtor() {
  if (shopname_ != &::google::protobuf::internal::kEmptyString) {
    delete shopname_;
  }
  if (shopcode_ != &::google::protobuf::internal::kEmptyString) {
    delete shopcode_;
  }
  if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
    delete ordercode_;
  }
  if (designername_ != &::google::protobuf::internal::kEmptyString) {
    delete designername_;
  }
  if (designerusercode_ != &::google::protobuf::internal::kEmptyString) {
    delete designerusercode_;
  }
  if (presurveyorname_ != &::google::protobuf::internal::kEmptyString) {
    delete presurveyorname_;
  }
  if (presurveyorcode_ != &::google::protobuf::internal::kEmptyString) {
    delete presurveyorcode_;
  }
  if (resurveyorname_ != &::google::protobuf::internal::kEmptyString) {
    delete resurveyorname_;
  }
  if (resurveyorcode_ != &::google::protobuf::internal::kEmptyString) {
    delete resurveyorcode_;
  }
  if (sellername_ != &::google::protobuf::internal::kEmptyString) {
    delete sellername_;
  }
  if (sellerusercode_ != &::google::protobuf::internal::kEmptyString) {
    delete sellerusercode_;
  }
  if (auditorname_ != &::google::protobuf::internal::kEmptyString) {
    delete auditorname_;
  }
  if (auditorusercode_ != &::google::protobuf::internal::kEmptyString) {
    delete auditorusercode_;
  }
  if (geocode_ != &::google::protobuf::internal::kEmptyString) {
    delete geocode_;
  }
  if (geoname_ != &::google::protobuf::internal::kEmptyString) {
    delete geoname_;
  }
  if (ordertitle_ != &::google::protobuf::internal::kEmptyString) {
    delete ordertitle_;
  }
  if (customername_ != &::google::protobuf::internal::kEmptyString) {
    delete customername_;
  }
  if (customertel_ != &::google::protobuf::internal::kEmptyString) {
    delete customertel_;
  }
  if (customerpostcode_ != &::google::protobuf::internal::kEmptyString) {
    delete customerpostcode_;
  }
  if (customerqq_ != &::google::protobuf::internal::kEmptyString) {
    delete customerqq_;
  }
  if (customeremail_ != &::google::protobuf::internal::kEmptyString) {
    delete customeremail_;
  }
  if (installaddress_ != &::google::protobuf::internal::kEmptyString) {
    delete installaddress_;
  }
  if (orderremarks_ != &::google::protobuf::internal::kEmptyString) {
    delete orderremarks_;
  }
  if (planname_ != &::google::protobuf::internal::kEmptyString) {
    delete planname_;
  }
  if (planremarks_ != &::google::protobuf::internal::kEmptyString) {
    delete planremarks_;
  }
  if (attachfilepath_ != &::google::protobuf::internal::kEmptyString) {
    delete attachfilepath_;
  }
  if (this != default_instance_) {
  }
}

void ZB_OrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZB_OrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZB_OrderInfo_descriptor_;
}

const ZB_OrderInfo& ZB_OrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_2dZB_2eproto();
  return *default_instance_;
}

ZB_OrderInfo* ZB_OrderInfo::default_instance_ = NULL;

ZB_OrderInfo* ZB_OrderInfo::New() const {
  return new ZB_OrderInfo;
}

void ZB_OrderInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    ordercate_ = 0;
    orderid_ = GOOGLE_LONGLONG(0);
    parentid_ = GOOGLE_LONGLONG(0);
    ordertype_ = 0;
    orderindex_ = 0;
    factoryid_ = 0;
    vercode_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    shopid_ = 0;
    presurveyorid_ = 0;
    resurveyorid_ = 0;
    designerid_ = 0;
    sellerid_ = 0;
    auditorid_ = 0;
    square_ = 0;
    createtime_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    presurveytime_ = GOOGLE_LONGLONG(0);
    resurveytime_ = GOOGLE_LONGLONG(0);
    ordertime_ = GOOGLE_LONGLONG(0);
    deliverytime_ = GOOGLE_LONGLONG(0);
    installtime_ = GOOGLE_LONGLONG(0);
    if (has_shopname()) {
      if (shopname_ != &::google::protobuf::internal::kEmptyString) {
        shopname_->clear();
      }
    }
    if (has_shopcode()) {
      if (shopcode_ != &::google::protobuf::internal::kEmptyString) {
        shopcode_->clear();
      }
    }
    if (has_ordercode()) {
      if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
        ordercode_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_designername()) {
      if (designername_ != &::google::protobuf::internal::kEmptyString) {
        designername_->clear();
      }
    }
    if (has_designerusercode()) {
      if (designerusercode_ != &::google::protobuf::internal::kEmptyString) {
        designerusercode_->clear();
      }
    }
    if (has_presurveyorname()) {
      if (presurveyorname_ != &::google::protobuf::internal::kEmptyString) {
        presurveyorname_->clear();
      }
    }
    if (has_presurveyorcode()) {
      if (presurveyorcode_ != &::google::protobuf::internal::kEmptyString) {
        presurveyorcode_->clear();
      }
    }
    if (has_resurveyorname()) {
      if (resurveyorname_ != &::google::protobuf::internal::kEmptyString) {
        resurveyorname_->clear();
      }
    }
    if (has_resurveyorcode()) {
      if (resurveyorcode_ != &::google::protobuf::internal::kEmptyString) {
        resurveyorcode_->clear();
      }
    }
    if (has_sellername()) {
      if (sellername_ != &::google::protobuf::internal::kEmptyString) {
        sellername_->clear();
      }
    }
    if (has_sellerusercode()) {
      if (sellerusercode_ != &::google::protobuf::internal::kEmptyString) {
        sellerusercode_->clear();
      }
    }
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (has_auditorname()) {
      if (auditorname_ != &::google::protobuf::internal::kEmptyString) {
        auditorname_->clear();
      }
    }
    if (has_auditorusercode()) {
      if (auditorusercode_ != &::google::protobuf::internal::kEmptyString) {
        auditorusercode_->clear();
      }
    }
    if (has_geocode()) {
      if (geocode_ != &::google::protobuf::internal::kEmptyString) {
        geocode_->clear();
      }
    }
    if (has_geoname()) {
      if (geoname_ != &::google::protobuf::internal::kEmptyString) {
        geoname_->clear();
      }
    }
    if (has_ordertitle()) {
      if (ordertitle_ != &::google::protobuf::internal::kEmptyString) {
        ordertitle_->clear();
      }
    }
    if (has_customername()) {
      if (customername_ != &::google::protobuf::internal::kEmptyString) {
        customername_->clear();
      }
    }
    if (has_customertel()) {
      if (customertel_ != &::google::protobuf::internal::kEmptyString) {
        customertel_->clear();
      }
    }
    if (has_customerpostcode()) {
      if (customerpostcode_ != &::google::protobuf::internal::kEmptyString) {
        customerpostcode_->clear();
      }
    }
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (has_customerqq()) {
      if (customerqq_ != &::google::protobuf::internal::kEmptyString) {
        customerqq_->clear();
      }
    }
    if (has_customeremail()) {
      if (customeremail_ != &::google::protobuf::internal::kEmptyString) {
        customeremail_->clear();
      }
    }
    if (has_installaddress()) {
      if (installaddress_ != &::google::protobuf::internal::kEmptyString) {
        installaddress_->clear();
      }
    }
    if (has_orderremarks()) {
      if (orderremarks_ != &::google::protobuf::internal::kEmptyString) {
        orderremarks_->clear();
      }
    }
    if (has_planname()) {
      if (planname_ != &::google::protobuf::internal::kEmptyString) {
        planname_->clear();
      }
    }
    if (has_planremarks()) {
      if (planremarks_ != &::google::protobuf::internal::kEmptyString) {
        planremarks_->clear();
      }
    }
    if (has_attachfilepath()) {
      if (attachfilepath_ != &::google::protobuf::internal::kEmptyString) {
        attachfilepath_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ZB_OrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ItemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_OrderCate;
        break;
      }

      // required int32 OrderCate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderCate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordercate_)));
          set_has_ordercate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_OrderID;
        break;
      }

      // required int64 OrderID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ParentID;
        break;
      }

      // required int64 ParentID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ParentID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parentid_)));
          set_has_parentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_OrderType;
        break;
      }

      // required int32 OrderType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordertype_)));
          set_has_ordertype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_OrderIndex;
        break;
      }

      // required int32 OrderIndex = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orderindex_)));
          set_has_orderindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_FactoryID;
        break;
      }

      // required int32 FactoryID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FactoryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &factoryid_)));
          set_has_factoryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_VerCode;
        break;
      }

      // required int64 VerCode = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_VerCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vercode_)));
          set_has_vercode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ShopID;
        break;
      }

      // required int32 ShopID = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ShopID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_PreSurveyorID;
        break;
      }

      // required int32 PreSurveyorID = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_PreSurveyorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &presurveyorid_)));
          set_has_presurveyorid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_ReSurveyorID;
        break;
      }

      // required int32 ReSurveyorID = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ReSurveyorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resurveyorid_)));
          set_has_resurveyorid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_DesignerID;
        break;
      }

      // required int32 DesignerID = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_DesignerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &designerid_)));
          set_has_designerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_SellerID;
        break;
      }

      // required int32 SellerID = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SellerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sellerid_)));
          set_has_sellerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_AuditorID;
        break;
      }

      // required int32 AuditorID = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_AuditorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auditorid_)));
          set_has_auditorid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(121)) goto parse_Square;
        break;
      }

      // required double Square = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Square:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &square_)));
          set_has_square();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_CreateTime;
        break;
      }

      // required int64 CreateTime = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_CreateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
          set_has_createtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_PreSurveyTime;
        break;
      }

      // required int64 PreSurveyTime = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_PreSurveyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &presurveytime_)));
          set_has_presurveytime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_ReSurveyTime;
        break;
      }

      // required int64 ReSurveyTime = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ReSurveyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &resurveytime_)));
          set_has_resurveytime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_OrderTime;
        break;
      }

      // required int64 OrderTime = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ordertime_)));
          set_has_ordertime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_DeliveryTime;
        break;
      }

      // required int64 DeliveryTime = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_DeliveryTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &deliverytime_)));
          set_has_deliverytime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_InstallTime;
        break;
      }

      // required int64 InstallTime = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_InstallTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &installtime_)));
          set_has_installtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_ShopName;
        break;
      }

      // required string ShopName = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ShopName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shopname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->shopname().data(), this->shopname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_ShopCode;
        break;
      }

      // required string ShopCode = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ShopCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shopcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->shopcode().data(), this->shopcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_OrderCode;
        break;
      }

      // required string OrderCode = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordercode().data(), this->ordercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_DesignerName;
        break;
      }

      // required string DesignerName = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DesignerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_designername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->designername().data(), this->designername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_DesignerUserCode;
        break;
      }

      // required string DesignerUserCode = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DesignerUserCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_designerusercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->designerusercode().data(), this->designerusercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_PreSurveyorName;
        break;
      }

      // required string PreSurveyorName = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PreSurveyorName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_presurveyorname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->presurveyorname().data(), this->presurveyorname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_PreSurveyorCode;
        break;
      }

      // required string PreSurveyorCode = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PreSurveyorCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_presurveyorcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->presurveyorcode().data(), this->presurveyorcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_ReSurveyorName;
        break;
      }

      // required string ReSurveyorName = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReSurveyorName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resurveyorname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->resurveyorname().data(), this->resurveyorname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_ReSurveyorCode;
        break;
      }

      // required string ReSurveyorCode = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReSurveyorCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resurveyorcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->resurveyorcode().data(), this->resurveyorcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_SellerName;
        break;
      }

      // required string SellerName = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SellerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sellername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sellername().data(), this->sellername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_SellerUserCode;
        break;
      }

      // required string SellerUserCode = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SellerUserCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sellerusercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sellerusercode().data(), this->sellerusercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_AuditorName;
        break;
      }

      // required string AuditorName = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_AuditorName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auditorname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->auditorname().data(), this->auditorname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_AuditorUserCode;
        break;
      }

      // required string AuditorUserCode = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_AuditorUserCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auditorusercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->auditorusercode().data(), this->auditorusercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(282)) goto parse_GeoCode;
        break;
      }

      // required string GeoCode = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_GeoCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_geocode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->geocode().data(), this->geocode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_GeoName;
        break;
      }

      // required string GeoName = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_GeoName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_geoname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->geoname().data(), this->geoname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_OrderTitle;
        break;
      }

      // required string OrderTitle = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordertitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordertitle().data(), this->ordertitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(306)) goto parse_CustomerName;
        break;
      }

      // required string CustomerName = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customername().data(), this->customername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(314)) goto parse_CustomerTel;
        break;
      }

      // required string CustomerTel = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomerTel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customertel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customertel().data(), this->customertel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(322)) goto parse_CustomerPostCode;
        break;
      }

      // required string CustomerPostCode = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomerPostCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customerpostcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customerpostcode().data(), this->customerpostcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(330)) goto parse_CustomerQQ;
        break;
      }

      // required string CustomerQQ = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomerQQ:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customerqq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customerqq().data(), this->customerqq().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(338)) goto parse_CustomerEmail;
        break;
      }

      // required string CustomerEmail = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomerEmail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customeremail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customeremail().data(), this->customeremail().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(346)) goto parse_InstallAddress;
        break;
      }

      // required string InstallAddress = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_InstallAddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_installaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->installaddress().data(), this->installaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(354)) goto parse_OrderRemarks;
        break;
      }

      // required string OrderRemarks = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderRemarks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderremarks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orderremarks().data(), this->orderremarks().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(362)) goto parse_PlanName;
        break;
      }

      // required string PlanName = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PlanName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_planname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->planname().data(), this->planname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(370)) goto parse_PlanRemarks;
        break;
      }

      // required string PlanRemarks = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PlanRemarks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_planremarks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->planremarks().data(), this->planremarks().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(378)) goto parse_AttachFilePath;
        break;
      }

      // required string AttachFilePath = 47;
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_AttachFilePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attachfilepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->attachfilepath().data(), this->attachfilepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ZB_OrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ordercate(), output);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // required int64 ParentID = 4;
  if (has_parentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->parentid(), output);
  }

  // required int32 OrderType = 5;
  if (has_ordertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ordertype(), output);
  }

  // required int32 OrderIndex = 6;
  if (has_orderindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->orderindex(), output);
  }

  // required int32 FactoryID = 7;
  if (has_factoryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->factoryid(), output);
  }

  // required int64 VerCode = 8;
  if (has_vercode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->vercode(), output);
  }

  // required int32 ShopID = 9;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->shopid(), output);
  }

  // required int32 PreSurveyorID = 10;
  if (has_presurveyorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->presurveyorid(), output);
  }

  // required int32 ReSurveyorID = 11;
  if (has_resurveyorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->resurveyorid(), output);
  }

  // required int32 DesignerID = 12;
  if (has_designerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->designerid(), output);
  }

  // required int32 SellerID = 13;
  if (has_sellerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->sellerid(), output);
  }

  // required int32 AuditorID = 14;
  if (has_auditorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->auditorid(), output);
  }

  // required double Square = 15;
  if (has_square()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->square(), output);
  }

  // required int64 CreateTime = 16;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->createtime(), output);
  }

  // required int64 PreSurveyTime = 17;
  if (has_presurveytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->presurveytime(), output);
  }

  // required int64 ReSurveyTime = 18;
  if (has_resurveytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->resurveytime(), output);
  }

  // required int64 OrderTime = 19;
  if (has_ordertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->ordertime(), output);
  }

  // required int64 DeliveryTime = 20;
  if (has_deliverytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->deliverytime(), output);
  }

  // required int64 InstallTime = 21;
  if (has_installtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->installtime(), output);
  }

  // required string ShopName = 22;
  if (has_shopname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shopname().data(), this->shopname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->shopname(), output);
  }

  // required string ShopCode = 23;
  if (has_shopcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shopcode().data(), this->shopcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->shopcode(), output);
  }

  // required string OrderCode = 24;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->ordercode(), output);
  }

  // required string DesignerName = 25;
  if (has_designername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->designername().data(), this->designername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->designername(), output);
  }

  // required string DesignerUserCode = 26;
  if (has_designerusercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->designerusercode().data(), this->designerusercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->designerusercode(), output);
  }

  // required string PreSurveyorName = 27;
  if (has_presurveyorname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->presurveyorname().data(), this->presurveyorname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->presurveyorname(), output);
  }

  // required string PreSurveyorCode = 28;
  if (has_presurveyorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->presurveyorcode().data(), this->presurveyorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->presurveyorcode(), output);
  }

  // required string ReSurveyorName = 29;
  if (has_resurveyorname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resurveyorname().data(), this->resurveyorname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->resurveyorname(), output);
  }

  // required string ReSurveyorCode = 30;
  if (has_resurveyorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resurveyorcode().data(), this->resurveyorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->resurveyorcode(), output);
  }

  // required string SellerName = 31;
  if (has_sellername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sellername().data(), this->sellername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->sellername(), output);
  }

  // required string SellerUserCode = 32;
  if (has_sellerusercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sellerusercode().data(), this->sellerusercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      32, this->sellerusercode(), output);
  }

  // required string AuditorName = 33;
  if (has_auditorname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->auditorname().data(), this->auditorname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->auditorname(), output);
  }

  // required string AuditorUserCode = 34;
  if (has_auditorusercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->auditorusercode().data(), this->auditorusercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      34, this->auditorusercode(), output);
  }

  // required string GeoCode = 35;
  if (has_geocode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->geocode().data(), this->geocode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      35, this->geocode(), output);
  }

  // required string GeoName = 36;
  if (has_geoname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->geoname().data(), this->geoname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      36, this->geoname(), output);
  }

  // required string OrderTitle = 37;
  if (has_ordertitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordertitle().data(), this->ordertitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      37, this->ordertitle(), output);
  }

  // required string CustomerName = 38;
  if (has_customername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customername().data(), this->customername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      38, this->customername(), output);
  }

  // required string CustomerTel = 39;
  if (has_customertel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customertel().data(), this->customertel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      39, this->customertel(), output);
  }

  // required string CustomerPostCode = 40;
  if (has_customerpostcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customerpostcode().data(), this->customerpostcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      40, this->customerpostcode(), output);
  }

  // required string CustomerQQ = 41;
  if (has_customerqq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customerqq().data(), this->customerqq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      41, this->customerqq(), output);
  }

  // required string CustomerEmail = 42;
  if (has_customeremail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customeremail().data(), this->customeremail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      42, this->customeremail(), output);
  }

  // required string InstallAddress = 43;
  if (has_installaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->installaddress().data(), this->installaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      43, this->installaddress(), output);
  }

  // required string OrderRemarks = 44;
  if (has_orderremarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderremarks().data(), this->orderremarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      44, this->orderremarks(), output);
  }

  // required string PlanName = 45;
  if (has_planname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->planname().data(), this->planname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      45, this->planname(), output);
  }

  // required string PlanRemarks = 46;
  if (has_planremarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->planremarks().data(), this->planremarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      46, this->planremarks(), output);
  }

  // required string AttachFilePath = 47;
  if (has_attachfilepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attachfilepath().data(), this->attachfilepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      47, this->attachfilepath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ZB_OrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 ItemID = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // required int32 OrderCate = 2;
  if (has_ordercate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ordercate(), target);
  }

  // required int64 OrderID = 3;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // required int64 ParentID = 4;
  if (has_parentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->parentid(), target);
  }

  // required int32 OrderType = 5;
  if (has_ordertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ordertype(), target);
  }

  // required int32 OrderIndex = 6;
  if (has_orderindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->orderindex(), target);
  }

  // required int32 FactoryID = 7;
  if (has_factoryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->factoryid(), target);
  }

  // required int64 VerCode = 8;
  if (has_vercode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->vercode(), target);
  }

  // required int32 ShopID = 9;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->shopid(), target);
  }

  // required int32 PreSurveyorID = 10;
  if (has_presurveyorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->presurveyorid(), target);
  }

  // required int32 ReSurveyorID = 11;
  if (has_resurveyorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->resurveyorid(), target);
  }

  // required int32 DesignerID = 12;
  if (has_designerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->designerid(), target);
  }

  // required int32 SellerID = 13;
  if (has_sellerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->sellerid(), target);
  }

  // required int32 AuditorID = 14;
  if (has_auditorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->auditorid(), target);
  }

  // required double Square = 15;
  if (has_square()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->square(), target);
  }

  // required int64 CreateTime = 16;
  if (has_createtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->createtime(), target);
  }

  // required int64 PreSurveyTime = 17;
  if (has_presurveytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->presurveytime(), target);
  }

  // required int64 ReSurveyTime = 18;
  if (has_resurveytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->resurveytime(), target);
  }

  // required int64 OrderTime = 19;
  if (has_ordertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->ordertime(), target);
  }

  // required int64 DeliveryTime = 20;
  if (has_deliverytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->deliverytime(), target);
  }

  // required int64 InstallTime = 21;
  if (has_installtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->installtime(), target);
  }

  // required string ShopName = 22;
  if (has_shopname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shopname().data(), this->shopname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->shopname(), target);
  }

  // required string ShopCode = 23;
  if (has_shopcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shopcode().data(), this->shopcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->shopcode(), target);
  }

  // required string OrderCode = 24;
  if (has_ordercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordercode().data(), this->ordercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->ordercode(), target);
  }

  // required string DesignerName = 25;
  if (has_designername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->designername().data(), this->designername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->designername(), target);
  }

  // required string DesignerUserCode = 26;
  if (has_designerusercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->designerusercode().data(), this->designerusercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->designerusercode(), target);
  }

  // required string PreSurveyorName = 27;
  if (has_presurveyorname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->presurveyorname().data(), this->presurveyorname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->presurveyorname(), target);
  }

  // required string PreSurveyorCode = 28;
  if (has_presurveyorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->presurveyorcode().data(), this->presurveyorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->presurveyorcode(), target);
  }

  // required string ReSurveyorName = 29;
  if (has_resurveyorname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resurveyorname().data(), this->resurveyorname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->resurveyorname(), target);
  }

  // required string ReSurveyorCode = 30;
  if (has_resurveyorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resurveyorcode().data(), this->resurveyorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->resurveyorcode(), target);
  }

  // required string SellerName = 31;
  if (has_sellername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sellername().data(), this->sellername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->sellername(), target);
  }

  // required string SellerUserCode = 32;
  if (has_sellerusercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sellerusercode().data(), this->sellerusercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->sellerusercode(), target);
  }

  // required string AuditorName = 33;
  if (has_auditorname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->auditorname().data(), this->auditorname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->auditorname(), target);
  }

  // required string AuditorUserCode = 34;
  if (has_auditorusercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->auditorusercode().data(), this->auditorusercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->auditorusercode(), target);
  }

  // required string GeoCode = 35;
  if (has_geocode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->geocode().data(), this->geocode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->geocode(), target);
  }

  // required string GeoName = 36;
  if (has_geoname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->geoname().data(), this->geoname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->geoname(), target);
  }

  // required string OrderTitle = 37;
  if (has_ordertitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordertitle().data(), this->ordertitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->ordertitle(), target);
  }

  // required string CustomerName = 38;
  if (has_customername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customername().data(), this->customername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->customername(), target);
  }

  // required string CustomerTel = 39;
  if (has_customertel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customertel().data(), this->customertel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        39, this->customertel(), target);
  }

  // required string CustomerPostCode = 40;
  if (has_customerpostcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customerpostcode().data(), this->customerpostcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->customerpostcode(), target);
  }

  // required string CustomerQQ = 41;
  if (has_customerqq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customerqq().data(), this->customerqq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->customerqq(), target);
  }

  // required string CustomerEmail = 42;
  if (has_customeremail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customeremail().data(), this->customeremail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->customeremail(), target);
  }

  // required string InstallAddress = 43;
  if (has_installaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->installaddress().data(), this->installaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        43, this->installaddress(), target);
  }

  // required string OrderRemarks = 44;
  if (has_orderremarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderremarks().data(), this->orderremarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        44, this->orderremarks(), target);
  }

  // required string PlanName = 45;
  if (has_planname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->planname().data(), this->planname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->planname(), target);
  }

  // required string PlanRemarks = 46;
  if (has_planremarks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->planremarks().data(), this->planremarks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        46, this->planremarks(), target);
  }

  // required string AttachFilePath = 47;
  if (has_attachfilepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attachfilepath().data(), this->attachfilepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        47, this->attachfilepath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ZB_OrderInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 ItemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // required int32 OrderCate = 2;
    if (has_ordercate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ordercate());
    }

    // required int64 OrderID = 3;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required int64 ParentID = 4;
    if (has_parentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->parentid());
    }

    // required int32 OrderType = 5;
    if (has_ordertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ordertype());
    }

    // required int32 OrderIndex = 6;
    if (has_orderindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->orderindex());
    }

    // required int32 FactoryID = 7;
    if (has_factoryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->factoryid());
    }

    // required int64 VerCode = 8;
    if (has_vercode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->vercode());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 ShopID = 9;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shopid());
    }

    // required int32 PreSurveyorID = 10;
    if (has_presurveyorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->presurveyorid());
    }

    // required int32 ReSurveyorID = 11;
    if (has_resurveyorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resurveyorid());
    }

    // required int32 DesignerID = 12;
    if (has_designerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->designerid());
    }

    // required int32 SellerID = 13;
    if (has_sellerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sellerid());
    }

    // required int32 AuditorID = 14;
    if (has_auditorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auditorid());
    }

    // required double Square = 15;
    if (has_square()) {
      total_size += 1 + 8;
    }

    // required int64 CreateTime = 16;
    if (has_createtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->createtime());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required int64 PreSurveyTime = 17;
    if (has_presurveytime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->presurveytime());
    }

    // required int64 ReSurveyTime = 18;
    if (has_resurveytime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->resurveytime());
    }

    // required int64 OrderTime = 19;
    if (has_ordertime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ordertime());
    }

    // required int64 DeliveryTime = 20;
    if (has_deliverytime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->deliverytime());
    }

    // required int64 InstallTime = 21;
    if (has_installtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->installtime());
    }

    // required string ShopName = 22;
    if (has_shopname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shopname());
    }

    // required string ShopCode = 23;
    if (has_shopcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shopcode());
    }

    // required string OrderCode = 24;
    if (has_ordercode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordercode());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required string DesignerName = 25;
    if (has_designername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->designername());
    }

    // required string DesignerUserCode = 26;
    if (has_designerusercode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->designerusercode());
    }

    // required string PreSurveyorName = 27;
    if (has_presurveyorname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->presurveyorname());
    }

    // required string PreSurveyorCode = 28;
    if (has_presurveyorcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->presurveyorcode());
    }

    // required string ReSurveyorName = 29;
    if (has_resurveyorname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resurveyorname());
    }

    // required string ReSurveyorCode = 30;
    if (has_resurveyorcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resurveyorcode());
    }

    // required string SellerName = 31;
    if (has_sellername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sellername());
    }

    // required string SellerUserCode = 32;
    if (has_sellerusercode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sellerusercode());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required string AuditorName = 33;
    if (has_auditorname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->auditorname());
    }

    // required string AuditorUserCode = 34;
    if (has_auditorusercode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->auditorusercode());
    }

    // required string GeoCode = 35;
    if (has_geocode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->geocode());
    }

    // required string GeoName = 36;
    if (has_geoname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->geoname());
    }

    // required string OrderTitle = 37;
    if (has_ordertitle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordertitle());
    }

    // required string CustomerName = 38;
    if (has_customername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customername());
    }

    // required string CustomerTel = 39;
    if (has_customertel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customertel());
    }

    // required string CustomerPostCode = 40;
    if (has_customerpostcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customerpostcode());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // required string CustomerQQ = 41;
    if (has_customerqq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customerqq());
    }

    // required string CustomerEmail = 42;
    if (has_customeremail()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customeremail());
    }

    // required string InstallAddress = 43;
    if (has_installaddress()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->installaddress());
    }

    // required string OrderRemarks = 44;
    if (has_orderremarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderremarks());
    }

    // required string PlanName = 45;
    if (has_planname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->planname());
    }

    // required string PlanRemarks = 46;
    if (has_planremarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->planremarks());
    }

    // required string AttachFilePath = 47;
    if (has_attachfilepath()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attachfilepath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZB_OrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ZB_OrderInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ZB_OrderInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ZB_OrderInfo::MergeFrom(const ZB_OrderInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_ordercate()) {
      set_ordercate(from.ordercate());
    }
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_parentid()) {
      set_parentid(from.parentid());
    }
    if (from.has_ordertype()) {
      set_ordertype(from.ordertype());
    }
    if (from.has_orderindex()) {
      set_orderindex(from.orderindex());
    }
    if (from.has_factoryid()) {
      set_factoryid(from.factoryid());
    }
    if (from.has_vercode()) {
      set_vercode(from.vercode());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_presurveyorid()) {
      set_presurveyorid(from.presurveyorid());
    }
    if (from.has_resurveyorid()) {
      set_resurveyorid(from.resurveyorid());
    }
    if (from.has_designerid()) {
      set_designerid(from.designerid());
    }
    if (from.has_sellerid()) {
      set_sellerid(from.sellerid());
    }
    if (from.has_auditorid()) {
      set_auditorid(from.auditorid());
    }
    if (from.has_square()) {
      set_square(from.square());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_presurveytime()) {
      set_presurveytime(from.presurveytime());
    }
    if (from.has_resurveytime()) {
      set_resurveytime(from.resurveytime());
    }
    if (from.has_ordertime()) {
      set_ordertime(from.ordertime());
    }
    if (from.has_deliverytime()) {
      set_deliverytime(from.deliverytime());
    }
    if (from.has_installtime()) {
      set_installtime(from.installtime());
    }
    if (from.has_shopname()) {
      set_shopname(from.shopname());
    }
    if (from.has_shopcode()) {
      set_shopcode(from.shopcode());
    }
    if (from.has_ordercode()) {
      set_ordercode(from.ordercode());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_designername()) {
      set_designername(from.designername());
    }
    if (from.has_designerusercode()) {
      set_designerusercode(from.designerusercode());
    }
    if (from.has_presurveyorname()) {
      set_presurveyorname(from.presurveyorname());
    }
    if (from.has_presurveyorcode()) {
      set_presurveyorcode(from.presurveyorcode());
    }
    if (from.has_resurveyorname()) {
      set_resurveyorname(from.resurveyorname());
    }
    if (from.has_resurveyorcode()) {
      set_resurveyorcode(from.resurveyorcode());
    }
    if (from.has_sellername()) {
      set_sellername(from.sellername());
    }
    if (from.has_sellerusercode()) {
      set_sellerusercode(from.sellerusercode());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_auditorname()) {
      set_auditorname(from.auditorname());
    }
    if (from.has_auditorusercode()) {
      set_auditorusercode(from.auditorusercode());
    }
    if (from.has_geocode()) {
      set_geocode(from.geocode());
    }
    if (from.has_geoname()) {
      set_geoname(from.geoname());
    }
    if (from.has_ordertitle()) {
      set_ordertitle(from.ordertitle());
    }
    if (from.has_customername()) {
      set_customername(from.customername());
    }
    if (from.has_customertel()) {
      set_customertel(from.customertel());
    }
    if (from.has_customerpostcode()) {
      set_customerpostcode(from.customerpostcode());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_customerqq()) {
      set_customerqq(from.customerqq());
    }
    if (from.has_customeremail()) {
      set_customeremail(from.customeremail());
    }
    if (from.has_installaddress()) {
      set_installaddress(from.installaddress());
    }
    if (from.has_orderremarks()) {
      set_orderremarks(from.orderremarks());
    }
    if (from.has_planname()) {
      set_planname(from.planname());
    }
    if (from.has_planremarks()) {
      set_planremarks(from.planremarks());
    }
    if (from.has_attachfilepath()) {
      set_attachfilepath(from.attachfilepath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ZB_OrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZB_OrderInfo::CopyFrom(const ZB_OrderInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZB_OrderInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x00007fff) != 0x00007fff) return false;

  return true;
}

void ZB_OrderInfo::Swap(ZB_OrderInfo* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(ordercate_, other->ordercate_);
    std::swap(orderid_, other->orderid_);
    std::swap(parentid_, other->parentid_);
    std::swap(ordertype_, other->ordertype_);
    std::swap(orderindex_, other->orderindex_);
    std::swap(factoryid_, other->factoryid_);
    std::swap(vercode_, other->vercode_);
    std::swap(shopid_, other->shopid_);
    std::swap(presurveyorid_, other->presurveyorid_);
    std::swap(resurveyorid_, other->resurveyorid_);
    std::swap(designerid_, other->designerid_);
    std::swap(sellerid_, other->sellerid_);
    std::swap(auditorid_, other->auditorid_);
    std::swap(square_, other->square_);
    std::swap(createtime_, other->createtime_);
    std::swap(presurveytime_, other->presurveytime_);
    std::swap(resurveytime_, other->resurveytime_);
    std::swap(ordertime_, other->ordertime_);
    std::swap(deliverytime_, other->deliverytime_);
    std::swap(installtime_, other->installtime_);
    std::swap(shopname_, other->shopname_);
    std::swap(shopcode_, other->shopcode_);
    std::swap(ordercode_, other->ordercode_);
    std::swap(designername_, other->designername_);
    std::swap(designerusercode_, other->designerusercode_);
    std::swap(presurveyorname_, other->presurveyorname_);
    std::swap(presurveyorcode_, other->presurveyorcode_);
    std::swap(resurveyorname_, other->resurveyorname_);
    std::swap(resurveyorcode_, other->resurveyorcode_);
    std::swap(sellername_, other->sellername_);
    std::swap(sellerusercode_, other->sellerusercode_);
    std::swap(auditorname_, other->auditorname_);
    std::swap(auditorusercode_, other->auditorusercode_);
    std::swap(geocode_, other->geocode_);
    std::swap(geoname_, other->geoname_);
    std::swap(ordertitle_, other->ordertitle_);
    std::swap(customername_, other->customername_);
    std::swap(customertel_, other->customertel_);
    std::swap(customerpostcode_, other->customerpostcode_);
    std::swap(customerqq_, other->customerqq_);
    std::swap(customeremail_, other->customeremail_);
    std::swap(installaddress_, other->installaddress_);
    std::swap(orderremarks_, other->orderremarks_);
    std::swap(planname_, other->planname_);
    std::swap(planremarks_, other->planremarks_);
    std::swap(attachfilepath_, other->attachfilepath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ZB_OrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZB_OrderInfo_descriptor_;
  metadata.reflection = ZB_OrderInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ZB_Table::kZBBoardGapInfoFieldNumber;
const int ZB_Table::kZBBoardInfoFieldNumber;
const int ZB_Table::kZBBoardSealInfoFieldNumber;
const int ZB_Table::kZBObjectsFieldNumber;
const int ZB_Table::kZBOrderInfoFieldNumber;
#endif  // !_MSC_VER

ZB_Table::ZB_Table()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ZB_Table::InitAsDefaultInstance() {
}

ZB_Table::ZB_Table(const ZB_Table& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ZB_Table::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZB_Table::~ZB_Table() {
  SharedDtor();
}

void ZB_Table::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ZB_Table::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZB_Table::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZB_Table_descriptor_;
}

const ZB_Table& ZB_Table::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_2dZB_2eproto();
  return *default_instance_;
}

ZB_Table* ZB_Table::default_instance_ = NULL;

ZB_Table* ZB_Table::New() const {
  return new ZB_Table;
}

void ZB_Table::Clear() {
  zb_boardgapinfo_.Clear();
  zb_boardinfo_.Clear();
  zb_boardsealinfo_.Clear();
  zb_objects_.Clear();
  zb_orderinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ZB_Table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .transMsg.ZB_BoardGapInfo ZB_BoardGapInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ZB_BoardGapInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zb_boardgapinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_ZB_BoardGapInfo;
        if (input->ExpectTag(18)) goto parse_ZB_BoardInfo;
        break;
      }

      // repeated .transMsg.ZB_BoardInfo ZB_BoardInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ZB_BoardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zb_boardinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ZB_BoardInfo;
        if (input->ExpectTag(26)) goto parse_ZB_BoardSealInfo;
        break;
      }

      // repeated .transMsg.ZB_BoardSealInfo ZB_BoardSealInfo = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ZB_BoardSealInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zb_boardsealinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ZB_BoardSealInfo;
        if (input->ExpectTag(34)) goto parse_ZB_Objects;
        break;
      }

      // repeated .transMsg.ZB_Objects ZB_Objects = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ZB_Objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zb_objects()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ZB_Objects;
        if (input->ExpectTag(42)) goto parse_ZB_OrderInfo;
        break;
      }

      // repeated .transMsg.ZB_OrderInfo ZB_OrderInfo = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ZB_OrderInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zb_orderinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_ZB_OrderInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ZB_Table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .transMsg.ZB_BoardGapInfo ZB_BoardGapInfo = 1;
  for (int i = 0; i < this->zb_boardgapinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->zb_boardgapinfo(i), output);
  }

  // repeated .transMsg.ZB_BoardInfo ZB_BoardInfo = 2;
  for (int i = 0; i < this->zb_boardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->zb_boardinfo(i), output);
  }

  // repeated .transMsg.ZB_BoardSealInfo ZB_BoardSealInfo = 3;
  for (int i = 0; i < this->zb_boardsealinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->zb_boardsealinfo(i), output);
  }

  // repeated .transMsg.ZB_Objects ZB_Objects = 4;
  for (int i = 0; i < this->zb_objects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->zb_objects(i), output);
  }

  // repeated .transMsg.ZB_OrderInfo ZB_OrderInfo = 5;
  for (int i = 0; i < this->zb_orderinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->zb_orderinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ZB_Table::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .transMsg.ZB_BoardGapInfo ZB_BoardGapInfo = 1;
  for (int i = 0; i < this->zb_boardgapinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->zb_boardgapinfo(i), target);
  }

  // repeated .transMsg.ZB_BoardInfo ZB_BoardInfo = 2;
  for (int i = 0; i < this->zb_boardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->zb_boardinfo(i), target);
  }

  // repeated .transMsg.ZB_BoardSealInfo ZB_BoardSealInfo = 3;
  for (int i = 0; i < this->zb_boardsealinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->zb_boardsealinfo(i), target);
  }

  // repeated .transMsg.ZB_Objects ZB_Objects = 4;
  for (int i = 0; i < this->zb_objects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->zb_objects(i), target);
  }

  // repeated .transMsg.ZB_OrderInfo ZB_OrderInfo = 5;
  for (int i = 0; i < this->zb_orderinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->zb_orderinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ZB_Table::ByteSize() const {
  int total_size = 0;

  // repeated .transMsg.ZB_BoardGapInfo ZB_BoardGapInfo = 1;
  total_size += 1 * this->zb_boardgapinfo_size();
  for (int i = 0; i < this->zb_boardgapinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zb_boardgapinfo(i));
  }

  // repeated .transMsg.ZB_BoardInfo ZB_BoardInfo = 2;
  total_size += 1 * this->zb_boardinfo_size();
  for (int i = 0; i < this->zb_boardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zb_boardinfo(i));
  }

  // repeated .transMsg.ZB_BoardSealInfo ZB_BoardSealInfo = 3;
  total_size += 1 * this->zb_boardsealinfo_size();
  for (int i = 0; i < this->zb_boardsealinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zb_boardsealinfo(i));
  }

  // repeated .transMsg.ZB_Objects ZB_Objects = 4;
  total_size += 1 * this->zb_objects_size();
  for (int i = 0; i < this->zb_objects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zb_objects(i));
  }

  // repeated .transMsg.ZB_OrderInfo ZB_OrderInfo = 5;
  total_size += 1 * this->zb_orderinfo_size();
  for (int i = 0; i < this->zb_orderinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zb_orderinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZB_Table::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ZB_Table* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ZB_Table*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ZB_Table::MergeFrom(const ZB_Table& from) {
  GOOGLE_CHECK_NE(&from, this);
  zb_boardgapinfo_.MergeFrom(from.zb_boardgapinfo_);
  zb_boardinfo_.MergeFrom(from.zb_boardinfo_);
  zb_boardsealinfo_.MergeFrom(from.zb_boardsealinfo_);
  zb_objects_.MergeFrom(from.zb_objects_);
  zb_orderinfo_.MergeFrom(from.zb_orderinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ZB_Table::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZB_Table::CopyFrom(const ZB_Table& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZB_Table::IsInitialized() const {

  for (int i = 0; i < zb_boardgapinfo_size(); i++) {
    if (!this->zb_boardgapinfo(i).IsInitialized()) return false;
  }
  for (int i = 0; i < zb_boardinfo_size(); i++) {
    if (!this->zb_boardinfo(i).IsInitialized()) return false;
  }
  for (int i = 0; i < zb_boardsealinfo_size(); i++) {
    if (!this->zb_boardsealinfo(i).IsInitialized()) return false;
  }
  for (int i = 0; i < zb_objects_size(); i++) {
    if (!this->zb_objects(i).IsInitialized()) return false;
  }
  for (int i = 0; i < zb_orderinfo_size(); i++) {
    if (!this->zb_orderinfo(i).IsInitialized()) return false;
  }
  return true;
}

void ZB_Table::Swap(ZB_Table* other) {
  if (other != this) {
    zb_boardgapinfo_.Swap(&other->zb_boardgapinfo_);
    zb_boardinfo_.Swap(&other->zb_boardinfo_);
    zb_boardsealinfo_.Swap(&other->zb_boardsealinfo_);
    zb_objects_.Swap(&other->zb_objects_);
    zb_orderinfo_.Swap(&other->zb_orderinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ZB_Table::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZB_Table_descriptor_;
  metadata.reflection = ZB_Table_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

// @@protoc_insertion_point(global_scope)
