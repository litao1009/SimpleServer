// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UpdateOrder.proto

#ifndef PROTOBUF_UpdateOrder_2eproto__INCLUDED
#define PROTOBUF_UpdateOrder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EReturnStatus.pb.h"
#include "EOrderState.pb.h"
// @@protoc_insertion_point(includes)

namespace transMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UpdateOrder_2eproto();
void protobuf_AssignDesc_UpdateOrder_2eproto();
void protobuf_ShutdownFile_UpdateOrder_2eproto();

class SQUpdateOrder;
class SAUpdateOrder;
class QUpdateOrder;
class AUpdateOrder;

// ===================================================================

class SQUpdateOrder : public ::google::protobuf::Message {
 public:
  SQUpdateOrder();
  virtual ~SQUpdateOrder();

  SQUpdateOrder(const SQUpdateOrder& from);

  inline SQUpdateOrder& operator=(const SQUpdateOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SQUpdateOrder& default_instance();

  void Swap(SQUpdateOrder* other);

  // implements Message ----------------------------------------------

  SQUpdateOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SQUpdateOrder& from);
  void MergeFrom(const SQUpdateOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 OrderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline ::google::protobuf::int64 orderid() const;
  inline void set_orderid(::google::protobuf::int64 value);

  // required .order.EOrderState ToStatus = 2;
  inline bool has_tostatus() const;
  inline void clear_tostatus();
  static const int kToStatusFieldNumber = 2;
  inline ::order::EOrderState tostatus() const;
  inline void set_tostatus(::order::EOrderState value);

  // optional string Comment = 3;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 3;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:transMsg.SQUpdateOrder)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_tostatus();
  inline void clear_has_tostatus();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 orderid_;
  ::std::string* comment_;
  int tostatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_UpdateOrder_2eproto();
  friend void protobuf_AssignDesc_UpdateOrder_2eproto();
  friend void protobuf_ShutdownFile_UpdateOrder_2eproto();

  void InitAsDefaultInstance();
  static SQUpdateOrder* default_instance_;
};
// -------------------------------------------------------------------

class SAUpdateOrder : public ::google::protobuf::Message {
 public:
  SAUpdateOrder();
  virtual ~SAUpdateOrder();

  SAUpdateOrder(const SAUpdateOrder& from);

  inline SAUpdateOrder& operator=(const SAUpdateOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SAUpdateOrder& default_instance();

  void Swap(SAUpdateOrder* other);

  // implements Message ----------------------------------------------

  SAUpdateOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SAUpdateOrder& from);
  void MergeFrom(const SAUpdateOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 OrderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline ::google::protobuf::int64 orderid() const;
  inline void set_orderid(::google::protobuf::int64 value);

  // required .transMsg.EReturnStatus Stats = 2;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 2;
  inline ::transMsg::EReturnStatus stats() const;
  inline void set_stats(::transMsg::EReturnStatus value);

  // @@protoc_insertion_point(class_scope:transMsg.SAUpdateOrder)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 orderid_;
  int stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_UpdateOrder_2eproto();
  friend void protobuf_AssignDesc_UpdateOrder_2eproto();
  friend void protobuf_ShutdownFile_UpdateOrder_2eproto();

  void InitAsDefaultInstance();
  static SAUpdateOrder* default_instance_;
};
// -------------------------------------------------------------------

class QUpdateOrder : public ::google::protobuf::Message {
 public:
  QUpdateOrder();
  virtual ~QUpdateOrder();

  QUpdateOrder(const QUpdateOrder& from);

  inline QUpdateOrder& operator=(const QUpdateOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QUpdateOrder& default_instance();

  void Swap(QUpdateOrder* other);

  // implements Message ----------------------------------------------

  QUpdateOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QUpdateOrder& from);
  void MergeFrom(const QUpdateOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .transMsg.SQUpdateOrder Orders = 1;
  inline int orders_size() const;
  inline void clear_orders();
  static const int kOrdersFieldNumber = 1;
  inline const ::transMsg::SQUpdateOrder& orders(int index) const;
  inline ::transMsg::SQUpdateOrder* mutable_orders(int index);
  inline ::transMsg::SQUpdateOrder* add_orders();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SQUpdateOrder >&
      orders() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SQUpdateOrder >*
      mutable_orders();

  // @@protoc_insertion_point(class_scope:transMsg.QUpdateOrder)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::transMsg::SQUpdateOrder > orders_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_UpdateOrder_2eproto();
  friend void protobuf_AssignDesc_UpdateOrder_2eproto();
  friend void protobuf_ShutdownFile_UpdateOrder_2eproto();

  void InitAsDefaultInstance();
  static QUpdateOrder* default_instance_;
};
// -------------------------------------------------------------------

class AUpdateOrder : public ::google::protobuf::Message {
 public:
  AUpdateOrder();
  virtual ~AUpdateOrder();

  AUpdateOrder(const AUpdateOrder& from);

  inline AUpdateOrder& operator=(const AUpdateOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUpdateOrder& default_instance();

  void Swap(AUpdateOrder* other);

  // implements Message ----------------------------------------------

  AUpdateOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AUpdateOrder& from);
  void MergeFrom(const AUpdateOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .transMsg.EReturnStatus Stats = 1;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline ::transMsg::EReturnStatus stats() const;
  inline void set_stats(::transMsg::EReturnStatus value);

  // repeated .transMsg.SAUpdateOrder Results = 2;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 2;
  inline const ::transMsg::SAUpdateOrder& results(int index) const;
  inline ::transMsg::SAUpdateOrder* mutable_results(int index);
  inline ::transMsg::SAUpdateOrder* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SAUpdateOrder >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SAUpdateOrder >*
      mutable_results();

  // @@protoc_insertion_point(class_scope:transMsg.AUpdateOrder)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::transMsg::SAUpdateOrder > results_;
  int stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_UpdateOrder_2eproto();
  friend void protobuf_AssignDesc_UpdateOrder_2eproto();
  friend void protobuf_ShutdownFile_UpdateOrder_2eproto();

  void InitAsDefaultInstance();
  static AUpdateOrder* default_instance_;
};
// ===================================================================


// ===================================================================

// SQUpdateOrder

// required int64 OrderID = 1;
inline bool SQUpdateOrder::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SQUpdateOrder::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SQUpdateOrder::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SQUpdateOrder::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::int64 SQUpdateOrder::orderid() const {
  return orderid_;
}
inline void SQUpdateOrder::set_orderid(::google::protobuf::int64 value) {
  set_has_orderid();
  orderid_ = value;
}

// required .order.EOrderState ToStatus = 2;
inline bool SQUpdateOrder::has_tostatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SQUpdateOrder::set_has_tostatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SQUpdateOrder::clear_has_tostatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SQUpdateOrder::clear_tostatus() {
  tostatus_ = 1;
  clear_has_tostatus();
}
inline ::order::EOrderState SQUpdateOrder::tostatus() const {
  return static_cast< ::order::EOrderState >(tostatus_);
}
inline void SQUpdateOrder::set_tostatus(::order::EOrderState value) {
  assert(::order::EOrderState_IsValid(value));
  set_has_tostatus();
  tostatus_ = value;
}

// optional string Comment = 3;
inline bool SQUpdateOrder::has_comment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SQUpdateOrder::set_has_comment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SQUpdateOrder::clear_has_comment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SQUpdateOrder::clear_comment() {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& SQUpdateOrder::comment() const {
  return *comment_;
}
inline void SQUpdateOrder::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
}
inline void SQUpdateOrder::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
}
inline void SQUpdateOrder::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SQUpdateOrder::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  return comment_;
}
inline ::std::string* SQUpdateOrder::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SQUpdateOrder::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SAUpdateOrder

// required int64 OrderID = 1;
inline bool SAUpdateOrder::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SAUpdateOrder::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SAUpdateOrder::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SAUpdateOrder::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::int64 SAUpdateOrder::orderid() const {
  return orderid_;
}
inline void SAUpdateOrder::set_orderid(::google::protobuf::int64 value) {
  set_has_orderid();
  orderid_ = value;
}

// required .transMsg.EReturnStatus Stats = 2;
inline bool SAUpdateOrder::has_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SAUpdateOrder::set_has_stats() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SAUpdateOrder::clear_has_stats() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SAUpdateOrder::clear_stats() {
  stats_ = 0;
  clear_has_stats();
}
inline ::transMsg::EReturnStatus SAUpdateOrder::stats() const {
  return static_cast< ::transMsg::EReturnStatus >(stats_);
}
inline void SAUpdateOrder::set_stats(::transMsg::EReturnStatus value) {
  assert(::transMsg::EReturnStatus_IsValid(value));
  set_has_stats();
  stats_ = value;
}

// -------------------------------------------------------------------

// QUpdateOrder

// repeated .transMsg.SQUpdateOrder Orders = 1;
inline int QUpdateOrder::orders_size() const {
  return orders_.size();
}
inline void QUpdateOrder::clear_orders() {
  orders_.Clear();
}
inline const ::transMsg::SQUpdateOrder& QUpdateOrder::orders(int index) const {
  return orders_.Get(index);
}
inline ::transMsg::SQUpdateOrder* QUpdateOrder::mutable_orders(int index) {
  return orders_.Mutable(index);
}
inline ::transMsg::SQUpdateOrder* QUpdateOrder::add_orders() {
  return orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SQUpdateOrder >&
QUpdateOrder::orders() const {
  return orders_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SQUpdateOrder >*
QUpdateOrder::mutable_orders() {
  return &orders_;
}

// -------------------------------------------------------------------

// AUpdateOrder

// required .transMsg.EReturnStatus Stats = 1;
inline bool AUpdateOrder::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AUpdateOrder::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AUpdateOrder::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AUpdateOrder::clear_stats() {
  stats_ = 0;
  clear_has_stats();
}
inline ::transMsg::EReturnStatus AUpdateOrder::stats() const {
  return static_cast< ::transMsg::EReturnStatus >(stats_);
}
inline void AUpdateOrder::set_stats(::transMsg::EReturnStatus value) {
  assert(::transMsg::EReturnStatus_IsValid(value));
  set_has_stats();
  stats_ = value;
}

// repeated .transMsg.SAUpdateOrder Results = 2;
inline int AUpdateOrder::results_size() const {
  return results_.size();
}
inline void AUpdateOrder::clear_results() {
  results_.Clear();
}
inline const ::transMsg::SAUpdateOrder& AUpdateOrder::results(int index) const {
  return results_.Get(index);
}
inline ::transMsg::SAUpdateOrder* AUpdateOrder::mutable_results(int index) {
  return results_.Mutable(index);
}
inline ::transMsg::SAUpdateOrder* AUpdateOrder::add_results() {
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SAUpdateOrder >&
AUpdateOrder::results() const {
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SAUpdateOrder >*
AUpdateOrder::mutable_results() {
  return &results_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UpdateOrder_2eproto__INCLUDED
