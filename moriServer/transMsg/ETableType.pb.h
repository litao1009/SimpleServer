// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ETableType.proto

#ifndef PROTOBUF_ETableType_2eproto__INCLUDED
#define PROTOBUF_ETableType_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ETableType_2eproto();
void protobuf_AssignDesc_ETableType_2eproto();
void protobuf_ShutdownFile_ETableType_2eproto();


enum ETableType {
  ETT_SJ_TABLE = 1,
  ETT_DS_TABLE = 2,
  ETT_GC_TABLE = 3,
  ETT_ZB_TABLE = 4,
  ETT_LS_TABLE = 5,
  ETT_COUNT = 6
};
bool ETableType_IsValid(int value);
const ETableType ETableType_MIN = ETT_SJ_TABLE;
const ETableType ETableType_MAX = ETT_COUNT;
const int ETableType_ARRAYSIZE = ETableType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETableType_descriptor();
inline const ::std::string& ETableType_Name(ETableType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETableType_descriptor(), value);
}
inline bool ETableType_Parse(
    const ::std::string& name, ETableType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETableType>(
    ETableType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::transMsg::ETableType>() {
  return ::transMsg::ETableType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ETableType_2eproto__INCLUDED
