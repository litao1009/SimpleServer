// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetOrderLog.proto

#ifndef PROTOBUF_GetOrderLog_2eproto__INCLUDED
#define PROTOBUF_GetOrderLog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EReturnStatus.pb.h"
#include "msg-SV.pb.h"
// @@protoc_insertion_point(includes)

namespace transMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GetOrderLog_2eproto();
void protobuf_AssignDesc_GetOrderLog_2eproto();
void protobuf_ShutdownFile_GetOrderLog_2eproto();

class QGetOrderLog;
class AGetOrderLog;

// ===================================================================

class QGetOrderLog : public ::google::protobuf::Message {
 public:
  QGetOrderLog();
  virtual ~QGetOrderLog();

  QGetOrderLog(const QGetOrderLog& from);

  inline QGetOrderLog& operator=(const QGetOrderLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QGetOrderLog& default_instance();

  void Swap(QGetOrderLog* other);

  // implements Message ----------------------------------------------

  QGetOrderLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QGetOrderLog& from);
  void MergeFrom(const QGetOrderLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 OrderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline ::google::protobuf::int64 orderid() const;
  inline void set_orderid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:transMsg.QGetOrderLog)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 orderid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GetOrderLog_2eproto();
  friend void protobuf_AssignDesc_GetOrderLog_2eproto();
  friend void protobuf_ShutdownFile_GetOrderLog_2eproto();

  void InitAsDefaultInstance();
  static QGetOrderLog* default_instance_;
};
// -------------------------------------------------------------------

class AGetOrderLog : public ::google::protobuf::Message {
 public:
  AGetOrderLog();
  virtual ~AGetOrderLog();

  AGetOrderLog(const AGetOrderLog& from);

  inline AGetOrderLog& operator=(const AGetOrderLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AGetOrderLog& default_instance();

  void Swap(AGetOrderLog* other);

  // implements Message ----------------------------------------------

  AGetOrderLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AGetOrderLog& from);
  void MergeFrom(const AGetOrderLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .transMsg.EReturnStatus Stats = 1;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline ::transMsg::EReturnStatus stats() const;
  inline void set_stats(::transMsg::EReturnStatus value);

  // repeated .transMsg.SV_OrderActionRecordInfo OrderLog = 2;
  inline int orderlog_size() const;
  inline void clear_orderlog();
  static const int kOrderLogFieldNumber = 2;
  inline const ::transMsg::SV_OrderActionRecordInfo& orderlog(int index) const;
  inline ::transMsg::SV_OrderActionRecordInfo* mutable_orderlog(int index);
  inline ::transMsg::SV_OrderActionRecordInfo* add_orderlog();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo >&
      orderlog() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo >*
      mutable_orderlog();

  // @@protoc_insertion_point(class_scope:transMsg.AGetOrderLog)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo > orderlog_;
  int stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GetOrderLog_2eproto();
  friend void protobuf_AssignDesc_GetOrderLog_2eproto();
  friend void protobuf_ShutdownFile_GetOrderLog_2eproto();

  void InitAsDefaultInstance();
  static AGetOrderLog* default_instance_;
};
// ===================================================================


// ===================================================================

// QGetOrderLog

// required int64 OrderID = 1;
inline bool QGetOrderLog::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QGetOrderLog::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QGetOrderLog::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QGetOrderLog::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::int64 QGetOrderLog::orderid() const {
  return orderid_;
}
inline void QGetOrderLog::set_orderid(::google::protobuf::int64 value) {
  set_has_orderid();
  orderid_ = value;
}

// -------------------------------------------------------------------

// AGetOrderLog

// required .transMsg.EReturnStatus Stats = 1;
inline bool AGetOrderLog::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AGetOrderLog::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AGetOrderLog::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AGetOrderLog::clear_stats() {
  stats_ = 0;
  clear_has_stats();
}
inline ::transMsg::EReturnStatus AGetOrderLog::stats() const {
  return static_cast< ::transMsg::EReturnStatus >(stats_);
}
inline void AGetOrderLog::set_stats(::transMsg::EReturnStatus value) {
  assert(::transMsg::EReturnStatus_IsValid(value));
  set_has_stats();
  stats_ = value;
}

// repeated .transMsg.SV_OrderActionRecordInfo OrderLog = 2;
inline int AGetOrderLog::orderlog_size() const {
  return orderlog_.size();
}
inline void AGetOrderLog::clear_orderlog() {
  orderlog_.Clear();
}
inline const ::transMsg::SV_OrderActionRecordInfo& AGetOrderLog::orderlog(int index) const {
  return orderlog_.Get(index);
}
inline ::transMsg::SV_OrderActionRecordInfo* AGetOrderLog::mutable_orderlog(int index) {
  return orderlog_.Mutable(index);
}
inline ::transMsg::SV_OrderActionRecordInfo* AGetOrderLog::add_orderlog() {
  return orderlog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo >&
AGetOrderLog::orderlog() const {
  return orderlog_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo >*
AGetOrderLog::mutable_orderlog() {
  return &orderlog_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GetOrderLog_2eproto__INCLUDED
