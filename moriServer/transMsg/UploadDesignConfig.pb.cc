// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UploadDesignConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UploadDesignConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

namespace {

const ::google::protobuf::Descriptor* QUploadDesignConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QUploadDesignConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AUploadDesignConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AUploadDesignConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UploadDesignConfig_2eproto() {
  protobuf_AddDesc_UploadDesignConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UploadDesignConfig.proto");
  GOOGLE_CHECK(file != NULL);
  QUploadDesignConfig_descriptor_ = file->message_type(0);
  static const int QUploadDesignConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUploadDesignConfig, gl_designerconfiginfo_),
  };
  QUploadDesignConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QUploadDesignConfig_descriptor_,
      QUploadDesignConfig::default_instance_,
      QUploadDesignConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUploadDesignConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUploadDesignConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QUploadDesignConfig));
  AUploadDesignConfig_descriptor_ = file->message_type(1);
  static const int AUploadDesignConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUploadDesignConfig, stats_),
  };
  AUploadDesignConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AUploadDesignConfig_descriptor_,
      AUploadDesignConfig::default_instance_,
      AUploadDesignConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUploadDesignConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUploadDesignConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AUploadDesignConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UploadDesignConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QUploadDesignConfig_descriptor_, &QUploadDesignConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AUploadDesignConfig_descriptor_, &AUploadDesignConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UploadDesignConfig_2eproto() {
  delete QUploadDesignConfig::default_instance_;
  delete QUploadDesignConfig_reflection_;
  delete AUploadDesignConfig::default_instance_;
  delete AUploadDesignConfig_reflection_;
}

void protobuf_AddDesc_UploadDesignConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::transMsg::protobuf_AddDesc_EReturnStatus_2eproto();
  ::transMsg::protobuf_AddDesc_msg_2dGL_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030UploadDesignConfig.proto\022\010transMsg\032\023ER"
    "eturnStatus.proto\032\014msg-GL.proto\"U\n\023QUplo"
    "adDesignConfig\022>\n\025GL_DesignerConfigInfo\030"
    "\001 \002(\0132\037.transMsg.GL_DesignerConfigInfo\"="
    "\n\023AUploadDesignConfig\022&\n\005Stats\030\001 \002(\0162\027.t"
    "ransMsg.EReturnStatus", 221);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UploadDesignConfig.proto", &protobuf_RegisterTypes);
  QUploadDesignConfig::default_instance_ = new QUploadDesignConfig();
  AUploadDesignConfig::default_instance_ = new AUploadDesignConfig();
  QUploadDesignConfig::default_instance_->InitAsDefaultInstance();
  AUploadDesignConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UploadDesignConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UploadDesignConfig_2eproto {
  StaticDescriptorInitializer_UploadDesignConfig_2eproto() {
    protobuf_AddDesc_UploadDesignConfig_2eproto();
  }
} static_descriptor_initializer_UploadDesignConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int QUploadDesignConfig::kGLDesignerConfigInfoFieldNumber;
#endif  // !_MSC_VER

QUploadDesignConfig::QUploadDesignConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QUploadDesignConfig::InitAsDefaultInstance() {
  gl_designerconfiginfo_ = const_cast< ::transMsg::GL_DesignerConfigInfo*>(&::transMsg::GL_DesignerConfigInfo::default_instance());
}

QUploadDesignConfig::QUploadDesignConfig(const QUploadDesignConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QUploadDesignConfig::SharedCtor() {
  _cached_size_ = 0;
  gl_designerconfiginfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QUploadDesignConfig::~QUploadDesignConfig() {
  SharedDtor();
}

void QUploadDesignConfig::SharedDtor() {
  if (this != default_instance_) {
    delete gl_designerconfiginfo_;
  }
}

void QUploadDesignConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QUploadDesignConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QUploadDesignConfig_descriptor_;
}

const QUploadDesignConfig& QUploadDesignConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UploadDesignConfig_2eproto();
  return *default_instance_;
}

QUploadDesignConfig* QUploadDesignConfig::default_instance_ = NULL;

QUploadDesignConfig* QUploadDesignConfig::New() const {
  return new QUploadDesignConfig;
}

void QUploadDesignConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_gl_designerconfiginfo()) {
      if (gl_designerconfiginfo_ != NULL) gl_designerconfiginfo_->::transMsg::GL_DesignerConfigInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QUploadDesignConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .transMsg.GL_DesignerConfigInfo GL_DesignerConfigInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gl_designerconfiginfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QUploadDesignConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .transMsg.GL_DesignerConfigInfo GL_DesignerConfigInfo = 1;
  if (has_gl_designerconfiginfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gl_designerconfiginfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QUploadDesignConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .transMsg.GL_DesignerConfigInfo GL_DesignerConfigInfo = 1;
  if (has_gl_designerconfiginfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gl_designerconfiginfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QUploadDesignConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .transMsg.GL_DesignerConfigInfo GL_DesignerConfigInfo = 1;
    if (has_gl_designerconfiginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gl_designerconfiginfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QUploadDesignConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QUploadDesignConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QUploadDesignConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QUploadDesignConfig::MergeFrom(const QUploadDesignConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gl_designerconfiginfo()) {
      mutable_gl_designerconfiginfo()->::transMsg::GL_DesignerConfigInfo::MergeFrom(from.gl_designerconfiginfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QUploadDesignConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QUploadDesignConfig::CopyFrom(const QUploadDesignConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QUploadDesignConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QUploadDesignConfig::Swap(QUploadDesignConfig* other) {
  if (other != this) {
    std::swap(gl_designerconfiginfo_, other->gl_designerconfiginfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QUploadDesignConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QUploadDesignConfig_descriptor_;
  metadata.reflection = QUploadDesignConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AUploadDesignConfig::kStatsFieldNumber;
#endif  // !_MSC_VER

AUploadDesignConfig::AUploadDesignConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AUploadDesignConfig::InitAsDefaultInstance() {
}

AUploadDesignConfig::AUploadDesignConfig(const AUploadDesignConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AUploadDesignConfig::SharedCtor() {
  _cached_size_ = 0;
  stats_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AUploadDesignConfig::~AUploadDesignConfig() {
  SharedDtor();
}

void AUploadDesignConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AUploadDesignConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUploadDesignConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AUploadDesignConfig_descriptor_;
}

const AUploadDesignConfig& AUploadDesignConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UploadDesignConfig_2eproto();
  return *default_instance_;
}

AUploadDesignConfig* AUploadDesignConfig::default_instance_ = NULL;

AUploadDesignConfig* AUploadDesignConfig::New() const {
  return new AUploadDesignConfig;
}

void AUploadDesignConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stats_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AUploadDesignConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .transMsg.EReturnStatus Stats = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::EReturnStatus_IsValid(value)) {
            set_stats(static_cast< ::transMsg::EReturnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AUploadDesignConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stats(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AUploadDesignConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stats(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AUploadDesignConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .transMsg.EReturnStatus Stats = 1;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stats());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUploadDesignConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AUploadDesignConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AUploadDesignConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AUploadDesignConfig::MergeFrom(const AUploadDesignConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stats()) {
      set_stats(from.stats());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AUploadDesignConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUploadDesignConfig::CopyFrom(const AUploadDesignConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUploadDesignConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AUploadDesignConfig::Swap(AUploadDesignConfig* other) {
  if (other != this) {
    std::swap(stats_, other->stats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AUploadDesignConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AUploadDesignConfig_descriptor_;
  metadata.reflection = AUploadDesignConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

// @@protoc_insertion_point(global_scope)
