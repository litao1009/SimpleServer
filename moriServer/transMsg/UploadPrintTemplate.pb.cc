// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UploadPrintTemplate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UploadPrintTemplate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

namespace {

const ::google::protobuf::Descriptor* QUploadPrintTemplate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QUploadPrintTemplate_reflection_ = NULL;
const ::google::protobuf::Descriptor* AUploadPrintTemplate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AUploadPrintTemplate_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UploadPrintTemplate_2eproto() {
  protobuf_AddDesc_UploadPrintTemplate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UploadPrintTemplate.proto");
  GOOGLE_CHECK(file != NULL);
  QUploadPrintTemplate_descriptor_ = file->message_type(0);
  static const int QUploadPrintTemplate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUploadPrintTemplate, gl_printtemplateinfo_),
  };
  QUploadPrintTemplate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QUploadPrintTemplate_descriptor_,
      QUploadPrintTemplate::default_instance_,
      QUploadPrintTemplate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUploadPrintTemplate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUploadPrintTemplate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QUploadPrintTemplate));
  AUploadPrintTemplate_descriptor_ = file->message_type(1);
  static const int AUploadPrintTemplate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUploadPrintTemplate, stats_),
  };
  AUploadPrintTemplate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AUploadPrintTemplate_descriptor_,
      AUploadPrintTemplate::default_instance_,
      AUploadPrintTemplate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUploadPrintTemplate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUploadPrintTemplate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AUploadPrintTemplate));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UploadPrintTemplate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QUploadPrintTemplate_descriptor_, &QUploadPrintTemplate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AUploadPrintTemplate_descriptor_, &AUploadPrintTemplate::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UploadPrintTemplate_2eproto() {
  delete QUploadPrintTemplate::default_instance_;
  delete QUploadPrintTemplate_reflection_;
  delete AUploadPrintTemplate::default_instance_;
  delete AUploadPrintTemplate_reflection_;
}

void protobuf_AddDesc_UploadPrintTemplate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::transMsg::protobuf_AddDesc_EReturnStatus_2eproto();
  ::transMsg::protobuf_AddDesc_msg_2dGL_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031UploadPrintTemplate.proto\022\010transMsg\032\023E"
    "ReturnStatus.proto\032\014msg-GL.proto\"T\n\024QUpl"
    "oadPrintTemplate\022<\n\024GL_PrintTemplateInfo"
    "\030\001 \003(\0132\036.transMsg.GL_PrintTemplateInfo\">"
    "\n\024AUploadPrintTemplate\022&\n\005Stats\030\001 \002(\0162\027."
    "transMsg.EReturnStatus", 222);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UploadPrintTemplate.proto", &protobuf_RegisterTypes);
  QUploadPrintTemplate::default_instance_ = new QUploadPrintTemplate();
  AUploadPrintTemplate::default_instance_ = new AUploadPrintTemplate();
  QUploadPrintTemplate::default_instance_->InitAsDefaultInstance();
  AUploadPrintTemplate::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UploadPrintTemplate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UploadPrintTemplate_2eproto {
  StaticDescriptorInitializer_UploadPrintTemplate_2eproto() {
    protobuf_AddDesc_UploadPrintTemplate_2eproto();
  }
} static_descriptor_initializer_UploadPrintTemplate_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int QUploadPrintTemplate::kGLPrintTemplateInfoFieldNumber;
#endif  // !_MSC_VER

QUploadPrintTemplate::QUploadPrintTemplate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QUploadPrintTemplate::InitAsDefaultInstance() {
}

QUploadPrintTemplate::QUploadPrintTemplate(const QUploadPrintTemplate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QUploadPrintTemplate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QUploadPrintTemplate::~QUploadPrintTemplate() {
  SharedDtor();
}

void QUploadPrintTemplate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QUploadPrintTemplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QUploadPrintTemplate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QUploadPrintTemplate_descriptor_;
}

const QUploadPrintTemplate& QUploadPrintTemplate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UploadPrintTemplate_2eproto();
  return *default_instance_;
}

QUploadPrintTemplate* QUploadPrintTemplate::default_instance_ = NULL;

QUploadPrintTemplate* QUploadPrintTemplate::New() const {
  return new QUploadPrintTemplate;
}

void QUploadPrintTemplate::Clear() {
  gl_printtemplateinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QUploadPrintTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .transMsg.GL_PrintTemplateInfo GL_PrintTemplateInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_GL_PrintTemplateInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gl_printtemplateinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_GL_PrintTemplateInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QUploadPrintTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .transMsg.GL_PrintTemplateInfo GL_PrintTemplateInfo = 1;
  for (int i = 0; i < this->gl_printtemplateinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gl_printtemplateinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QUploadPrintTemplate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .transMsg.GL_PrintTemplateInfo GL_PrintTemplateInfo = 1;
  for (int i = 0; i < this->gl_printtemplateinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gl_printtemplateinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QUploadPrintTemplate::ByteSize() const {
  int total_size = 0;

  // repeated .transMsg.GL_PrintTemplateInfo GL_PrintTemplateInfo = 1;
  total_size += 1 * this->gl_printtemplateinfo_size();
  for (int i = 0; i < this->gl_printtemplateinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gl_printtemplateinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QUploadPrintTemplate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QUploadPrintTemplate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QUploadPrintTemplate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QUploadPrintTemplate::MergeFrom(const QUploadPrintTemplate& from) {
  GOOGLE_CHECK_NE(&from, this);
  gl_printtemplateinfo_.MergeFrom(from.gl_printtemplateinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QUploadPrintTemplate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QUploadPrintTemplate::CopyFrom(const QUploadPrintTemplate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QUploadPrintTemplate::IsInitialized() const {

  return true;
}

void QUploadPrintTemplate::Swap(QUploadPrintTemplate* other) {
  if (other != this) {
    gl_printtemplateinfo_.Swap(&other->gl_printtemplateinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QUploadPrintTemplate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QUploadPrintTemplate_descriptor_;
  metadata.reflection = QUploadPrintTemplate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AUploadPrintTemplate::kStatsFieldNumber;
#endif  // !_MSC_VER

AUploadPrintTemplate::AUploadPrintTemplate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AUploadPrintTemplate::InitAsDefaultInstance() {
}

AUploadPrintTemplate::AUploadPrintTemplate(const AUploadPrintTemplate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AUploadPrintTemplate::SharedCtor() {
  _cached_size_ = 0;
  stats_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AUploadPrintTemplate::~AUploadPrintTemplate() {
  SharedDtor();
}

void AUploadPrintTemplate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AUploadPrintTemplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUploadPrintTemplate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AUploadPrintTemplate_descriptor_;
}

const AUploadPrintTemplate& AUploadPrintTemplate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UploadPrintTemplate_2eproto();
  return *default_instance_;
}

AUploadPrintTemplate* AUploadPrintTemplate::default_instance_ = NULL;

AUploadPrintTemplate* AUploadPrintTemplate::New() const {
  return new AUploadPrintTemplate;
}

void AUploadPrintTemplate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stats_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AUploadPrintTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .transMsg.EReturnStatus Stats = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::EReturnStatus_IsValid(value)) {
            set_stats(static_cast< ::transMsg::EReturnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AUploadPrintTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stats(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AUploadPrintTemplate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stats(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AUploadPrintTemplate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .transMsg.EReturnStatus Stats = 1;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stats());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUploadPrintTemplate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AUploadPrintTemplate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AUploadPrintTemplate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AUploadPrintTemplate::MergeFrom(const AUploadPrintTemplate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stats()) {
      set_stats(from.stats());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AUploadPrintTemplate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUploadPrintTemplate::CopyFrom(const AUploadPrintTemplate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUploadPrintTemplate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AUploadPrintTemplate::Swap(AUploadPrintTemplate* other) {
  if (other != this) {
    std::swap(stats_, other->stats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AUploadPrintTemplate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AUploadPrintTemplate_descriptor_;
  metadata.reflection = AUploadPrintTemplate_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

// @@protoc_insertion_point(global_scope)
