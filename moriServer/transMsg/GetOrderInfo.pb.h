// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetOrderInfo.proto

#ifndef PROTOBUF_GetOrderInfo_2eproto__INCLUDED
#define PROTOBUF_GetOrderInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EReturnStatus.pb.h"
#include "ETableType.pb.h"
#include "msg-GL.pb.h"
// @@protoc_insertion_point(includes)

namespace transMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GetOrderInfo_2eproto();
void protobuf_AssignDesc_GetOrderInfo_2eproto();
void protobuf_ShutdownFile_GetOrderInfo_2eproto();

class SOrderInfo;
class SRejectedOrder;
class QGetOrderInfo;
class AGetOrderInfo;

// ===================================================================

class SOrderInfo : public ::google::protobuf::Message {
 public:
  SOrderInfo();
  virtual ~SOrderInfo();

  SOrderInfo(const SOrderInfo& from);

  inline SOrderInfo& operator=(const SOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SOrderInfo& default_instance();

  void Swap(SOrderInfo* other);

  // implements Message ----------------------------------------------

  SOrderInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SOrderInfo& from);
  void MergeFrom(const SOrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes OrderInfo = 1;
  inline bool has_orderinfo() const;
  inline void clear_orderinfo();
  static const int kOrderInfoFieldNumber = 1;
  inline const ::std::string& orderinfo() const;
  inline void set_orderinfo(const ::std::string& value);
  inline void set_orderinfo(const char* value);
  inline void set_orderinfo(const void* value, size_t size);
  inline ::std::string* mutable_orderinfo();
  inline ::std::string* release_orderinfo();
  inline void set_allocated_orderinfo(::std::string* orderinfo);

  // required .transMsg.GL_OrderInfo StatusInfo = 2;
  inline bool has_statusinfo() const;
  inline void clear_statusinfo();
  static const int kStatusInfoFieldNumber = 2;
  inline const ::transMsg::GL_OrderInfo& statusinfo() const;
  inline ::transMsg::GL_OrderInfo* mutable_statusinfo();
  inline ::transMsg::GL_OrderInfo* release_statusinfo();
  inline void set_allocated_statusinfo(::transMsg::GL_OrderInfo* statusinfo);

  // required int64 VerCode = 3;
  inline bool has_vercode() const;
  inline void clear_vercode();
  static const int kVerCodeFieldNumber = 3;
  inline ::google::protobuf::int64 vercode() const;
  inline void set_vercode(::google::protobuf::int64 value);

  // required int32 VerIndex = 4;
  inline bool has_verindex() const;
  inline void clear_verindex();
  static const int kVerIndexFieldNumber = 4;
  inline ::google::protobuf::int32 verindex() const;
  inline void set_verindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:transMsg.SOrderInfo)
 private:
  inline void set_has_orderinfo();
  inline void clear_has_orderinfo();
  inline void set_has_statusinfo();
  inline void clear_has_statusinfo();
  inline void set_has_vercode();
  inline void clear_has_vercode();
  inline void set_has_verindex();
  inline void clear_has_verindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* orderinfo_;
  ::transMsg::GL_OrderInfo* statusinfo_;
  ::google::protobuf::int64 vercode_;
  ::google::protobuf::int32 verindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GetOrderInfo_2eproto();
  friend void protobuf_AssignDesc_GetOrderInfo_2eproto();
  friend void protobuf_ShutdownFile_GetOrderInfo_2eproto();

  void InitAsDefaultInstance();
  static SOrderInfo* default_instance_;
};
// -------------------------------------------------------------------

class SRejectedOrder : public ::google::protobuf::Message {
 public:
  SRejectedOrder();
  virtual ~SRejectedOrder();

  SRejectedOrder(const SRejectedOrder& from);

  inline SRejectedOrder& operator=(const SRejectedOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SRejectedOrder& default_instance();

  void Swap(SRejectedOrder* other);

  // implements Message ----------------------------------------------

  SRejectedOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SRejectedOrder& from);
  void MergeFrom(const SRejectedOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 OrderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline ::google::protobuf::int64 orderid() const;
  inline void set_orderid(::google::protobuf::int64 value);

  // required .transMsg.EReturnStatus ErrCode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 2;
  inline ::transMsg::EReturnStatus errcode() const;
  inline void set_errcode(::transMsg::EReturnStatus value);

  // @@protoc_insertion_point(class_scope:transMsg.SRejectedOrder)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_errcode();
  inline void clear_has_errcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 orderid_;
  int errcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GetOrderInfo_2eproto();
  friend void protobuf_AssignDesc_GetOrderInfo_2eproto();
  friend void protobuf_ShutdownFile_GetOrderInfo_2eproto();

  void InitAsDefaultInstance();
  static SRejectedOrder* default_instance_;
};
// -------------------------------------------------------------------

class QGetOrderInfo : public ::google::protobuf::Message {
 public:
  QGetOrderInfo();
  virtual ~QGetOrderInfo();

  QGetOrderInfo(const QGetOrderInfo& from);

  inline QGetOrderInfo& operator=(const QGetOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QGetOrderInfo& default_instance();

  void Swap(QGetOrderInfo* other);

  // implements Message ----------------------------------------------

  QGetOrderInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QGetOrderInfo& from);
  void MergeFrom(const QGetOrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .transMsg.ETableType TableType = 1;
  inline bool has_tabletype() const;
  inline void clear_tabletype();
  static const int kTableTypeFieldNumber = 1;
  inline ::transMsg::ETableType tabletype() const;
  inline void set_tabletype(::transMsg::ETableType value);

  // optional string OrderCode = 2;
  inline bool has_ordercode() const;
  inline void clear_ordercode();
  static const int kOrderCodeFieldNumber = 2;
  inline const ::std::string& ordercode() const;
  inline void set_ordercode(const ::std::string& value);
  inline void set_ordercode(const char* value);
  inline void set_ordercode(const char* value, size_t size);
  inline ::std::string* mutable_ordercode();
  inline ::std::string* release_ordercode();
  inline void set_allocated_ordercode(::std::string* ordercode);

  // optional string OrderTitle = 3;
  inline bool has_ordertitle() const;
  inline void clear_ordertitle();
  static const int kOrderTitleFieldNumber = 3;
  inline const ::std::string& ordertitle() const;
  inline void set_ordertitle(const ::std::string& value);
  inline void set_ordertitle(const char* value);
  inline void set_ordertitle(const char* value, size_t size);
  inline ::std::string* mutable_ordertitle();
  inline ::std::string* release_ordertitle();
  inline void set_allocated_ordertitle(::std::string* ordertitle);

  // repeated int32 OrderStatus = 4 [packed = true];
  inline int orderstatus_size() const;
  inline void clear_orderstatus();
  static const int kOrderStatusFieldNumber = 4;
  inline ::google::protobuf::int32 orderstatus(int index) const;
  inline void set_orderstatus(int index, ::google::protobuf::int32 value);
  inline void add_orderstatus(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      orderstatus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_orderstatus();

  // optional int64 OrderStartTime = 5;
  inline bool has_orderstarttime() const;
  inline void clear_orderstarttime();
  static const int kOrderStartTimeFieldNumber = 5;
  inline ::google::protobuf::int64 orderstarttime() const;
  inline void set_orderstarttime(::google::protobuf::int64 value);

  // optional int64 OrderStopTime = 6;
  inline bool has_orderstoptime() const;
  inline void clear_orderstoptime();
  static const int kOrderStopTimeFieldNumber = 6;
  inline ::google::protobuf::int64 orderstoptime() const;
  inline void set_orderstoptime(::google::protobuf::int64 value);

  // optional int32 Amount = 7;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 7;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // optional int64 ShopAuditStartTime = 8;
  inline bool has_shopauditstarttime() const;
  inline void clear_shopauditstarttime();
  static const int kShopAuditStartTimeFieldNumber = 8;
  inline ::google::protobuf::int64 shopauditstarttime() const;
  inline void set_shopauditstarttime(::google::protobuf::int64 value);

  // optional int64 ShopAuditStopTime = 9;
  inline bool has_shopauditstoptime() const;
  inline void clear_shopauditstoptime();
  static const int kShopAuditStopTimeFieldNumber = 9;
  inline ::google::protobuf::int64 shopauditstoptime() const;
  inline void set_shopauditstoptime(::google::protobuf::int64 value);

  // optional int64 ShopCommitStartTime = 10;
  inline bool has_shopcommitstarttime() const;
  inline void clear_shopcommitstarttime();
  static const int kShopCommitStartTimeFieldNumber = 10;
  inline ::google::protobuf::int64 shopcommitstarttime() const;
  inline void set_shopcommitstarttime(::google::protobuf::int64 value);

  // optional int64 ShopCommitStopTime = 11;
  inline bool has_shopcommitstoptime() const;
  inline void clear_shopcommitstoptime();
  static const int kShopCommitStopTimeFieldNumber = 11;
  inline ::google::protobuf::int64 shopcommitstoptime() const;
  inline void set_shopcommitstoptime(::google::protobuf::int64 value);

  // optional int64 GraphAuditStartTime = 12;
  inline bool has_graphauditstarttime() const;
  inline void clear_graphauditstarttime();
  static const int kGraphAuditStartTimeFieldNumber = 12;
  inline ::google::protobuf::int64 graphauditstarttime() const;
  inline void set_graphauditstarttime(::google::protobuf::int64 value);

  // optional int64 GraphAuditStopTime = 13;
  inline bool has_graphauditstoptime() const;
  inline void clear_graphauditstoptime();
  static const int kGraphAuditStopTimeFieldNumber = 13;
  inline ::google::protobuf::int64 graphauditstoptime() const;
  inline void set_graphauditstoptime(::google::protobuf::int64 value);

  // optional int64 ListAuditStartTime = 14;
  inline bool has_listauditstarttime() const;
  inline void clear_listauditstarttime();
  static const int kListAuditStartTimeFieldNumber = 14;
  inline ::google::protobuf::int64 listauditstarttime() const;
  inline void set_listauditstarttime(::google::protobuf::int64 value);

  // optional int64 ListAuditStopTime = 15;
  inline bool has_listauditstoptime() const;
  inline void clear_listauditstoptime();
  static const int kListAuditStopTimeFieldNumber = 15;
  inline ::google::protobuf::int64 listauditstoptime() const;
  inline void set_listauditstoptime(::google::protobuf::int64 value);

  // optional int64 PriceAuditStartTime = 16;
  inline bool has_priceauditstarttime() const;
  inline void clear_priceauditstarttime();
  static const int kPriceAuditStartTimeFieldNumber = 16;
  inline ::google::protobuf::int64 priceauditstarttime() const;
  inline void set_priceauditstarttime(::google::protobuf::int64 value);

  // optional int64 PriceAuditStopTime = 17;
  inline bool has_priceauditstoptime() const;
  inline void clear_priceauditstoptime();
  static const int kPriceAuditStopTimeFieldNumber = 17;
  inline ::google::protobuf::int64 priceauditstoptime() const;
  inline void set_priceauditstoptime(::google::protobuf::int64 value);

  // optional int64 FinanceAuditStartTime = 18;
  inline bool has_financeauditstarttime() const;
  inline void clear_financeauditstarttime();
  static const int kFinanceAuditStartTimeFieldNumber = 18;
  inline ::google::protobuf::int64 financeauditstarttime() const;
  inline void set_financeauditstarttime(::google::protobuf::int64 value);

  // optional int64 FinanceAuditStopTime = 19;
  inline bool has_financeauditstoptime() const;
  inline void clear_financeauditstoptime();
  static const int kFinanceAuditStopTimeFieldNumber = 19;
  inline ::google::protobuf::int64 financeauditstoptime() const;
  inline void set_financeauditstoptime(::google::protobuf::int64 value);

  // optional string GeoCode = 20;
  inline bool has_geocode() const;
  inline void clear_geocode();
  static const int kGeoCodeFieldNumber = 20;
  inline const ::std::string& geocode() const;
  inline void set_geocode(const ::std::string& value);
  inline void set_geocode(const char* value);
  inline void set_geocode(const char* value, size_t size);
  inline ::std::string* mutable_geocode();
  inline ::std::string* release_geocode();
  inline void set_allocated_geocode(::std::string* geocode);

  // optional bool IsShare = 21 [default = false];
  inline bool has_isshare() const;
  inline void clear_isshare();
  static const int kIsShareFieldNumber = 21;
  inline bool isshare() const;
  inline void set_isshare(bool value);

  // @@protoc_insertion_point(class_scope:transMsg.QGetOrderInfo)
 private:
  inline void set_has_tabletype();
  inline void clear_has_tabletype();
  inline void set_has_ordercode();
  inline void clear_has_ordercode();
  inline void set_has_ordertitle();
  inline void clear_has_ordertitle();
  inline void set_has_orderstarttime();
  inline void clear_has_orderstarttime();
  inline void set_has_orderstoptime();
  inline void clear_has_orderstoptime();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_shopauditstarttime();
  inline void clear_has_shopauditstarttime();
  inline void set_has_shopauditstoptime();
  inline void clear_has_shopauditstoptime();
  inline void set_has_shopcommitstarttime();
  inline void clear_has_shopcommitstarttime();
  inline void set_has_shopcommitstoptime();
  inline void clear_has_shopcommitstoptime();
  inline void set_has_graphauditstarttime();
  inline void clear_has_graphauditstarttime();
  inline void set_has_graphauditstoptime();
  inline void clear_has_graphauditstoptime();
  inline void set_has_listauditstarttime();
  inline void clear_has_listauditstarttime();
  inline void set_has_listauditstoptime();
  inline void clear_has_listauditstoptime();
  inline void set_has_priceauditstarttime();
  inline void clear_has_priceauditstarttime();
  inline void set_has_priceauditstoptime();
  inline void clear_has_priceauditstoptime();
  inline void set_has_financeauditstarttime();
  inline void clear_has_financeauditstarttime();
  inline void set_has_financeauditstoptime();
  inline void clear_has_financeauditstoptime();
  inline void set_has_geocode();
  inline void clear_has_geocode();
  inline void set_has_isshare();
  inline void clear_has_isshare();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ordercode_;
  ::std::string* ordertitle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > orderstatus_;
  mutable int _orderstatus_cached_byte_size_;
  int tabletype_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int64 orderstarttime_;
  ::google::protobuf::int64 orderstoptime_;
  ::google::protobuf::int64 shopauditstarttime_;
  ::google::protobuf::int64 shopauditstoptime_;
  ::google::protobuf::int64 shopcommitstarttime_;
  ::google::protobuf::int64 shopcommitstoptime_;
  ::google::protobuf::int64 graphauditstarttime_;
  ::google::protobuf::int64 graphauditstoptime_;
  ::google::protobuf::int64 listauditstarttime_;
  ::google::protobuf::int64 listauditstoptime_;
  ::google::protobuf::int64 priceauditstarttime_;
  ::google::protobuf::int64 priceauditstoptime_;
  ::google::protobuf::int64 financeauditstarttime_;
  ::google::protobuf::int64 financeauditstoptime_;
  ::std::string* geocode_;
  bool isshare_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];

  friend void  protobuf_AddDesc_GetOrderInfo_2eproto();
  friend void protobuf_AssignDesc_GetOrderInfo_2eproto();
  friend void protobuf_ShutdownFile_GetOrderInfo_2eproto();

  void InitAsDefaultInstance();
  static QGetOrderInfo* default_instance_;
};
// -------------------------------------------------------------------

class AGetOrderInfo : public ::google::protobuf::Message {
 public:
  AGetOrderInfo();
  virtual ~AGetOrderInfo();

  AGetOrderInfo(const AGetOrderInfo& from);

  inline AGetOrderInfo& operator=(const AGetOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AGetOrderInfo& default_instance();

  void Swap(AGetOrderInfo* other);

  // implements Message ----------------------------------------------

  AGetOrderInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AGetOrderInfo& from);
  void MergeFrom(const AGetOrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .transMsg.EReturnStatus Stats = 1;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline ::transMsg::EReturnStatus stats() const;
  inline void set_stats(::transMsg::EReturnStatus value);

  // repeated .transMsg.SOrderInfo OrderInfo = 2;
  inline int orderinfo_size() const;
  inline void clear_orderinfo();
  static const int kOrderInfoFieldNumber = 2;
  inline const ::transMsg::SOrderInfo& orderinfo(int index) const;
  inline ::transMsg::SOrderInfo* mutable_orderinfo(int index);
  inline ::transMsg::SOrderInfo* add_orderinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SOrderInfo >&
      orderinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SOrderInfo >*
      mutable_orderinfo();

  // @@protoc_insertion_point(class_scope:transMsg.AGetOrderInfo)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::transMsg::SOrderInfo > orderinfo_;
  int stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GetOrderInfo_2eproto();
  friend void protobuf_AssignDesc_GetOrderInfo_2eproto();
  friend void protobuf_ShutdownFile_GetOrderInfo_2eproto();

  void InitAsDefaultInstance();
  static AGetOrderInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SOrderInfo

// required bytes OrderInfo = 1;
inline bool SOrderInfo::has_orderinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SOrderInfo::set_has_orderinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SOrderInfo::clear_has_orderinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SOrderInfo::clear_orderinfo() {
  if (orderinfo_ != &::google::protobuf::internal::kEmptyString) {
    orderinfo_->clear();
  }
  clear_has_orderinfo();
}
inline const ::std::string& SOrderInfo::orderinfo() const {
  return *orderinfo_;
}
inline void SOrderInfo::set_orderinfo(const ::std::string& value) {
  set_has_orderinfo();
  if (orderinfo_ == &::google::protobuf::internal::kEmptyString) {
    orderinfo_ = new ::std::string;
  }
  orderinfo_->assign(value);
}
inline void SOrderInfo::set_orderinfo(const char* value) {
  set_has_orderinfo();
  if (orderinfo_ == &::google::protobuf::internal::kEmptyString) {
    orderinfo_ = new ::std::string;
  }
  orderinfo_->assign(value);
}
inline void SOrderInfo::set_orderinfo(const void* value, size_t size) {
  set_has_orderinfo();
  if (orderinfo_ == &::google::protobuf::internal::kEmptyString) {
    orderinfo_ = new ::std::string;
  }
  orderinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SOrderInfo::mutable_orderinfo() {
  set_has_orderinfo();
  if (orderinfo_ == &::google::protobuf::internal::kEmptyString) {
    orderinfo_ = new ::std::string;
  }
  return orderinfo_;
}
inline ::std::string* SOrderInfo::release_orderinfo() {
  clear_has_orderinfo();
  if (orderinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orderinfo_;
    orderinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SOrderInfo::set_allocated_orderinfo(::std::string* orderinfo) {
  if (orderinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete orderinfo_;
  }
  if (orderinfo) {
    set_has_orderinfo();
    orderinfo_ = orderinfo;
  } else {
    clear_has_orderinfo();
    orderinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .transMsg.GL_OrderInfo StatusInfo = 2;
inline bool SOrderInfo::has_statusinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SOrderInfo::set_has_statusinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SOrderInfo::clear_has_statusinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SOrderInfo::clear_statusinfo() {
  if (statusinfo_ != NULL) statusinfo_->::transMsg::GL_OrderInfo::Clear();
  clear_has_statusinfo();
}
inline const ::transMsg::GL_OrderInfo& SOrderInfo::statusinfo() const {
  return statusinfo_ != NULL ? *statusinfo_ : *default_instance_->statusinfo_;
}
inline ::transMsg::GL_OrderInfo* SOrderInfo::mutable_statusinfo() {
  set_has_statusinfo();
  if (statusinfo_ == NULL) statusinfo_ = new ::transMsg::GL_OrderInfo;
  return statusinfo_;
}
inline ::transMsg::GL_OrderInfo* SOrderInfo::release_statusinfo() {
  clear_has_statusinfo();
  ::transMsg::GL_OrderInfo* temp = statusinfo_;
  statusinfo_ = NULL;
  return temp;
}
inline void SOrderInfo::set_allocated_statusinfo(::transMsg::GL_OrderInfo* statusinfo) {
  delete statusinfo_;
  statusinfo_ = statusinfo;
  if (statusinfo) {
    set_has_statusinfo();
  } else {
    clear_has_statusinfo();
  }
}

// required int64 VerCode = 3;
inline bool SOrderInfo::has_vercode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SOrderInfo::set_has_vercode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SOrderInfo::clear_has_vercode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SOrderInfo::clear_vercode() {
  vercode_ = GOOGLE_LONGLONG(0);
  clear_has_vercode();
}
inline ::google::protobuf::int64 SOrderInfo::vercode() const {
  return vercode_;
}
inline void SOrderInfo::set_vercode(::google::protobuf::int64 value) {
  set_has_vercode();
  vercode_ = value;
}

// required int32 VerIndex = 4;
inline bool SOrderInfo::has_verindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SOrderInfo::set_has_verindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SOrderInfo::clear_has_verindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SOrderInfo::clear_verindex() {
  verindex_ = 0;
  clear_has_verindex();
}
inline ::google::protobuf::int32 SOrderInfo::verindex() const {
  return verindex_;
}
inline void SOrderInfo::set_verindex(::google::protobuf::int32 value) {
  set_has_verindex();
  verindex_ = value;
}

// -------------------------------------------------------------------

// SRejectedOrder

// required int64 OrderID = 1;
inline bool SRejectedOrder::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SRejectedOrder::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SRejectedOrder::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SRejectedOrder::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::int64 SRejectedOrder::orderid() const {
  return orderid_;
}
inline void SRejectedOrder::set_orderid(::google::protobuf::int64 value) {
  set_has_orderid();
  orderid_ = value;
}

// required .transMsg.EReturnStatus ErrCode = 2;
inline bool SRejectedOrder::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SRejectedOrder::set_has_errcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SRejectedOrder::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SRejectedOrder::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::transMsg::EReturnStatus SRejectedOrder::errcode() const {
  return static_cast< ::transMsg::EReturnStatus >(errcode_);
}
inline void SRejectedOrder::set_errcode(::transMsg::EReturnStatus value) {
  assert(::transMsg::EReturnStatus_IsValid(value));
  set_has_errcode();
  errcode_ = value;
}

// -------------------------------------------------------------------

// QGetOrderInfo

// optional .transMsg.ETableType TableType = 1;
inline bool QGetOrderInfo::has_tabletype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QGetOrderInfo::set_has_tabletype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QGetOrderInfo::clear_has_tabletype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QGetOrderInfo::clear_tabletype() {
  tabletype_ = 1;
  clear_has_tabletype();
}
inline ::transMsg::ETableType QGetOrderInfo::tabletype() const {
  return static_cast< ::transMsg::ETableType >(tabletype_);
}
inline void QGetOrderInfo::set_tabletype(::transMsg::ETableType value) {
  assert(::transMsg::ETableType_IsValid(value));
  set_has_tabletype();
  tabletype_ = value;
}

// optional string OrderCode = 2;
inline bool QGetOrderInfo::has_ordercode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QGetOrderInfo::set_has_ordercode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QGetOrderInfo::clear_has_ordercode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QGetOrderInfo::clear_ordercode() {
  if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
    ordercode_->clear();
  }
  clear_has_ordercode();
}
inline const ::std::string& QGetOrderInfo::ordercode() const {
  return *ordercode_;
}
inline void QGetOrderInfo::set_ordercode(const ::std::string& value) {
  set_has_ordercode();
  if (ordercode_ == &::google::protobuf::internal::kEmptyString) {
    ordercode_ = new ::std::string;
  }
  ordercode_->assign(value);
}
inline void QGetOrderInfo::set_ordercode(const char* value) {
  set_has_ordercode();
  if (ordercode_ == &::google::protobuf::internal::kEmptyString) {
    ordercode_ = new ::std::string;
  }
  ordercode_->assign(value);
}
inline void QGetOrderInfo::set_ordercode(const char* value, size_t size) {
  set_has_ordercode();
  if (ordercode_ == &::google::protobuf::internal::kEmptyString) {
    ordercode_ = new ::std::string;
  }
  ordercode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QGetOrderInfo::mutable_ordercode() {
  set_has_ordercode();
  if (ordercode_ == &::google::protobuf::internal::kEmptyString) {
    ordercode_ = new ::std::string;
  }
  return ordercode_;
}
inline ::std::string* QGetOrderInfo::release_ordercode() {
  clear_has_ordercode();
  if (ordercode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ordercode_;
    ordercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QGetOrderInfo::set_allocated_ordercode(::std::string* ordercode) {
  if (ordercode_ != &::google::protobuf::internal::kEmptyString) {
    delete ordercode_;
  }
  if (ordercode) {
    set_has_ordercode();
    ordercode_ = ordercode;
  } else {
    clear_has_ordercode();
    ordercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string OrderTitle = 3;
inline bool QGetOrderInfo::has_ordertitle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QGetOrderInfo::set_has_ordertitle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QGetOrderInfo::clear_has_ordertitle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QGetOrderInfo::clear_ordertitle() {
  if (ordertitle_ != &::google::protobuf::internal::kEmptyString) {
    ordertitle_->clear();
  }
  clear_has_ordertitle();
}
inline const ::std::string& QGetOrderInfo::ordertitle() const {
  return *ordertitle_;
}
inline void QGetOrderInfo::set_ordertitle(const ::std::string& value) {
  set_has_ordertitle();
  if (ordertitle_ == &::google::protobuf::internal::kEmptyString) {
    ordertitle_ = new ::std::string;
  }
  ordertitle_->assign(value);
}
inline void QGetOrderInfo::set_ordertitle(const char* value) {
  set_has_ordertitle();
  if (ordertitle_ == &::google::protobuf::internal::kEmptyString) {
    ordertitle_ = new ::std::string;
  }
  ordertitle_->assign(value);
}
inline void QGetOrderInfo::set_ordertitle(const char* value, size_t size) {
  set_has_ordertitle();
  if (ordertitle_ == &::google::protobuf::internal::kEmptyString) {
    ordertitle_ = new ::std::string;
  }
  ordertitle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QGetOrderInfo::mutable_ordertitle() {
  set_has_ordertitle();
  if (ordertitle_ == &::google::protobuf::internal::kEmptyString) {
    ordertitle_ = new ::std::string;
  }
  return ordertitle_;
}
inline ::std::string* QGetOrderInfo::release_ordertitle() {
  clear_has_ordertitle();
  if (ordertitle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ordertitle_;
    ordertitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QGetOrderInfo::set_allocated_ordertitle(::std::string* ordertitle) {
  if (ordertitle_ != &::google::protobuf::internal::kEmptyString) {
    delete ordertitle_;
  }
  if (ordertitle) {
    set_has_ordertitle();
    ordertitle_ = ordertitle;
  } else {
    clear_has_ordertitle();
    ordertitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 OrderStatus = 4 [packed = true];
inline int QGetOrderInfo::orderstatus_size() const {
  return orderstatus_.size();
}
inline void QGetOrderInfo::clear_orderstatus() {
  orderstatus_.Clear();
}
inline ::google::protobuf::int32 QGetOrderInfo::orderstatus(int index) const {
  return orderstatus_.Get(index);
}
inline void QGetOrderInfo::set_orderstatus(int index, ::google::protobuf::int32 value) {
  orderstatus_.Set(index, value);
}
inline void QGetOrderInfo::add_orderstatus(::google::protobuf::int32 value) {
  orderstatus_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QGetOrderInfo::orderstatus() const {
  return orderstatus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QGetOrderInfo::mutable_orderstatus() {
  return &orderstatus_;
}

// optional int64 OrderStartTime = 5;
inline bool QGetOrderInfo::has_orderstarttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QGetOrderInfo::set_has_orderstarttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QGetOrderInfo::clear_has_orderstarttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QGetOrderInfo::clear_orderstarttime() {
  orderstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_orderstarttime();
}
inline ::google::protobuf::int64 QGetOrderInfo::orderstarttime() const {
  return orderstarttime_;
}
inline void QGetOrderInfo::set_orderstarttime(::google::protobuf::int64 value) {
  set_has_orderstarttime();
  orderstarttime_ = value;
}

// optional int64 OrderStopTime = 6;
inline bool QGetOrderInfo::has_orderstoptime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QGetOrderInfo::set_has_orderstoptime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QGetOrderInfo::clear_has_orderstoptime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QGetOrderInfo::clear_orderstoptime() {
  orderstoptime_ = GOOGLE_LONGLONG(0);
  clear_has_orderstoptime();
}
inline ::google::protobuf::int64 QGetOrderInfo::orderstoptime() const {
  return orderstoptime_;
}
inline void QGetOrderInfo::set_orderstoptime(::google::protobuf::int64 value) {
  set_has_orderstoptime();
  orderstoptime_ = value;
}

// optional int32 Amount = 7;
inline bool QGetOrderInfo::has_amount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QGetOrderInfo::set_has_amount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QGetOrderInfo::clear_has_amount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QGetOrderInfo::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 QGetOrderInfo::amount() const {
  return amount_;
}
inline void QGetOrderInfo::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
}

// optional int64 ShopAuditStartTime = 8;
inline bool QGetOrderInfo::has_shopauditstarttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QGetOrderInfo::set_has_shopauditstarttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QGetOrderInfo::clear_has_shopauditstarttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QGetOrderInfo::clear_shopauditstarttime() {
  shopauditstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_shopauditstarttime();
}
inline ::google::protobuf::int64 QGetOrderInfo::shopauditstarttime() const {
  return shopauditstarttime_;
}
inline void QGetOrderInfo::set_shopauditstarttime(::google::protobuf::int64 value) {
  set_has_shopauditstarttime();
  shopauditstarttime_ = value;
}

// optional int64 ShopAuditStopTime = 9;
inline bool QGetOrderInfo::has_shopauditstoptime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QGetOrderInfo::set_has_shopauditstoptime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QGetOrderInfo::clear_has_shopauditstoptime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QGetOrderInfo::clear_shopauditstoptime() {
  shopauditstoptime_ = GOOGLE_LONGLONG(0);
  clear_has_shopauditstoptime();
}
inline ::google::protobuf::int64 QGetOrderInfo::shopauditstoptime() const {
  return shopauditstoptime_;
}
inline void QGetOrderInfo::set_shopauditstoptime(::google::protobuf::int64 value) {
  set_has_shopauditstoptime();
  shopauditstoptime_ = value;
}

// optional int64 ShopCommitStartTime = 10;
inline bool QGetOrderInfo::has_shopcommitstarttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QGetOrderInfo::set_has_shopcommitstarttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QGetOrderInfo::clear_has_shopcommitstarttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QGetOrderInfo::clear_shopcommitstarttime() {
  shopcommitstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_shopcommitstarttime();
}
inline ::google::protobuf::int64 QGetOrderInfo::shopcommitstarttime() const {
  return shopcommitstarttime_;
}
inline void QGetOrderInfo::set_shopcommitstarttime(::google::protobuf::int64 value) {
  set_has_shopcommitstarttime();
  shopcommitstarttime_ = value;
}

// optional int64 ShopCommitStopTime = 11;
inline bool QGetOrderInfo::has_shopcommitstoptime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QGetOrderInfo::set_has_shopcommitstoptime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QGetOrderInfo::clear_has_shopcommitstoptime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QGetOrderInfo::clear_shopcommitstoptime() {
  shopcommitstoptime_ = GOOGLE_LONGLONG(0);
  clear_has_shopcommitstoptime();
}
inline ::google::protobuf::int64 QGetOrderInfo::shopcommitstoptime() const {
  return shopcommitstoptime_;
}
inline void QGetOrderInfo::set_shopcommitstoptime(::google::protobuf::int64 value) {
  set_has_shopcommitstoptime();
  shopcommitstoptime_ = value;
}

// optional int64 GraphAuditStartTime = 12;
inline bool QGetOrderInfo::has_graphauditstarttime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void QGetOrderInfo::set_has_graphauditstarttime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void QGetOrderInfo::clear_has_graphauditstarttime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void QGetOrderInfo::clear_graphauditstarttime() {
  graphauditstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_graphauditstarttime();
}
inline ::google::protobuf::int64 QGetOrderInfo::graphauditstarttime() const {
  return graphauditstarttime_;
}
inline void QGetOrderInfo::set_graphauditstarttime(::google::protobuf::int64 value) {
  set_has_graphauditstarttime();
  graphauditstarttime_ = value;
}

// optional int64 GraphAuditStopTime = 13;
inline bool QGetOrderInfo::has_graphauditstoptime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void QGetOrderInfo::set_has_graphauditstoptime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void QGetOrderInfo::clear_has_graphauditstoptime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void QGetOrderInfo::clear_graphauditstoptime() {
  graphauditstoptime_ = GOOGLE_LONGLONG(0);
  clear_has_graphauditstoptime();
}
inline ::google::protobuf::int64 QGetOrderInfo::graphauditstoptime() const {
  return graphauditstoptime_;
}
inline void QGetOrderInfo::set_graphauditstoptime(::google::protobuf::int64 value) {
  set_has_graphauditstoptime();
  graphauditstoptime_ = value;
}

// optional int64 ListAuditStartTime = 14;
inline bool QGetOrderInfo::has_listauditstarttime() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void QGetOrderInfo::set_has_listauditstarttime() {
  _has_bits_[0] |= 0x00002000u;
}
inline void QGetOrderInfo::clear_has_listauditstarttime() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void QGetOrderInfo::clear_listauditstarttime() {
  listauditstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_listauditstarttime();
}
inline ::google::protobuf::int64 QGetOrderInfo::listauditstarttime() const {
  return listauditstarttime_;
}
inline void QGetOrderInfo::set_listauditstarttime(::google::protobuf::int64 value) {
  set_has_listauditstarttime();
  listauditstarttime_ = value;
}

// optional int64 ListAuditStopTime = 15;
inline bool QGetOrderInfo::has_listauditstoptime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void QGetOrderInfo::set_has_listauditstoptime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void QGetOrderInfo::clear_has_listauditstoptime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void QGetOrderInfo::clear_listauditstoptime() {
  listauditstoptime_ = GOOGLE_LONGLONG(0);
  clear_has_listauditstoptime();
}
inline ::google::protobuf::int64 QGetOrderInfo::listauditstoptime() const {
  return listauditstoptime_;
}
inline void QGetOrderInfo::set_listauditstoptime(::google::protobuf::int64 value) {
  set_has_listauditstoptime();
  listauditstoptime_ = value;
}

// optional int64 PriceAuditStartTime = 16;
inline bool QGetOrderInfo::has_priceauditstarttime() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void QGetOrderInfo::set_has_priceauditstarttime() {
  _has_bits_[0] |= 0x00008000u;
}
inline void QGetOrderInfo::clear_has_priceauditstarttime() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void QGetOrderInfo::clear_priceauditstarttime() {
  priceauditstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_priceauditstarttime();
}
inline ::google::protobuf::int64 QGetOrderInfo::priceauditstarttime() const {
  return priceauditstarttime_;
}
inline void QGetOrderInfo::set_priceauditstarttime(::google::protobuf::int64 value) {
  set_has_priceauditstarttime();
  priceauditstarttime_ = value;
}

// optional int64 PriceAuditStopTime = 17;
inline bool QGetOrderInfo::has_priceauditstoptime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void QGetOrderInfo::set_has_priceauditstoptime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void QGetOrderInfo::clear_has_priceauditstoptime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void QGetOrderInfo::clear_priceauditstoptime() {
  priceauditstoptime_ = GOOGLE_LONGLONG(0);
  clear_has_priceauditstoptime();
}
inline ::google::protobuf::int64 QGetOrderInfo::priceauditstoptime() const {
  return priceauditstoptime_;
}
inline void QGetOrderInfo::set_priceauditstoptime(::google::protobuf::int64 value) {
  set_has_priceauditstoptime();
  priceauditstoptime_ = value;
}

// optional int64 FinanceAuditStartTime = 18;
inline bool QGetOrderInfo::has_financeauditstarttime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void QGetOrderInfo::set_has_financeauditstarttime() {
  _has_bits_[0] |= 0x00020000u;
}
inline void QGetOrderInfo::clear_has_financeauditstarttime() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void QGetOrderInfo::clear_financeauditstarttime() {
  financeauditstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_financeauditstarttime();
}
inline ::google::protobuf::int64 QGetOrderInfo::financeauditstarttime() const {
  return financeauditstarttime_;
}
inline void QGetOrderInfo::set_financeauditstarttime(::google::protobuf::int64 value) {
  set_has_financeauditstarttime();
  financeauditstarttime_ = value;
}

// optional int64 FinanceAuditStopTime = 19;
inline bool QGetOrderInfo::has_financeauditstoptime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void QGetOrderInfo::set_has_financeauditstoptime() {
  _has_bits_[0] |= 0x00040000u;
}
inline void QGetOrderInfo::clear_has_financeauditstoptime() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void QGetOrderInfo::clear_financeauditstoptime() {
  financeauditstoptime_ = GOOGLE_LONGLONG(0);
  clear_has_financeauditstoptime();
}
inline ::google::protobuf::int64 QGetOrderInfo::financeauditstoptime() const {
  return financeauditstoptime_;
}
inline void QGetOrderInfo::set_financeauditstoptime(::google::protobuf::int64 value) {
  set_has_financeauditstoptime();
  financeauditstoptime_ = value;
}

// optional string GeoCode = 20;
inline bool QGetOrderInfo::has_geocode() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void QGetOrderInfo::set_has_geocode() {
  _has_bits_[0] |= 0x00080000u;
}
inline void QGetOrderInfo::clear_has_geocode() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void QGetOrderInfo::clear_geocode() {
  if (geocode_ != &::google::protobuf::internal::kEmptyString) {
    geocode_->clear();
  }
  clear_has_geocode();
}
inline const ::std::string& QGetOrderInfo::geocode() const {
  return *geocode_;
}
inline void QGetOrderInfo::set_geocode(const ::std::string& value) {
  set_has_geocode();
  if (geocode_ == &::google::protobuf::internal::kEmptyString) {
    geocode_ = new ::std::string;
  }
  geocode_->assign(value);
}
inline void QGetOrderInfo::set_geocode(const char* value) {
  set_has_geocode();
  if (geocode_ == &::google::protobuf::internal::kEmptyString) {
    geocode_ = new ::std::string;
  }
  geocode_->assign(value);
}
inline void QGetOrderInfo::set_geocode(const char* value, size_t size) {
  set_has_geocode();
  if (geocode_ == &::google::protobuf::internal::kEmptyString) {
    geocode_ = new ::std::string;
  }
  geocode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QGetOrderInfo::mutable_geocode() {
  set_has_geocode();
  if (geocode_ == &::google::protobuf::internal::kEmptyString) {
    geocode_ = new ::std::string;
  }
  return geocode_;
}
inline ::std::string* QGetOrderInfo::release_geocode() {
  clear_has_geocode();
  if (geocode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = geocode_;
    geocode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QGetOrderInfo::set_allocated_geocode(::std::string* geocode) {
  if (geocode_ != &::google::protobuf::internal::kEmptyString) {
    delete geocode_;
  }
  if (geocode) {
    set_has_geocode();
    geocode_ = geocode;
  } else {
    clear_has_geocode();
    geocode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool IsShare = 21 [default = false];
inline bool QGetOrderInfo::has_isshare() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void QGetOrderInfo::set_has_isshare() {
  _has_bits_[0] |= 0x00100000u;
}
inline void QGetOrderInfo::clear_has_isshare() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void QGetOrderInfo::clear_isshare() {
  isshare_ = false;
  clear_has_isshare();
}
inline bool QGetOrderInfo::isshare() const {
  return isshare_;
}
inline void QGetOrderInfo::set_isshare(bool value) {
  set_has_isshare();
  isshare_ = value;
}

// -------------------------------------------------------------------

// AGetOrderInfo

// required .transMsg.EReturnStatus Stats = 1;
inline bool AGetOrderInfo::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AGetOrderInfo::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AGetOrderInfo::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AGetOrderInfo::clear_stats() {
  stats_ = 0;
  clear_has_stats();
}
inline ::transMsg::EReturnStatus AGetOrderInfo::stats() const {
  return static_cast< ::transMsg::EReturnStatus >(stats_);
}
inline void AGetOrderInfo::set_stats(::transMsg::EReturnStatus value) {
  assert(::transMsg::EReturnStatus_IsValid(value));
  set_has_stats();
  stats_ = value;
}

// repeated .transMsg.SOrderInfo OrderInfo = 2;
inline int AGetOrderInfo::orderinfo_size() const {
  return orderinfo_.size();
}
inline void AGetOrderInfo::clear_orderinfo() {
  orderinfo_.Clear();
}
inline const ::transMsg::SOrderInfo& AGetOrderInfo::orderinfo(int index) const {
  return orderinfo_.Get(index);
}
inline ::transMsg::SOrderInfo* AGetOrderInfo::mutable_orderinfo(int index) {
  return orderinfo_.Mutable(index);
}
inline ::transMsg::SOrderInfo* AGetOrderInfo::add_orderinfo() {
  return orderinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SOrderInfo >&
AGetOrderInfo::orderinfo() const {
  return orderinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SOrderInfo >*
AGetOrderInfo::mutable_orderinfo() {
  return &orderinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GetOrderInfo_2eproto__INCLUDED
