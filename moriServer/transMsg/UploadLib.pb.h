// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UploadLib.proto

#ifndef PROTOBUF_UploadLib_2eproto__INCLUDED
#define PROTOBUF_UploadLib_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EReturnStatus.pb.h"
#include "msg-JK.pb.h"
// @@protoc_insertion_point(includes)

namespace transMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UploadLib_2eproto();
void protobuf_AssignDesc_UploadLib_2eproto();
void protobuf_ShutdownFile_UploadLib_2eproto();

class QUpLoadLib;
class AUpLoadLib;

// ===================================================================

class QUpLoadLib : public ::google::protobuf::Message {
 public:
  QUpLoadLib();
  virtual ~QUpLoadLib();

  QUpLoadLib(const QUpLoadLib& from);

  inline QUpLoadLib& operator=(const QUpLoadLib& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QUpLoadLib& default_instance();

  void Swap(QUpLoadLib* other);

  // implements Message ----------------------------------------------

  QUpLoadLib* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QUpLoadLib& from);
  void MergeFrom(const QUpLoadLib& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .transMsg.JK_Table JK_Table = 1;
  inline bool has_jk_table() const;
  inline void clear_jk_table();
  static const int kJKTableFieldNumber = 1;
  inline const ::transMsg::JK_Table& jk_table() const;
  inline ::transMsg::JK_Table* mutable_jk_table();
  inline ::transMsg::JK_Table* release_jk_table();
  inline void set_allocated_jk_table(::transMsg::JK_Table* jk_table);

  // @@protoc_insertion_point(class_scope:transMsg.QUpLoadLib)
 private:
  inline void set_has_jk_table();
  inline void clear_has_jk_table();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::transMsg::JK_Table* jk_table_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_UploadLib_2eproto();
  friend void protobuf_AssignDesc_UploadLib_2eproto();
  friend void protobuf_ShutdownFile_UploadLib_2eproto();

  void InitAsDefaultInstance();
  static QUpLoadLib* default_instance_;
};
// -------------------------------------------------------------------

class AUpLoadLib : public ::google::protobuf::Message {
 public:
  AUpLoadLib();
  virtual ~AUpLoadLib();

  AUpLoadLib(const AUpLoadLib& from);

  inline AUpLoadLib& operator=(const AUpLoadLib& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUpLoadLib& default_instance();

  void Swap(AUpLoadLib* other);

  // implements Message ----------------------------------------------

  AUpLoadLib* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AUpLoadLib& from);
  void MergeFrom(const AUpLoadLib& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .transMsg.EReturnStatus Stats = 1;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline ::transMsg::EReturnStatus stats() const;
  inline void set_stats(::transMsg::EReturnStatus value);

  // optional int64 VerCode = 2;
  inline bool has_vercode() const;
  inline void clear_vercode();
  static const int kVerCodeFieldNumber = 2;
  inline ::google::protobuf::int64 vercode() const;
  inline void set_vercode(::google::protobuf::int64 value);

  // optional int32 VerIndex = 3;
  inline bool has_verindex() const;
  inline void clear_verindex();
  static const int kVerIndexFieldNumber = 3;
  inline ::google::protobuf::int32 verindex() const;
  inline void set_verindex(::google::protobuf::int32 value);

  // repeated bytes NeededFiles = 4;
  inline int neededfiles_size() const;
  inline void clear_neededfiles();
  static const int kNeededFilesFieldNumber = 4;
  inline const ::std::string& neededfiles(int index) const;
  inline ::std::string* mutable_neededfiles(int index);
  inline void set_neededfiles(int index, const ::std::string& value);
  inline void set_neededfiles(int index, const char* value);
  inline void set_neededfiles(int index, const void* value, size_t size);
  inline ::std::string* add_neededfiles();
  inline void add_neededfiles(const ::std::string& value);
  inline void add_neededfiles(const char* value);
  inline void add_neededfiles(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& neededfiles() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_neededfiles();

  // @@protoc_insertion_point(class_scope:transMsg.AUpLoadLib)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();
  inline void set_has_vercode();
  inline void clear_has_vercode();
  inline void set_has_verindex();
  inline void clear_has_verindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 vercode_;
  int stats_;
  ::google::protobuf::int32 verindex_;
  ::google::protobuf::RepeatedPtrField< ::std::string> neededfiles_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_UploadLib_2eproto();
  friend void protobuf_AssignDesc_UploadLib_2eproto();
  friend void protobuf_ShutdownFile_UploadLib_2eproto();

  void InitAsDefaultInstance();
  static AUpLoadLib* default_instance_;
};
// ===================================================================


// ===================================================================

// QUpLoadLib

// required .transMsg.JK_Table JK_Table = 1;
inline bool QUpLoadLib::has_jk_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QUpLoadLib::set_has_jk_table() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QUpLoadLib::clear_has_jk_table() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QUpLoadLib::clear_jk_table() {
  if (jk_table_ != NULL) jk_table_->::transMsg::JK_Table::Clear();
  clear_has_jk_table();
}
inline const ::transMsg::JK_Table& QUpLoadLib::jk_table() const {
  return jk_table_ != NULL ? *jk_table_ : *default_instance_->jk_table_;
}
inline ::transMsg::JK_Table* QUpLoadLib::mutable_jk_table() {
  set_has_jk_table();
  if (jk_table_ == NULL) jk_table_ = new ::transMsg::JK_Table;
  return jk_table_;
}
inline ::transMsg::JK_Table* QUpLoadLib::release_jk_table() {
  clear_has_jk_table();
  ::transMsg::JK_Table* temp = jk_table_;
  jk_table_ = NULL;
  return temp;
}
inline void QUpLoadLib::set_allocated_jk_table(::transMsg::JK_Table* jk_table) {
  delete jk_table_;
  jk_table_ = jk_table;
  if (jk_table) {
    set_has_jk_table();
  } else {
    clear_has_jk_table();
  }
}

// -------------------------------------------------------------------

// AUpLoadLib

// required .transMsg.EReturnStatus Stats = 1;
inline bool AUpLoadLib::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AUpLoadLib::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AUpLoadLib::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AUpLoadLib::clear_stats() {
  stats_ = 0;
  clear_has_stats();
}
inline ::transMsg::EReturnStatus AUpLoadLib::stats() const {
  return static_cast< ::transMsg::EReturnStatus >(stats_);
}
inline void AUpLoadLib::set_stats(::transMsg::EReturnStatus value) {
  assert(::transMsg::EReturnStatus_IsValid(value));
  set_has_stats();
  stats_ = value;
}

// optional int64 VerCode = 2;
inline bool AUpLoadLib::has_vercode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AUpLoadLib::set_has_vercode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AUpLoadLib::clear_has_vercode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AUpLoadLib::clear_vercode() {
  vercode_ = GOOGLE_LONGLONG(0);
  clear_has_vercode();
}
inline ::google::protobuf::int64 AUpLoadLib::vercode() const {
  return vercode_;
}
inline void AUpLoadLib::set_vercode(::google::protobuf::int64 value) {
  set_has_vercode();
  vercode_ = value;
}

// optional int32 VerIndex = 3;
inline bool AUpLoadLib::has_verindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AUpLoadLib::set_has_verindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AUpLoadLib::clear_has_verindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AUpLoadLib::clear_verindex() {
  verindex_ = 0;
  clear_has_verindex();
}
inline ::google::protobuf::int32 AUpLoadLib::verindex() const {
  return verindex_;
}
inline void AUpLoadLib::set_verindex(::google::protobuf::int32 value) {
  set_has_verindex();
  verindex_ = value;
}

// repeated bytes NeededFiles = 4;
inline int AUpLoadLib::neededfiles_size() const {
  return neededfiles_.size();
}
inline void AUpLoadLib::clear_neededfiles() {
  neededfiles_.Clear();
}
inline const ::std::string& AUpLoadLib::neededfiles(int index) const {
  return neededfiles_.Get(index);
}
inline ::std::string* AUpLoadLib::mutable_neededfiles(int index) {
  return neededfiles_.Mutable(index);
}
inline void AUpLoadLib::set_neededfiles(int index, const ::std::string& value) {
  neededfiles_.Mutable(index)->assign(value);
}
inline void AUpLoadLib::set_neededfiles(int index, const char* value) {
  neededfiles_.Mutable(index)->assign(value);
}
inline void AUpLoadLib::set_neededfiles(int index, const void* value, size_t size) {
  neededfiles_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AUpLoadLib::add_neededfiles() {
  return neededfiles_.Add();
}
inline void AUpLoadLib::add_neededfiles(const ::std::string& value) {
  neededfiles_.Add()->assign(value);
}
inline void AUpLoadLib::add_neededfiles(const char* value) {
  neededfiles_.Add()->assign(value);
}
inline void AUpLoadLib::add_neededfiles(const void* value, size_t size) {
  neededfiles_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AUpLoadLib::neededfiles() const {
  return neededfiles_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AUpLoadLib::mutable_neededfiles() {
  return &neededfiles_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UploadLib_2eproto__INCLUDED
