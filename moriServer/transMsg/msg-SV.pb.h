// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg-SV.proto

#ifndef PROTOBUF_msg_2dSV_2eproto__INCLUDED
#define PROTOBUF_msg_2dSV_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_2dSV_2eproto();
void protobuf_AssignDesc_msg_2dSV_2eproto();
void protobuf_ShutdownFile_msg_2dSV_2eproto();

class SV_BOMChargeInfo;
class SV_ChargeShopInfo;
class SV_LibFileInfo;
class SV_ModuleChargeInfo;
class SV_OrderActionRecordInfo;
class SV_OrderFileInfo;
class SV_UserLoginStatusInfo;
class SV_Table;

// ===================================================================

class SV_BOMChargeInfo : public ::google::protobuf::Message {
 public:
  SV_BOMChargeInfo();
  virtual ~SV_BOMChargeInfo();

  SV_BOMChargeInfo(const SV_BOMChargeInfo& from);

  inline SV_BOMChargeInfo& operator=(const SV_BOMChargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SV_BOMChargeInfo& default_instance();

  void Swap(SV_BOMChargeInfo* other);

  // implements Message ----------------------------------------------

  SV_BOMChargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SV_BOMChargeInfo& from);
  void MergeFrom(const SV_BOMChargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 BOMChargeID = 1;
  inline bool has_bomchargeid() const;
  inline void clear_bomchargeid();
  static const int kBOMChargeIDFieldNumber = 1;
  inline ::google::protobuf::int64 bomchargeid() const;
  inline void set_bomchargeid(::google::protobuf::int64 value);

  // required int32 FactoryID = 2;
  inline bool has_factoryid() const;
  inline void clear_factoryid();
  static const int kFactoryIDFieldNumber = 2;
  inline ::google::protobuf::int32 factoryid() const;
  inline void set_factoryid(::google::protobuf::int32 value);

  // required int32 CategoryID = 3;
  inline bool has_categoryid() const;
  inline void clear_categoryid();
  static const int kCategoryIDFieldNumber = 3;
  inline ::google::protobuf::int32 categoryid() const;
  inline void set_categoryid(::google::protobuf::int32 value);

  // required int32 Enable = 4;
  inline bool has_enable() const;
  inline void clear_enable();
  static const int kEnableFieldNumber = 4;
  inline ::google::protobuf::int32 enable() const;
  inline void set_enable(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:transMsg.SV_BOMChargeInfo)
 private:
  inline void set_has_bomchargeid();
  inline void clear_has_bomchargeid();
  inline void set_has_factoryid();
  inline void clear_has_factoryid();
  inline void set_has_categoryid();
  inline void clear_has_categoryid();
  inline void set_has_enable();
  inline void clear_has_enable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 bomchargeid_;
  ::google::protobuf::int32 factoryid_;
  ::google::protobuf::int32 categoryid_;
  ::google::protobuf::int32 enable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2dSV_2eproto();
  friend void protobuf_AssignDesc_msg_2dSV_2eproto();
  friend void protobuf_ShutdownFile_msg_2dSV_2eproto();

  void InitAsDefaultInstance();
  static SV_BOMChargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class SV_ChargeShopInfo : public ::google::protobuf::Message {
 public:
  SV_ChargeShopInfo();
  virtual ~SV_ChargeShopInfo();

  SV_ChargeShopInfo(const SV_ChargeShopInfo& from);

  inline SV_ChargeShopInfo& operator=(const SV_ChargeShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SV_ChargeShopInfo& default_instance();

  void Swap(SV_ChargeShopInfo* other);

  // implements Message ----------------------------------------------

  SV_ChargeShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SV_ChargeShopInfo& from);
  void MergeFrom(const SV_ChargeShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 RecordID = 1;
  inline bool has_recordid() const;
  inline void clear_recordid();
  static const int kRecordIDFieldNumber = 1;
  inline ::google::protobuf::int32 recordid() const;
  inline void set_recordid(::google::protobuf::int32 value);

  // required int32 FactoryID = 2;
  inline bool has_factoryid() const;
  inline void clear_factoryid();
  static const int kFactoryIDFieldNumber = 2;
  inline ::google::protobuf::int32 factoryid() const;
  inline void set_factoryid(::google::protobuf::int32 value);

  // required int32 ShopID = 3;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIDFieldNumber = 3;
  inline ::google::protobuf::int32 shopid() const;
  inline void set_shopid(::google::protobuf::int32 value);

  // required int32 UserID = 4;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 4;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // required int64 StartTime = 5;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 5;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // required int64 StopTime = 6;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 6;
  inline ::google::protobuf::int64 stoptime() const;
  inline void set_stoptime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:transMsg.SV_ChargeShopInfo)
 private:
  inline void set_has_recordid();
  inline void clear_has_recordid();
  inline void set_has_factoryid();
  inline void clear_has_factoryid();
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 recordid_;
  ::google::protobuf::int32 factoryid_;
  ::google::protobuf::int32 shopid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 stoptime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2dSV_2eproto();
  friend void protobuf_AssignDesc_msg_2dSV_2eproto();
  friend void protobuf_ShutdownFile_msg_2dSV_2eproto();

  void InitAsDefaultInstance();
  static SV_ChargeShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class SV_LibFileInfo : public ::google::protobuf::Message {
 public:
  SV_LibFileInfo();
  virtual ~SV_LibFileInfo();

  SV_LibFileInfo(const SV_LibFileInfo& from);

  inline SV_LibFileInfo& operator=(const SV_LibFileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SV_LibFileInfo& default_instance();

  void Swap(SV_LibFileInfo* other);

  // implements Message ----------------------------------------------

  SV_LibFileInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SV_LibFileInfo& from);
  void MergeFrom(const SV_LibFileInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 DeptID = 1;
  inline bool has_deptid() const;
  inline void clear_deptid();
  static const int kDeptIDFieldNumber = 1;
  inline ::google::protobuf::int32 deptid() const;
  inline void set_deptid(::google::protobuf::int32 value);

  // required string HashCode = 2;
  inline bool has_hashcode() const;
  inline void clear_hashcode();
  static const int kHashCodeFieldNumber = 2;
  inline const ::std::string& hashcode() const;
  inline void set_hashcode(const ::std::string& value);
  inline void set_hashcode(const char* value);
  inline void set_hashcode(const char* value, size_t size);
  inline ::std::string* mutable_hashcode();
  inline ::std::string* release_hashcode();
  inline void set_allocated_hashcode(::std::string* hashcode);

  // required string DestPath = 3;
  inline bool has_destpath() const;
  inline void clear_destpath();
  static const int kDestPathFieldNumber = 3;
  inline const ::std::string& destpath() const;
  inline void set_destpath(const ::std::string& value);
  inline void set_destpath(const char* value);
  inline void set_destpath(const char* value, size_t size);
  inline ::std::string* mutable_destpath();
  inline ::std::string* release_destpath();
  inline void set_allocated_destpath(::std::string* destpath);

  // @@protoc_insertion_point(class_scope:transMsg.SV_LibFileInfo)
 private:
  inline void set_has_deptid();
  inline void clear_has_deptid();
  inline void set_has_hashcode();
  inline void clear_has_hashcode();
  inline void set_has_destpath();
  inline void clear_has_destpath();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* hashcode_;
  ::std::string* destpath_;
  ::google::protobuf::int32 deptid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2dSV_2eproto();
  friend void protobuf_AssignDesc_msg_2dSV_2eproto();
  friend void protobuf_ShutdownFile_msg_2dSV_2eproto();

  void InitAsDefaultInstance();
  static SV_LibFileInfo* default_instance_;
};
// -------------------------------------------------------------------

class SV_ModuleChargeInfo : public ::google::protobuf::Message {
 public:
  SV_ModuleChargeInfo();
  virtual ~SV_ModuleChargeInfo();

  SV_ModuleChargeInfo(const SV_ModuleChargeInfo& from);

  inline SV_ModuleChargeInfo& operator=(const SV_ModuleChargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SV_ModuleChargeInfo& default_instance();

  void Swap(SV_ModuleChargeInfo* other);

  // implements Message ----------------------------------------------

  SV_ModuleChargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SV_ModuleChargeInfo& from);
  void MergeFrom(const SV_ModuleChargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ModuleChargeID = 1;
  inline bool has_modulechargeid() const;
  inline void clear_modulechargeid();
  static const int kModuleChargeIDFieldNumber = 1;
  inline ::google::protobuf::int64 modulechargeid() const;
  inline void set_modulechargeid(::google::protobuf::int64 value);

  // required int32 ModuleID = 2;
  inline bool has_moduleid() const;
  inline void clear_moduleid();
  static const int kModuleIDFieldNumber = 2;
  inline ::google::protobuf::int32 moduleid() const;
  inline void set_moduleid(::google::protobuf::int32 value);

  // required int32 FactoryID = 3;
  inline bool has_factoryid() const;
  inline void clear_factoryid();
  static const int kFactoryIDFieldNumber = 3;
  inline ::google::protobuf::int32 factoryid() const;
  inline void set_factoryid(::google::protobuf::int32 value);

  // required int32 ShopID = 4;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIDFieldNumber = 4;
  inline ::google::protobuf::int32 shopid() const;
  inline void set_shopid(::google::protobuf::int32 value);

  // required int32 UserID = 5;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 5;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // required int64 StartTime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 6;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // required int64 StopTime = 7;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 7;
  inline ::google::protobuf::int64 stoptime() const;
  inline void set_stoptime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:transMsg.SV_ModuleChargeInfo)
 private:
  inline void set_has_modulechargeid();
  inline void clear_has_modulechargeid();
  inline void set_has_moduleid();
  inline void clear_has_moduleid();
  inline void set_has_factoryid();
  inline void clear_has_factoryid();
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 modulechargeid_;
  ::google::protobuf::int32 moduleid_;
  ::google::protobuf::int32 factoryid_;
  ::google::protobuf::int32 shopid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 stoptime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2dSV_2eproto();
  friend void protobuf_AssignDesc_msg_2dSV_2eproto();
  friend void protobuf_ShutdownFile_msg_2dSV_2eproto();

  void InitAsDefaultInstance();
  static SV_ModuleChargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class SV_OrderActionRecordInfo : public ::google::protobuf::Message {
 public:
  SV_OrderActionRecordInfo();
  virtual ~SV_OrderActionRecordInfo();

  SV_OrderActionRecordInfo(const SV_OrderActionRecordInfo& from);

  inline SV_OrderActionRecordInfo& operator=(const SV_OrderActionRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SV_OrderActionRecordInfo& default_instance();

  void Swap(SV_OrderActionRecordInfo* other);

  // implements Message ----------------------------------------------

  SV_OrderActionRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SV_OrderActionRecordInfo& from);
  void MergeFrom(const SV_OrderActionRecordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 RecordID = 1;
  inline bool has_recordid() const;
  inline void clear_recordid();
  static const int kRecordIDFieldNumber = 1;
  inline ::google::protobuf::int64 recordid() const;
  inline void set_recordid(::google::protobuf::int64 value);

  // required int64 OrderID = 2;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 2;
  inline ::google::protobuf::int64 orderid() const;
  inline void set_orderid(::google::protobuf::int64 value);

  // required int32 UserID = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // required int32 ActionID = 4;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionIDFieldNumber = 4;
  inline ::google::protobuf::int32 actionid() const;
  inline void set_actionid(::google::protobuf::int32 value);

  // required int64 RecordTime = 5;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordTimeFieldNumber = 5;
  inline ::google::protobuf::int64 recordtime() const;
  inline void set_recordtime(::google::protobuf::int64 value);

  // required string AuditComment = 6;
  inline bool has_auditcomment() const;
  inline void clear_auditcomment();
  static const int kAuditCommentFieldNumber = 6;
  inline const ::std::string& auditcomment() const;
  inline void set_auditcomment(const ::std::string& value);
  inline void set_auditcomment(const char* value);
  inline void set_auditcomment(const char* value, size_t size);
  inline ::std::string* mutable_auditcomment();
  inline ::std::string* release_auditcomment();
  inline void set_allocated_auditcomment(::std::string* auditcomment);

  // @@protoc_insertion_point(class_scope:transMsg.SV_OrderActionRecordInfo)
 private:
  inline void set_has_recordid();
  inline void clear_has_recordid();
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_actionid();
  inline void clear_has_actionid();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();
  inline void set_has_auditcomment();
  inline void clear_has_auditcomment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 recordid_;
  ::google::protobuf::int64 orderid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 actionid_;
  ::google::protobuf::int64 recordtime_;
  ::std::string* auditcomment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2dSV_2eproto();
  friend void protobuf_AssignDesc_msg_2dSV_2eproto();
  friend void protobuf_ShutdownFile_msg_2dSV_2eproto();

  void InitAsDefaultInstance();
  static SV_OrderActionRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

class SV_OrderFileInfo : public ::google::protobuf::Message {
 public:
  SV_OrderFileInfo();
  virtual ~SV_OrderFileInfo();

  SV_OrderFileInfo(const SV_OrderFileInfo& from);

  inline SV_OrderFileInfo& operator=(const SV_OrderFileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SV_OrderFileInfo& default_instance();

  void Swap(SV_OrderFileInfo* other);

  // implements Message ----------------------------------------------

  SV_OrderFileInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SV_OrderFileInfo& from);
  void MergeFrom(const SV_OrderFileInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 OrderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline ::google::protobuf::int64 orderid() const;
  inline void set_orderid(::google::protobuf::int64 value);

  // required int32 TableType = 2;
  inline bool has_tabletype() const;
  inline void clear_tabletype();
  static const int kTableTypeFieldNumber = 2;
  inline ::google::protobuf::int32 tabletype() const;
  inline void set_tabletype(::google::protobuf::int32 value);

  // required string FilePath = 3;
  inline bool has_filepath() const;
  inline void clear_filepath();
  static const int kFilePathFieldNumber = 3;
  inline const ::std::string& filepath() const;
  inline void set_filepath(const ::std::string& value);
  inline void set_filepath(const char* value);
  inline void set_filepath(const char* value, size_t size);
  inline ::std::string* mutable_filepath();
  inline ::std::string* release_filepath();
  inline void set_allocated_filepath(::std::string* filepath);

  // @@protoc_insertion_point(class_scope:transMsg.SV_OrderFileInfo)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_tabletype();
  inline void clear_has_tabletype();
  inline void set_has_filepath();
  inline void clear_has_filepath();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 orderid_;
  ::std::string* filepath_;
  ::google::protobuf::int32 tabletype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2dSV_2eproto();
  friend void protobuf_AssignDesc_msg_2dSV_2eproto();
  friend void protobuf_ShutdownFile_msg_2dSV_2eproto();

  void InitAsDefaultInstance();
  static SV_OrderFileInfo* default_instance_;
};
// -------------------------------------------------------------------

class SV_UserLoginStatusInfo : public ::google::protobuf::Message {
 public:
  SV_UserLoginStatusInfo();
  virtual ~SV_UserLoginStatusInfo();

  SV_UserLoginStatusInfo(const SV_UserLoginStatusInfo& from);

  inline SV_UserLoginStatusInfo& operator=(const SV_UserLoginStatusInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SV_UserLoginStatusInfo& default_instance();

  void Swap(SV_UserLoginStatusInfo* other);

  // implements Message ----------------------------------------------

  SV_UserLoginStatusInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SV_UserLoginStatusInfo& from);
  void MergeFrom(const SV_UserLoginStatusInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 LoginType = 1;
  inline bool has_logintype() const;
  inline void clear_logintype();
  static const int kLoginTypeFieldNumber = 1;
  inline ::google::protobuf::int32 logintype() const;
  inline void set_logintype(::google::protobuf::int32 value);

  // required int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // required int32 LoginStatus = 3;
  inline bool has_loginstatus() const;
  inline void clear_loginstatus();
  static const int kLoginStatusFieldNumber = 3;
  inline ::google::protobuf::int32 loginstatus() const;
  inline void set_loginstatus(::google::protobuf::int32 value);

  // required int64 LoginTime = 4;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 4;
  inline ::google::protobuf::int64 logintime() const;
  inline void set_logintime(::google::protobuf::int64 value);

  // required int64 LastVisitTime = 5;
  inline bool has_lastvisittime() const;
  inline void clear_lastvisittime();
  static const int kLastVisitTimeFieldNumber = 5;
  inline ::google::protobuf::int64 lastvisittime() const;
  inline void set_lastvisittime(::google::protobuf::int64 value);

  // required string LoginIP = 6;
  inline bool has_loginip() const;
  inline void clear_loginip();
  static const int kLoginIPFieldNumber = 6;
  inline const ::std::string& loginip() const;
  inline void set_loginip(const ::std::string& value);
  inline void set_loginip(const char* value);
  inline void set_loginip(const char* value, size_t size);
  inline ::std::string* mutable_loginip();
  inline ::std::string* release_loginip();
  inline void set_allocated_loginip(::std::string* loginip);

  // @@protoc_insertion_point(class_scope:transMsg.SV_UserLoginStatusInfo)
 private:
  inline void set_has_logintype();
  inline void clear_has_logintype();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_loginstatus();
  inline void clear_has_loginstatus();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_lastvisittime();
  inline void clear_has_lastvisittime();
  inline void set_has_loginip();
  inline void clear_has_loginip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 logintype_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int64 logintime_;
  ::google::protobuf::int64 lastvisittime_;
  ::std::string* loginip_;
  ::google::protobuf::int32 loginstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2dSV_2eproto();
  friend void protobuf_AssignDesc_msg_2dSV_2eproto();
  friend void protobuf_ShutdownFile_msg_2dSV_2eproto();

  void InitAsDefaultInstance();
  static SV_UserLoginStatusInfo* default_instance_;
};
// -------------------------------------------------------------------

class SV_Table : public ::google::protobuf::Message {
 public:
  SV_Table();
  virtual ~SV_Table();

  SV_Table(const SV_Table& from);

  inline SV_Table& operator=(const SV_Table& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SV_Table& default_instance();

  void Swap(SV_Table* other);

  // implements Message ----------------------------------------------

  SV_Table* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SV_Table& from);
  void MergeFrom(const SV_Table& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .transMsg.SV_BOMChargeInfo SV_BOMChargeInfo = 1;
  inline int sv_bomchargeinfo_size() const;
  inline void clear_sv_bomchargeinfo();
  static const int kSVBOMChargeInfoFieldNumber = 1;
  inline const ::transMsg::SV_BOMChargeInfo& sv_bomchargeinfo(int index) const;
  inline ::transMsg::SV_BOMChargeInfo* mutable_sv_bomchargeinfo(int index);
  inline ::transMsg::SV_BOMChargeInfo* add_sv_bomchargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_BOMChargeInfo >&
      sv_bomchargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_BOMChargeInfo >*
      mutable_sv_bomchargeinfo();

  // repeated .transMsg.SV_ChargeShopInfo SV_ChargeShopInfo = 2;
  inline int sv_chargeshopinfo_size() const;
  inline void clear_sv_chargeshopinfo();
  static const int kSVChargeShopInfoFieldNumber = 2;
  inline const ::transMsg::SV_ChargeShopInfo& sv_chargeshopinfo(int index) const;
  inline ::transMsg::SV_ChargeShopInfo* mutable_sv_chargeshopinfo(int index);
  inline ::transMsg::SV_ChargeShopInfo* add_sv_chargeshopinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ChargeShopInfo >&
      sv_chargeshopinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ChargeShopInfo >*
      mutable_sv_chargeshopinfo();

  // repeated .transMsg.SV_LibFileInfo SV_LibFileInfo = 3;
  inline int sv_libfileinfo_size() const;
  inline void clear_sv_libfileinfo();
  static const int kSVLibFileInfoFieldNumber = 3;
  inline const ::transMsg::SV_LibFileInfo& sv_libfileinfo(int index) const;
  inline ::transMsg::SV_LibFileInfo* mutable_sv_libfileinfo(int index);
  inline ::transMsg::SV_LibFileInfo* add_sv_libfileinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_LibFileInfo >&
      sv_libfileinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_LibFileInfo >*
      mutable_sv_libfileinfo();

  // repeated .transMsg.SV_ModuleChargeInfo SV_ModuleChargeInfo = 4;
  inline int sv_modulechargeinfo_size() const;
  inline void clear_sv_modulechargeinfo();
  static const int kSVModuleChargeInfoFieldNumber = 4;
  inline const ::transMsg::SV_ModuleChargeInfo& sv_modulechargeinfo(int index) const;
  inline ::transMsg::SV_ModuleChargeInfo* mutable_sv_modulechargeinfo(int index);
  inline ::transMsg::SV_ModuleChargeInfo* add_sv_modulechargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ModuleChargeInfo >&
      sv_modulechargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ModuleChargeInfo >*
      mutable_sv_modulechargeinfo();

  // repeated .transMsg.SV_OrderActionRecordInfo SV_OrderActionRecordInfo = 5;
  inline int sv_orderactionrecordinfo_size() const;
  inline void clear_sv_orderactionrecordinfo();
  static const int kSVOrderActionRecordInfoFieldNumber = 5;
  inline const ::transMsg::SV_OrderActionRecordInfo& sv_orderactionrecordinfo(int index) const;
  inline ::transMsg::SV_OrderActionRecordInfo* mutable_sv_orderactionrecordinfo(int index);
  inline ::transMsg::SV_OrderActionRecordInfo* add_sv_orderactionrecordinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo >&
      sv_orderactionrecordinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo >*
      mutable_sv_orderactionrecordinfo();

  // repeated .transMsg.SV_OrderFileInfo SV_OrderFileInfo = 6;
  inline int sv_orderfileinfo_size() const;
  inline void clear_sv_orderfileinfo();
  static const int kSVOrderFileInfoFieldNumber = 6;
  inline const ::transMsg::SV_OrderFileInfo& sv_orderfileinfo(int index) const;
  inline ::transMsg::SV_OrderFileInfo* mutable_sv_orderfileinfo(int index);
  inline ::transMsg::SV_OrderFileInfo* add_sv_orderfileinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderFileInfo >&
      sv_orderfileinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderFileInfo >*
      mutable_sv_orderfileinfo();

  // repeated .transMsg.SV_UserLoginStatusInfo SV_UserLoginStatusInfo = 7;
  inline int sv_userloginstatusinfo_size() const;
  inline void clear_sv_userloginstatusinfo();
  static const int kSVUserLoginStatusInfoFieldNumber = 7;
  inline const ::transMsg::SV_UserLoginStatusInfo& sv_userloginstatusinfo(int index) const;
  inline ::transMsg::SV_UserLoginStatusInfo* mutable_sv_userloginstatusinfo(int index);
  inline ::transMsg::SV_UserLoginStatusInfo* add_sv_userloginstatusinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_UserLoginStatusInfo >&
      sv_userloginstatusinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_UserLoginStatusInfo >*
      mutable_sv_userloginstatusinfo();

  // @@protoc_insertion_point(class_scope:transMsg.SV_Table)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::transMsg::SV_BOMChargeInfo > sv_bomchargeinfo_;
  ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ChargeShopInfo > sv_chargeshopinfo_;
  ::google::protobuf::RepeatedPtrField< ::transMsg::SV_LibFileInfo > sv_libfileinfo_;
  ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ModuleChargeInfo > sv_modulechargeinfo_;
  ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo > sv_orderactionrecordinfo_;
  ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderFileInfo > sv_orderfileinfo_;
  ::google::protobuf::RepeatedPtrField< ::transMsg::SV_UserLoginStatusInfo > sv_userloginstatusinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2dSV_2eproto();
  friend void protobuf_AssignDesc_msg_2dSV_2eproto();
  friend void protobuf_ShutdownFile_msg_2dSV_2eproto();

  void InitAsDefaultInstance();
  static SV_Table* default_instance_;
};
// ===================================================================


// ===================================================================

// SV_BOMChargeInfo

// required int64 BOMChargeID = 1;
inline bool SV_BOMChargeInfo::has_bomchargeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SV_BOMChargeInfo::set_has_bomchargeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SV_BOMChargeInfo::clear_has_bomchargeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SV_BOMChargeInfo::clear_bomchargeid() {
  bomchargeid_ = GOOGLE_LONGLONG(0);
  clear_has_bomchargeid();
}
inline ::google::protobuf::int64 SV_BOMChargeInfo::bomchargeid() const {
  return bomchargeid_;
}
inline void SV_BOMChargeInfo::set_bomchargeid(::google::protobuf::int64 value) {
  set_has_bomchargeid();
  bomchargeid_ = value;
}

// required int32 FactoryID = 2;
inline bool SV_BOMChargeInfo::has_factoryid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SV_BOMChargeInfo::set_has_factoryid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SV_BOMChargeInfo::clear_has_factoryid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SV_BOMChargeInfo::clear_factoryid() {
  factoryid_ = 0;
  clear_has_factoryid();
}
inline ::google::protobuf::int32 SV_BOMChargeInfo::factoryid() const {
  return factoryid_;
}
inline void SV_BOMChargeInfo::set_factoryid(::google::protobuf::int32 value) {
  set_has_factoryid();
  factoryid_ = value;
}

// required int32 CategoryID = 3;
inline bool SV_BOMChargeInfo::has_categoryid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SV_BOMChargeInfo::set_has_categoryid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SV_BOMChargeInfo::clear_has_categoryid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SV_BOMChargeInfo::clear_categoryid() {
  categoryid_ = 0;
  clear_has_categoryid();
}
inline ::google::protobuf::int32 SV_BOMChargeInfo::categoryid() const {
  return categoryid_;
}
inline void SV_BOMChargeInfo::set_categoryid(::google::protobuf::int32 value) {
  set_has_categoryid();
  categoryid_ = value;
}

// required int32 Enable = 4;
inline bool SV_BOMChargeInfo::has_enable() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SV_BOMChargeInfo::set_has_enable() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SV_BOMChargeInfo::clear_has_enable() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SV_BOMChargeInfo::clear_enable() {
  enable_ = 0;
  clear_has_enable();
}
inline ::google::protobuf::int32 SV_BOMChargeInfo::enable() const {
  return enable_;
}
inline void SV_BOMChargeInfo::set_enable(::google::protobuf::int32 value) {
  set_has_enable();
  enable_ = value;
}

// -------------------------------------------------------------------

// SV_ChargeShopInfo

// required int32 RecordID = 1;
inline bool SV_ChargeShopInfo::has_recordid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SV_ChargeShopInfo::set_has_recordid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SV_ChargeShopInfo::clear_has_recordid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SV_ChargeShopInfo::clear_recordid() {
  recordid_ = 0;
  clear_has_recordid();
}
inline ::google::protobuf::int32 SV_ChargeShopInfo::recordid() const {
  return recordid_;
}
inline void SV_ChargeShopInfo::set_recordid(::google::protobuf::int32 value) {
  set_has_recordid();
  recordid_ = value;
}

// required int32 FactoryID = 2;
inline bool SV_ChargeShopInfo::has_factoryid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SV_ChargeShopInfo::set_has_factoryid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SV_ChargeShopInfo::clear_has_factoryid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SV_ChargeShopInfo::clear_factoryid() {
  factoryid_ = 0;
  clear_has_factoryid();
}
inline ::google::protobuf::int32 SV_ChargeShopInfo::factoryid() const {
  return factoryid_;
}
inline void SV_ChargeShopInfo::set_factoryid(::google::protobuf::int32 value) {
  set_has_factoryid();
  factoryid_ = value;
}

// required int32 ShopID = 3;
inline bool SV_ChargeShopInfo::has_shopid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SV_ChargeShopInfo::set_has_shopid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SV_ChargeShopInfo::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SV_ChargeShopInfo::clear_shopid() {
  shopid_ = 0;
  clear_has_shopid();
}
inline ::google::protobuf::int32 SV_ChargeShopInfo::shopid() const {
  return shopid_;
}
inline void SV_ChargeShopInfo::set_shopid(::google::protobuf::int32 value) {
  set_has_shopid();
  shopid_ = value;
}

// required int32 UserID = 4;
inline bool SV_ChargeShopInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SV_ChargeShopInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SV_ChargeShopInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SV_ChargeShopInfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 SV_ChargeShopInfo::userid() const {
  return userid_;
}
inline void SV_ChargeShopInfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// required int64 StartTime = 5;
inline bool SV_ChargeShopInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SV_ChargeShopInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SV_ChargeShopInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SV_ChargeShopInfo::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 SV_ChargeShopInfo::starttime() const {
  return starttime_;
}
inline void SV_ChargeShopInfo::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
}

// required int64 StopTime = 6;
inline bool SV_ChargeShopInfo::has_stoptime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SV_ChargeShopInfo::set_has_stoptime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SV_ChargeShopInfo::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SV_ChargeShopInfo::clear_stoptime() {
  stoptime_ = GOOGLE_LONGLONG(0);
  clear_has_stoptime();
}
inline ::google::protobuf::int64 SV_ChargeShopInfo::stoptime() const {
  return stoptime_;
}
inline void SV_ChargeShopInfo::set_stoptime(::google::protobuf::int64 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// -------------------------------------------------------------------

// SV_LibFileInfo

// required int32 DeptID = 1;
inline bool SV_LibFileInfo::has_deptid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SV_LibFileInfo::set_has_deptid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SV_LibFileInfo::clear_has_deptid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SV_LibFileInfo::clear_deptid() {
  deptid_ = 0;
  clear_has_deptid();
}
inline ::google::protobuf::int32 SV_LibFileInfo::deptid() const {
  return deptid_;
}
inline void SV_LibFileInfo::set_deptid(::google::protobuf::int32 value) {
  set_has_deptid();
  deptid_ = value;
}

// required string HashCode = 2;
inline bool SV_LibFileInfo::has_hashcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SV_LibFileInfo::set_has_hashcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SV_LibFileInfo::clear_has_hashcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SV_LibFileInfo::clear_hashcode() {
  if (hashcode_ != &::google::protobuf::internal::kEmptyString) {
    hashcode_->clear();
  }
  clear_has_hashcode();
}
inline const ::std::string& SV_LibFileInfo::hashcode() const {
  return *hashcode_;
}
inline void SV_LibFileInfo::set_hashcode(const ::std::string& value) {
  set_has_hashcode();
  if (hashcode_ == &::google::protobuf::internal::kEmptyString) {
    hashcode_ = new ::std::string;
  }
  hashcode_->assign(value);
}
inline void SV_LibFileInfo::set_hashcode(const char* value) {
  set_has_hashcode();
  if (hashcode_ == &::google::protobuf::internal::kEmptyString) {
    hashcode_ = new ::std::string;
  }
  hashcode_->assign(value);
}
inline void SV_LibFileInfo::set_hashcode(const char* value, size_t size) {
  set_has_hashcode();
  if (hashcode_ == &::google::protobuf::internal::kEmptyString) {
    hashcode_ = new ::std::string;
  }
  hashcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SV_LibFileInfo::mutable_hashcode() {
  set_has_hashcode();
  if (hashcode_ == &::google::protobuf::internal::kEmptyString) {
    hashcode_ = new ::std::string;
  }
  return hashcode_;
}
inline ::std::string* SV_LibFileInfo::release_hashcode() {
  clear_has_hashcode();
  if (hashcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hashcode_;
    hashcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SV_LibFileInfo::set_allocated_hashcode(::std::string* hashcode) {
  if (hashcode_ != &::google::protobuf::internal::kEmptyString) {
    delete hashcode_;
  }
  if (hashcode) {
    set_has_hashcode();
    hashcode_ = hashcode;
  } else {
    clear_has_hashcode();
    hashcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string DestPath = 3;
inline bool SV_LibFileInfo::has_destpath() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SV_LibFileInfo::set_has_destpath() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SV_LibFileInfo::clear_has_destpath() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SV_LibFileInfo::clear_destpath() {
  if (destpath_ != &::google::protobuf::internal::kEmptyString) {
    destpath_->clear();
  }
  clear_has_destpath();
}
inline const ::std::string& SV_LibFileInfo::destpath() const {
  return *destpath_;
}
inline void SV_LibFileInfo::set_destpath(const ::std::string& value) {
  set_has_destpath();
  if (destpath_ == &::google::protobuf::internal::kEmptyString) {
    destpath_ = new ::std::string;
  }
  destpath_->assign(value);
}
inline void SV_LibFileInfo::set_destpath(const char* value) {
  set_has_destpath();
  if (destpath_ == &::google::protobuf::internal::kEmptyString) {
    destpath_ = new ::std::string;
  }
  destpath_->assign(value);
}
inline void SV_LibFileInfo::set_destpath(const char* value, size_t size) {
  set_has_destpath();
  if (destpath_ == &::google::protobuf::internal::kEmptyString) {
    destpath_ = new ::std::string;
  }
  destpath_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SV_LibFileInfo::mutable_destpath() {
  set_has_destpath();
  if (destpath_ == &::google::protobuf::internal::kEmptyString) {
    destpath_ = new ::std::string;
  }
  return destpath_;
}
inline ::std::string* SV_LibFileInfo::release_destpath() {
  clear_has_destpath();
  if (destpath_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = destpath_;
    destpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SV_LibFileInfo::set_allocated_destpath(::std::string* destpath) {
  if (destpath_ != &::google::protobuf::internal::kEmptyString) {
    delete destpath_;
  }
  if (destpath) {
    set_has_destpath();
    destpath_ = destpath;
  } else {
    clear_has_destpath();
    destpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SV_ModuleChargeInfo

// required int64 ModuleChargeID = 1;
inline bool SV_ModuleChargeInfo::has_modulechargeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SV_ModuleChargeInfo::set_has_modulechargeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SV_ModuleChargeInfo::clear_has_modulechargeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SV_ModuleChargeInfo::clear_modulechargeid() {
  modulechargeid_ = GOOGLE_LONGLONG(0);
  clear_has_modulechargeid();
}
inline ::google::protobuf::int64 SV_ModuleChargeInfo::modulechargeid() const {
  return modulechargeid_;
}
inline void SV_ModuleChargeInfo::set_modulechargeid(::google::protobuf::int64 value) {
  set_has_modulechargeid();
  modulechargeid_ = value;
}

// required int32 ModuleID = 2;
inline bool SV_ModuleChargeInfo::has_moduleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SV_ModuleChargeInfo::set_has_moduleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SV_ModuleChargeInfo::clear_has_moduleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SV_ModuleChargeInfo::clear_moduleid() {
  moduleid_ = 0;
  clear_has_moduleid();
}
inline ::google::protobuf::int32 SV_ModuleChargeInfo::moduleid() const {
  return moduleid_;
}
inline void SV_ModuleChargeInfo::set_moduleid(::google::protobuf::int32 value) {
  set_has_moduleid();
  moduleid_ = value;
}

// required int32 FactoryID = 3;
inline bool SV_ModuleChargeInfo::has_factoryid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SV_ModuleChargeInfo::set_has_factoryid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SV_ModuleChargeInfo::clear_has_factoryid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SV_ModuleChargeInfo::clear_factoryid() {
  factoryid_ = 0;
  clear_has_factoryid();
}
inline ::google::protobuf::int32 SV_ModuleChargeInfo::factoryid() const {
  return factoryid_;
}
inline void SV_ModuleChargeInfo::set_factoryid(::google::protobuf::int32 value) {
  set_has_factoryid();
  factoryid_ = value;
}

// required int32 ShopID = 4;
inline bool SV_ModuleChargeInfo::has_shopid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SV_ModuleChargeInfo::set_has_shopid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SV_ModuleChargeInfo::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SV_ModuleChargeInfo::clear_shopid() {
  shopid_ = 0;
  clear_has_shopid();
}
inline ::google::protobuf::int32 SV_ModuleChargeInfo::shopid() const {
  return shopid_;
}
inline void SV_ModuleChargeInfo::set_shopid(::google::protobuf::int32 value) {
  set_has_shopid();
  shopid_ = value;
}

// required int32 UserID = 5;
inline bool SV_ModuleChargeInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SV_ModuleChargeInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SV_ModuleChargeInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SV_ModuleChargeInfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 SV_ModuleChargeInfo::userid() const {
  return userid_;
}
inline void SV_ModuleChargeInfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// required int64 StartTime = 6;
inline bool SV_ModuleChargeInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SV_ModuleChargeInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SV_ModuleChargeInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SV_ModuleChargeInfo::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 SV_ModuleChargeInfo::starttime() const {
  return starttime_;
}
inline void SV_ModuleChargeInfo::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
}

// required int64 StopTime = 7;
inline bool SV_ModuleChargeInfo::has_stoptime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SV_ModuleChargeInfo::set_has_stoptime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SV_ModuleChargeInfo::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SV_ModuleChargeInfo::clear_stoptime() {
  stoptime_ = GOOGLE_LONGLONG(0);
  clear_has_stoptime();
}
inline ::google::protobuf::int64 SV_ModuleChargeInfo::stoptime() const {
  return stoptime_;
}
inline void SV_ModuleChargeInfo::set_stoptime(::google::protobuf::int64 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// -------------------------------------------------------------------

// SV_OrderActionRecordInfo

// required int64 RecordID = 1;
inline bool SV_OrderActionRecordInfo::has_recordid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SV_OrderActionRecordInfo::set_has_recordid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SV_OrderActionRecordInfo::clear_has_recordid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SV_OrderActionRecordInfo::clear_recordid() {
  recordid_ = GOOGLE_LONGLONG(0);
  clear_has_recordid();
}
inline ::google::protobuf::int64 SV_OrderActionRecordInfo::recordid() const {
  return recordid_;
}
inline void SV_OrderActionRecordInfo::set_recordid(::google::protobuf::int64 value) {
  set_has_recordid();
  recordid_ = value;
}

// required int64 OrderID = 2;
inline bool SV_OrderActionRecordInfo::has_orderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SV_OrderActionRecordInfo::set_has_orderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SV_OrderActionRecordInfo::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SV_OrderActionRecordInfo::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::int64 SV_OrderActionRecordInfo::orderid() const {
  return orderid_;
}
inline void SV_OrderActionRecordInfo::set_orderid(::google::protobuf::int64 value) {
  set_has_orderid();
  orderid_ = value;
}

// required int32 UserID = 3;
inline bool SV_OrderActionRecordInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SV_OrderActionRecordInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SV_OrderActionRecordInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SV_OrderActionRecordInfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 SV_OrderActionRecordInfo::userid() const {
  return userid_;
}
inline void SV_OrderActionRecordInfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// required int32 ActionID = 4;
inline bool SV_OrderActionRecordInfo::has_actionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SV_OrderActionRecordInfo::set_has_actionid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SV_OrderActionRecordInfo::clear_has_actionid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SV_OrderActionRecordInfo::clear_actionid() {
  actionid_ = 0;
  clear_has_actionid();
}
inline ::google::protobuf::int32 SV_OrderActionRecordInfo::actionid() const {
  return actionid_;
}
inline void SV_OrderActionRecordInfo::set_actionid(::google::protobuf::int32 value) {
  set_has_actionid();
  actionid_ = value;
}

// required int64 RecordTime = 5;
inline bool SV_OrderActionRecordInfo::has_recordtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SV_OrderActionRecordInfo::set_has_recordtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SV_OrderActionRecordInfo::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SV_OrderActionRecordInfo::clear_recordtime() {
  recordtime_ = GOOGLE_LONGLONG(0);
  clear_has_recordtime();
}
inline ::google::protobuf::int64 SV_OrderActionRecordInfo::recordtime() const {
  return recordtime_;
}
inline void SV_OrderActionRecordInfo::set_recordtime(::google::protobuf::int64 value) {
  set_has_recordtime();
  recordtime_ = value;
}

// required string AuditComment = 6;
inline bool SV_OrderActionRecordInfo::has_auditcomment() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SV_OrderActionRecordInfo::set_has_auditcomment() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SV_OrderActionRecordInfo::clear_has_auditcomment() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SV_OrderActionRecordInfo::clear_auditcomment() {
  if (auditcomment_ != &::google::protobuf::internal::kEmptyString) {
    auditcomment_->clear();
  }
  clear_has_auditcomment();
}
inline const ::std::string& SV_OrderActionRecordInfo::auditcomment() const {
  return *auditcomment_;
}
inline void SV_OrderActionRecordInfo::set_auditcomment(const ::std::string& value) {
  set_has_auditcomment();
  if (auditcomment_ == &::google::protobuf::internal::kEmptyString) {
    auditcomment_ = new ::std::string;
  }
  auditcomment_->assign(value);
}
inline void SV_OrderActionRecordInfo::set_auditcomment(const char* value) {
  set_has_auditcomment();
  if (auditcomment_ == &::google::protobuf::internal::kEmptyString) {
    auditcomment_ = new ::std::string;
  }
  auditcomment_->assign(value);
}
inline void SV_OrderActionRecordInfo::set_auditcomment(const char* value, size_t size) {
  set_has_auditcomment();
  if (auditcomment_ == &::google::protobuf::internal::kEmptyString) {
    auditcomment_ = new ::std::string;
  }
  auditcomment_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SV_OrderActionRecordInfo::mutable_auditcomment() {
  set_has_auditcomment();
  if (auditcomment_ == &::google::protobuf::internal::kEmptyString) {
    auditcomment_ = new ::std::string;
  }
  return auditcomment_;
}
inline ::std::string* SV_OrderActionRecordInfo::release_auditcomment() {
  clear_has_auditcomment();
  if (auditcomment_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = auditcomment_;
    auditcomment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SV_OrderActionRecordInfo::set_allocated_auditcomment(::std::string* auditcomment) {
  if (auditcomment_ != &::google::protobuf::internal::kEmptyString) {
    delete auditcomment_;
  }
  if (auditcomment) {
    set_has_auditcomment();
    auditcomment_ = auditcomment;
  } else {
    clear_has_auditcomment();
    auditcomment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SV_OrderFileInfo

// required int64 OrderID = 1;
inline bool SV_OrderFileInfo::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SV_OrderFileInfo::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SV_OrderFileInfo::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SV_OrderFileInfo::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::int64 SV_OrderFileInfo::orderid() const {
  return orderid_;
}
inline void SV_OrderFileInfo::set_orderid(::google::protobuf::int64 value) {
  set_has_orderid();
  orderid_ = value;
}

// required int32 TableType = 2;
inline bool SV_OrderFileInfo::has_tabletype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SV_OrderFileInfo::set_has_tabletype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SV_OrderFileInfo::clear_has_tabletype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SV_OrderFileInfo::clear_tabletype() {
  tabletype_ = 0;
  clear_has_tabletype();
}
inline ::google::protobuf::int32 SV_OrderFileInfo::tabletype() const {
  return tabletype_;
}
inline void SV_OrderFileInfo::set_tabletype(::google::protobuf::int32 value) {
  set_has_tabletype();
  tabletype_ = value;
}

// required string FilePath = 3;
inline bool SV_OrderFileInfo::has_filepath() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SV_OrderFileInfo::set_has_filepath() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SV_OrderFileInfo::clear_has_filepath() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SV_OrderFileInfo::clear_filepath() {
  if (filepath_ != &::google::protobuf::internal::kEmptyString) {
    filepath_->clear();
  }
  clear_has_filepath();
}
inline const ::std::string& SV_OrderFileInfo::filepath() const {
  return *filepath_;
}
inline void SV_OrderFileInfo::set_filepath(const ::std::string& value) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::kEmptyString) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(value);
}
inline void SV_OrderFileInfo::set_filepath(const char* value) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::kEmptyString) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(value);
}
inline void SV_OrderFileInfo::set_filepath(const char* value, size_t size) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::kEmptyString) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SV_OrderFileInfo::mutable_filepath() {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::kEmptyString) {
    filepath_ = new ::std::string;
  }
  return filepath_;
}
inline ::std::string* SV_OrderFileInfo::release_filepath() {
  clear_has_filepath();
  if (filepath_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filepath_;
    filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SV_OrderFileInfo::set_allocated_filepath(::std::string* filepath) {
  if (filepath_ != &::google::protobuf::internal::kEmptyString) {
    delete filepath_;
  }
  if (filepath) {
    set_has_filepath();
    filepath_ = filepath;
  } else {
    clear_has_filepath();
    filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SV_UserLoginStatusInfo

// required int32 LoginType = 1;
inline bool SV_UserLoginStatusInfo::has_logintype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SV_UserLoginStatusInfo::set_has_logintype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SV_UserLoginStatusInfo::clear_has_logintype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SV_UserLoginStatusInfo::clear_logintype() {
  logintype_ = 0;
  clear_has_logintype();
}
inline ::google::protobuf::int32 SV_UserLoginStatusInfo::logintype() const {
  return logintype_;
}
inline void SV_UserLoginStatusInfo::set_logintype(::google::protobuf::int32 value) {
  set_has_logintype();
  logintype_ = value;
}

// required int32 UserID = 2;
inline bool SV_UserLoginStatusInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SV_UserLoginStatusInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SV_UserLoginStatusInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SV_UserLoginStatusInfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 SV_UserLoginStatusInfo::userid() const {
  return userid_;
}
inline void SV_UserLoginStatusInfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// required int32 LoginStatus = 3;
inline bool SV_UserLoginStatusInfo::has_loginstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SV_UserLoginStatusInfo::set_has_loginstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SV_UserLoginStatusInfo::clear_has_loginstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SV_UserLoginStatusInfo::clear_loginstatus() {
  loginstatus_ = 0;
  clear_has_loginstatus();
}
inline ::google::protobuf::int32 SV_UserLoginStatusInfo::loginstatus() const {
  return loginstatus_;
}
inline void SV_UserLoginStatusInfo::set_loginstatus(::google::protobuf::int32 value) {
  set_has_loginstatus();
  loginstatus_ = value;
}

// required int64 LoginTime = 4;
inline bool SV_UserLoginStatusInfo::has_logintime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SV_UserLoginStatusInfo::set_has_logintime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SV_UserLoginStatusInfo::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SV_UserLoginStatusInfo::clear_logintime() {
  logintime_ = GOOGLE_LONGLONG(0);
  clear_has_logintime();
}
inline ::google::protobuf::int64 SV_UserLoginStatusInfo::logintime() const {
  return logintime_;
}
inline void SV_UserLoginStatusInfo::set_logintime(::google::protobuf::int64 value) {
  set_has_logintime();
  logintime_ = value;
}

// required int64 LastVisitTime = 5;
inline bool SV_UserLoginStatusInfo::has_lastvisittime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SV_UserLoginStatusInfo::set_has_lastvisittime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SV_UserLoginStatusInfo::clear_has_lastvisittime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SV_UserLoginStatusInfo::clear_lastvisittime() {
  lastvisittime_ = GOOGLE_LONGLONG(0);
  clear_has_lastvisittime();
}
inline ::google::protobuf::int64 SV_UserLoginStatusInfo::lastvisittime() const {
  return lastvisittime_;
}
inline void SV_UserLoginStatusInfo::set_lastvisittime(::google::protobuf::int64 value) {
  set_has_lastvisittime();
  lastvisittime_ = value;
}

// required string LoginIP = 6;
inline bool SV_UserLoginStatusInfo::has_loginip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SV_UserLoginStatusInfo::set_has_loginip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SV_UserLoginStatusInfo::clear_has_loginip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SV_UserLoginStatusInfo::clear_loginip() {
  if (loginip_ != &::google::protobuf::internal::kEmptyString) {
    loginip_->clear();
  }
  clear_has_loginip();
}
inline const ::std::string& SV_UserLoginStatusInfo::loginip() const {
  return *loginip_;
}
inline void SV_UserLoginStatusInfo::set_loginip(const ::std::string& value) {
  set_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    loginip_ = new ::std::string;
  }
  loginip_->assign(value);
}
inline void SV_UserLoginStatusInfo::set_loginip(const char* value) {
  set_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    loginip_ = new ::std::string;
  }
  loginip_->assign(value);
}
inline void SV_UserLoginStatusInfo::set_loginip(const char* value, size_t size) {
  set_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    loginip_ = new ::std::string;
  }
  loginip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SV_UserLoginStatusInfo::mutable_loginip() {
  set_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    loginip_ = new ::std::string;
  }
  return loginip_;
}
inline ::std::string* SV_UserLoginStatusInfo::release_loginip() {
  clear_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = loginip_;
    loginip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SV_UserLoginStatusInfo::set_allocated_loginip(::std::string* loginip) {
  if (loginip_ != &::google::protobuf::internal::kEmptyString) {
    delete loginip_;
  }
  if (loginip) {
    set_has_loginip();
    loginip_ = loginip;
  } else {
    clear_has_loginip();
    loginip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SV_Table

// repeated .transMsg.SV_BOMChargeInfo SV_BOMChargeInfo = 1;
inline int SV_Table::sv_bomchargeinfo_size() const {
  return sv_bomchargeinfo_.size();
}
inline void SV_Table::clear_sv_bomchargeinfo() {
  sv_bomchargeinfo_.Clear();
}
inline const ::transMsg::SV_BOMChargeInfo& SV_Table::sv_bomchargeinfo(int index) const {
  return sv_bomchargeinfo_.Get(index);
}
inline ::transMsg::SV_BOMChargeInfo* SV_Table::mutable_sv_bomchargeinfo(int index) {
  return sv_bomchargeinfo_.Mutable(index);
}
inline ::transMsg::SV_BOMChargeInfo* SV_Table::add_sv_bomchargeinfo() {
  return sv_bomchargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_BOMChargeInfo >&
SV_Table::sv_bomchargeinfo() const {
  return sv_bomchargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_BOMChargeInfo >*
SV_Table::mutable_sv_bomchargeinfo() {
  return &sv_bomchargeinfo_;
}

// repeated .transMsg.SV_ChargeShopInfo SV_ChargeShopInfo = 2;
inline int SV_Table::sv_chargeshopinfo_size() const {
  return sv_chargeshopinfo_.size();
}
inline void SV_Table::clear_sv_chargeshopinfo() {
  sv_chargeshopinfo_.Clear();
}
inline const ::transMsg::SV_ChargeShopInfo& SV_Table::sv_chargeshopinfo(int index) const {
  return sv_chargeshopinfo_.Get(index);
}
inline ::transMsg::SV_ChargeShopInfo* SV_Table::mutable_sv_chargeshopinfo(int index) {
  return sv_chargeshopinfo_.Mutable(index);
}
inline ::transMsg::SV_ChargeShopInfo* SV_Table::add_sv_chargeshopinfo() {
  return sv_chargeshopinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ChargeShopInfo >&
SV_Table::sv_chargeshopinfo() const {
  return sv_chargeshopinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ChargeShopInfo >*
SV_Table::mutable_sv_chargeshopinfo() {
  return &sv_chargeshopinfo_;
}

// repeated .transMsg.SV_LibFileInfo SV_LibFileInfo = 3;
inline int SV_Table::sv_libfileinfo_size() const {
  return sv_libfileinfo_.size();
}
inline void SV_Table::clear_sv_libfileinfo() {
  sv_libfileinfo_.Clear();
}
inline const ::transMsg::SV_LibFileInfo& SV_Table::sv_libfileinfo(int index) const {
  return sv_libfileinfo_.Get(index);
}
inline ::transMsg::SV_LibFileInfo* SV_Table::mutable_sv_libfileinfo(int index) {
  return sv_libfileinfo_.Mutable(index);
}
inline ::transMsg::SV_LibFileInfo* SV_Table::add_sv_libfileinfo() {
  return sv_libfileinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_LibFileInfo >&
SV_Table::sv_libfileinfo() const {
  return sv_libfileinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_LibFileInfo >*
SV_Table::mutable_sv_libfileinfo() {
  return &sv_libfileinfo_;
}

// repeated .transMsg.SV_ModuleChargeInfo SV_ModuleChargeInfo = 4;
inline int SV_Table::sv_modulechargeinfo_size() const {
  return sv_modulechargeinfo_.size();
}
inline void SV_Table::clear_sv_modulechargeinfo() {
  sv_modulechargeinfo_.Clear();
}
inline const ::transMsg::SV_ModuleChargeInfo& SV_Table::sv_modulechargeinfo(int index) const {
  return sv_modulechargeinfo_.Get(index);
}
inline ::transMsg::SV_ModuleChargeInfo* SV_Table::mutable_sv_modulechargeinfo(int index) {
  return sv_modulechargeinfo_.Mutable(index);
}
inline ::transMsg::SV_ModuleChargeInfo* SV_Table::add_sv_modulechargeinfo() {
  return sv_modulechargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ModuleChargeInfo >&
SV_Table::sv_modulechargeinfo() const {
  return sv_modulechargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_ModuleChargeInfo >*
SV_Table::mutable_sv_modulechargeinfo() {
  return &sv_modulechargeinfo_;
}

// repeated .transMsg.SV_OrderActionRecordInfo SV_OrderActionRecordInfo = 5;
inline int SV_Table::sv_orderactionrecordinfo_size() const {
  return sv_orderactionrecordinfo_.size();
}
inline void SV_Table::clear_sv_orderactionrecordinfo() {
  sv_orderactionrecordinfo_.Clear();
}
inline const ::transMsg::SV_OrderActionRecordInfo& SV_Table::sv_orderactionrecordinfo(int index) const {
  return sv_orderactionrecordinfo_.Get(index);
}
inline ::transMsg::SV_OrderActionRecordInfo* SV_Table::mutable_sv_orderactionrecordinfo(int index) {
  return sv_orderactionrecordinfo_.Mutable(index);
}
inline ::transMsg::SV_OrderActionRecordInfo* SV_Table::add_sv_orderactionrecordinfo() {
  return sv_orderactionrecordinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo >&
SV_Table::sv_orderactionrecordinfo() const {
  return sv_orderactionrecordinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderActionRecordInfo >*
SV_Table::mutable_sv_orderactionrecordinfo() {
  return &sv_orderactionrecordinfo_;
}

// repeated .transMsg.SV_OrderFileInfo SV_OrderFileInfo = 6;
inline int SV_Table::sv_orderfileinfo_size() const {
  return sv_orderfileinfo_.size();
}
inline void SV_Table::clear_sv_orderfileinfo() {
  sv_orderfileinfo_.Clear();
}
inline const ::transMsg::SV_OrderFileInfo& SV_Table::sv_orderfileinfo(int index) const {
  return sv_orderfileinfo_.Get(index);
}
inline ::transMsg::SV_OrderFileInfo* SV_Table::mutable_sv_orderfileinfo(int index) {
  return sv_orderfileinfo_.Mutable(index);
}
inline ::transMsg::SV_OrderFileInfo* SV_Table::add_sv_orderfileinfo() {
  return sv_orderfileinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderFileInfo >&
SV_Table::sv_orderfileinfo() const {
  return sv_orderfileinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_OrderFileInfo >*
SV_Table::mutable_sv_orderfileinfo() {
  return &sv_orderfileinfo_;
}

// repeated .transMsg.SV_UserLoginStatusInfo SV_UserLoginStatusInfo = 7;
inline int SV_Table::sv_userloginstatusinfo_size() const {
  return sv_userloginstatusinfo_.size();
}
inline void SV_Table::clear_sv_userloginstatusinfo() {
  sv_userloginstatusinfo_.Clear();
}
inline const ::transMsg::SV_UserLoginStatusInfo& SV_Table::sv_userloginstatusinfo(int index) const {
  return sv_userloginstatusinfo_.Get(index);
}
inline ::transMsg::SV_UserLoginStatusInfo* SV_Table::mutable_sv_userloginstatusinfo(int index) {
  return sv_userloginstatusinfo_.Mutable(index);
}
inline ::transMsg::SV_UserLoginStatusInfo* SV_Table::add_sv_userloginstatusinfo() {
  return sv_userloginstatusinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::transMsg::SV_UserLoginStatusInfo >&
SV_Table::sv_userloginstatusinfo() const {
  return sv_userloginstatusinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::transMsg::SV_UserLoginStatusInfo >*
SV_Table::mutable_sv_userloginstatusinfo() {
  return &sv_userloginstatusinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_2dSV_2eproto__INCLUDED
