// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Test.proto

#ifndef PROTOBUF_Test_2eproto__INCLUDED
#define PROTOBUF_Test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EReturnStatus.pb.h"
#include "EOrderState.pb.h"
// @@protoc_insertion_point(includes)

namespace transMsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Test_2eproto();
void protobuf_AssignDesc_Test_2eproto();
void protobuf_ShutdownFile_Test_2eproto();

class QTest;
class ATest;

// ===================================================================

class QTest : public ::google::protobuf::Message {
 public:
  QTest();
  virtual ~QTest();

  QTest(const QTest& from);

  inline QTest& operator=(const QTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QTest& default_instance();

  void Swap(QTest* other);

  // implements Message ----------------------------------------------

  QTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QTest& from);
  void MergeFrom(const QTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .order.EOrderState toState = 1 [default = EOS_FACTORY_EXAMINE_WAIT];
  inline bool has_tostate() const;
  inline void clear_tostate();
  static const int kToStateFieldNumber = 1;
  inline ::order::EOrderState tostate() const;
  inline void set_tostate(::order::EOrderState value);

  // @@protoc_insertion_point(class_scope:transMsg.QTest)
 private:
  inline void set_has_tostate();
  inline void clear_has_tostate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int tostate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Test_2eproto();
  friend void protobuf_AssignDesc_Test_2eproto();
  friend void protobuf_ShutdownFile_Test_2eproto();

  void InitAsDefaultInstance();
  static QTest* default_instance_;
};
// -------------------------------------------------------------------

class ATest : public ::google::protobuf::Message {
 public:
  ATest();
  virtual ~ATest();

  ATest(const ATest& from);

  inline ATest& operator=(const ATest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ATest& default_instance();

  void Swap(ATest* other);

  // implements Message ----------------------------------------------

  ATest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ATest& from);
  void MergeFrom(const ATest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .transMsg.EReturnStatus Stats = 1;
  inline bool has_stats() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline ::transMsg::EReturnStatus stats() const;
  inline void set_stats(::transMsg::EReturnStatus value);

  // @@protoc_insertion_point(class_scope:transMsg.ATest)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Test_2eproto();
  friend void protobuf_AssignDesc_Test_2eproto();
  friend void protobuf_ShutdownFile_Test_2eproto();

  void InitAsDefaultInstance();
  static ATest* default_instance_;
};
// ===================================================================


// ===================================================================

// QTest

// optional .order.EOrderState toState = 1 [default = EOS_FACTORY_EXAMINE_WAIT];
inline bool QTest::has_tostate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QTest::set_has_tostate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QTest::clear_has_tostate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QTest::clear_tostate() {
  tostate_ = 8;
  clear_has_tostate();
}
inline ::order::EOrderState QTest::tostate() const {
  return static_cast< ::order::EOrderState >(tostate_);
}
inline void QTest::set_tostate(::order::EOrderState value) {
  assert(::order::EOrderState_IsValid(value));
  set_has_tostate();
  tostate_ = value;
}

// -------------------------------------------------------------------

// ATest

// required .transMsg.EReturnStatus Stats = 1;
inline bool ATest::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ATest::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ATest::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ATest::clear_stats() {
  stats_ = 0;
  clear_has_stats();
}
inline ::transMsg::EReturnStatus ATest::stats() const {
  return static_cast< ::transMsg::EReturnStatus >(stats_);
}
inline void ATest::set_stats(::transMsg::EReturnStatus value) {
  assert(::transMsg::EReturnStatus_IsValid(value));
  set_has_stats();
  stats_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Test_2eproto__INCLUDED
