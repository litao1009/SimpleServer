// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetOrderStatus.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GetOrderStatus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

namespace {

const ::google::protobuf::Descriptor* SOrderStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SOrderStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* QGetOrderStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QGetOrderStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* AGetOrderStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AGetOrderStatus_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GetOrderStatus_2eproto() {
  protobuf_AddDesc_GetOrderStatus_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GetOrderStatus.proto");
  GOOGLE_CHECK(file != NULL);
  SOrderStatus_descriptor_ = file->message_type(0);
  static const int SOrderStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderStatus, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderStatus, orderstatus_),
  };
  SOrderStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SOrderStatus_descriptor_,
      SOrderStatus::default_instance_,
      SOrderStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOrderStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SOrderStatus));
  QGetOrderStatus_descriptor_ = file->message_type(1);
  static const int QGetOrderStatus_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderStatus, orderids_),
  };
  QGetOrderStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QGetOrderStatus_descriptor_,
      QGetOrderStatus::default_instance_,
      QGetOrderStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QGetOrderStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QGetOrderStatus));
  AGetOrderStatus_descriptor_ = file->message_type(2);
  static const int AGetOrderStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AGetOrderStatus, stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AGetOrderStatus, orderstatus_),
  };
  AGetOrderStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AGetOrderStatus_descriptor_,
      AGetOrderStatus::default_instance_,
      AGetOrderStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AGetOrderStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AGetOrderStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AGetOrderStatus));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GetOrderStatus_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SOrderStatus_descriptor_, &SOrderStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QGetOrderStatus_descriptor_, &QGetOrderStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AGetOrderStatus_descriptor_, &AGetOrderStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GetOrderStatus_2eproto() {
  delete SOrderStatus::default_instance_;
  delete SOrderStatus_reflection_;
  delete QGetOrderStatus::default_instance_;
  delete QGetOrderStatus_reflection_;
  delete AGetOrderStatus::default_instance_;
  delete AGetOrderStatus_reflection_;
}

void protobuf_AddDesc_GetOrderStatus_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::transMsg::protobuf_AddDesc_EReturnStatus_2eproto();
  ::order::protobuf_AddDesc_EOrderState_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024GetOrderStatus.proto\022\010transMsg\032\023ERetur"
    "nStatus.proto\032\021EOrderState.proto\"H\n\014SOrd"
    "erStatus\022\017\n\007OrderID\030\001 \002(\003\022\'\n\013OrderStatus"
    "\030\002 \002(\0162\022.order.EOrderState\"\'\n\017QGetOrderS"
    "tatus\022\024\n\010OrderIDs\030\001 \003(\003B\002\020\001\"f\n\017AGetOrder"
    "Status\022&\n\005Stats\030\001 \002(\0162\027.transMsg.EReturn"
    "Status\022+\n\013OrderStatus\030\002 \003(\0132\026.transMsg.S"
    "OrderStatus", 291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GetOrderStatus.proto", &protobuf_RegisterTypes);
  SOrderStatus::default_instance_ = new SOrderStatus();
  QGetOrderStatus::default_instance_ = new QGetOrderStatus();
  AGetOrderStatus::default_instance_ = new AGetOrderStatus();
  SOrderStatus::default_instance_->InitAsDefaultInstance();
  QGetOrderStatus::default_instance_->InitAsDefaultInstance();
  AGetOrderStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GetOrderStatus_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GetOrderStatus_2eproto {
  StaticDescriptorInitializer_GetOrderStatus_2eproto() {
    protobuf_AddDesc_GetOrderStatus_2eproto();
  }
} static_descriptor_initializer_GetOrderStatus_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SOrderStatus::kOrderIDFieldNumber;
const int SOrderStatus::kOrderStatusFieldNumber;
#endif  // !_MSC_VER

SOrderStatus::SOrderStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SOrderStatus::InitAsDefaultInstance() {
}

SOrderStatus::SOrderStatus(const SOrderStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SOrderStatus::SharedCtor() {
  _cached_size_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  orderstatus_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SOrderStatus::~SOrderStatus() {
  SharedDtor();
}

void SOrderStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SOrderStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SOrderStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SOrderStatus_descriptor_;
}

const SOrderStatus& SOrderStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrderStatus_2eproto();
  return *default_instance_;
}

SOrderStatus* SOrderStatus::default_instance_ = NULL;

SOrderStatus* SOrderStatus::New() const {
  return new SOrderStatus;
}

void SOrderStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    orderid_ = GOOGLE_LONGLONG(0);
    orderstatus_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SOrderStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 OrderID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_OrderStatus;
        break;
      }

      // required .order.EOrderState OrderStatus = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OrderStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::order::EOrderState_IsValid(value)) {
            set_orderstatus(static_cast< ::order::EOrderState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SOrderStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 OrderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->orderid(), output);
  }

  // required .order.EOrderState OrderStatus = 2;
  if (has_orderstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->orderstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SOrderStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 OrderID = 1;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->orderid(), target);
  }

  // required .order.EOrderState OrderStatus = 2;
  if (has_orderstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->orderstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SOrderStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 OrderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required .order.EOrderState OrderStatus = 2;
    if (has_orderstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->orderstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SOrderStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SOrderStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SOrderStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SOrderStatus::MergeFrom(const SOrderStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_orderstatus()) {
      set_orderstatus(from.orderstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SOrderStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SOrderStatus::CopyFrom(const SOrderStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SOrderStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SOrderStatus::Swap(SOrderStatus* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(orderstatus_, other->orderstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SOrderStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SOrderStatus_descriptor_;
  metadata.reflection = SOrderStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QGetOrderStatus::kOrderIDsFieldNumber;
#endif  // !_MSC_VER

QGetOrderStatus::QGetOrderStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QGetOrderStatus::InitAsDefaultInstance() {
}

QGetOrderStatus::QGetOrderStatus(const QGetOrderStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QGetOrderStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QGetOrderStatus::~QGetOrderStatus() {
  SharedDtor();
}

void QGetOrderStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QGetOrderStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QGetOrderStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QGetOrderStatus_descriptor_;
}

const QGetOrderStatus& QGetOrderStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrderStatus_2eproto();
  return *default_instance_;
}

QGetOrderStatus* QGetOrderStatus::default_instance_ = NULL;

QGetOrderStatus* QGetOrderStatus::New() const {
  return new QGetOrderStatus;
}

void QGetOrderStatus::Clear() {
  orderids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QGetOrderStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 OrderIDs = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_orderids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10, input, this->mutable_orderids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QGetOrderStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 OrderIDs = 1 [packed = true];
  if (this->orderids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_orderids_cached_byte_size_);
  }
  for (int i = 0; i < this->orderids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->orderids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QGetOrderStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 OrderIDs = 1 [packed = true];
  if (this->orderids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _orderids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->orderids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->orderids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QGetOrderStatus::ByteSize() const {
  int total_size = 0;

  // repeated int64 OrderIDs = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->orderids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->orderids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _orderids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QGetOrderStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QGetOrderStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QGetOrderStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QGetOrderStatus::MergeFrom(const QGetOrderStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  orderids_.MergeFrom(from.orderids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QGetOrderStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QGetOrderStatus::CopyFrom(const QGetOrderStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QGetOrderStatus::IsInitialized() const {

  return true;
}

void QGetOrderStatus::Swap(QGetOrderStatus* other) {
  if (other != this) {
    orderids_.Swap(&other->orderids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QGetOrderStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QGetOrderStatus_descriptor_;
  metadata.reflection = QGetOrderStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AGetOrderStatus::kStatsFieldNumber;
const int AGetOrderStatus::kOrderStatusFieldNumber;
#endif  // !_MSC_VER

AGetOrderStatus::AGetOrderStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AGetOrderStatus::InitAsDefaultInstance() {
}

AGetOrderStatus::AGetOrderStatus(const AGetOrderStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AGetOrderStatus::SharedCtor() {
  _cached_size_ = 0;
  stats_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AGetOrderStatus::~AGetOrderStatus() {
  SharedDtor();
}

void AGetOrderStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AGetOrderStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AGetOrderStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AGetOrderStatus_descriptor_;
}

const AGetOrderStatus& AGetOrderStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetOrderStatus_2eproto();
  return *default_instance_;
}

AGetOrderStatus* AGetOrderStatus::default_instance_ = NULL;

AGetOrderStatus* AGetOrderStatus::New() const {
  return new AGetOrderStatus;
}

void AGetOrderStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stats_ = 0;
  }
  orderstatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AGetOrderStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .transMsg.EReturnStatus Stats = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::EReturnStatus_IsValid(value)) {
            set_stats(static_cast< ::transMsg::EReturnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OrderStatus;
        break;
      }

      // repeated .transMsg.SOrderStatus OrderStatus = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OrderStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_orderstatus()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OrderStatus;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AGetOrderStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stats(), output);
  }

  // repeated .transMsg.SOrderStatus OrderStatus = 2;
  for (int i = 0; i < this->orderstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->orderstatus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AGetOrderStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stats(), target);
  }

  // repeated .transMsg.SOrderStatus OrderStatus = 2;
  for (int i = 0; i < this->orderstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->orderstatus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AGetOrderStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .transMsg.EReturnStatus Stats = 1;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stats());
    }

  }
  // repeated .transMsg.SOrderStatus OrderStatus = 2;
  total_size += 1 * this->orderstatus_size();
  for (int i = 0; i < this->orderstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->orderstatus(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AGetOrderStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AGetOrderStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AGetOrderStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AGetOrderStatus::MergeFrom(const AGetOrderStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  orderstatus_.MergeFrom(from.orderstatus_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stats()) {
      set_stats(from.stats());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AGetOrderStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AGetOrderStatus::CopyFrom(const AGetOrderStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AGetOrderStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < orderstatus_size(); i++) {
    if (!this->orderstatus(i).IsInitialized()) return false;
  }
  return true;
}

void AGetOrderStatus::Swap(AGetOrderStatus* other) {
  if (other != this) {
    std::swap(stats_, other->stats_);
    orderstatus_.Swap(&other->orderstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AGetOrderStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AGetOrderStatus_descriptor_;
  metadata.reflection = AGetOrderStatus_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

// @@protoc_insertion_point(global_scope)
