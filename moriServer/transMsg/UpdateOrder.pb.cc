// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UpdateOrder.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UpdateOrder.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transMsg {

namespace {

const ::google::protobuf::Descriptor* SQUpdateOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SQUpdateOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* SAUpdateOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SAUpdateOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* QUpdateOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QUpdateOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* AUpdateOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AUpdateOrder_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UpdateOrder_2eproto() {
  protobuf_AddDesc_UpdateOrder_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UpdateOrder.proto");
  GOOGLE_CHECK(file != NULL);
  SQUpdateOrder_descriptor_ = file->message_type(0);
  static const int SQUpdateOrder_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SQUpdateOrder, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SQUpdateOrder, tostatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SQUpdateOrder, comment_),
  };
  SQUpdateOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SQUpdateOrder_descriptor_,
      SQUpdateOrder::default_instance_,
      SQUpdateOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SQUpdateOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SQUpdateOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SQUpdateOrder));
  SAUpdateOrder_descriptor_ = file->message_type(1);
  static const int SAUpdateOrder_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAUpdateOrder, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAUpdateOrder, stats_),
  };
  SAUpdateOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SAUpdateOrder_descriptor_,
      SAUpdateOrder::default_instance_,
      SAUpdateOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAUpdateOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SAUpdateOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SAUpdateOrder));
  QUpdateOrder_descriptor_ = file->message_type(2);
  static const int QUpdateOrder_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUpdateOrder, orders_),
  };
  QUpdateOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QUpdateOrder_descriptor_,
      QUpdateOrder::default_instance_,
      QUpdateOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUpdateOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QUpdateOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QUpdateOrder));
  AUpdateOrder_descriptor_ = file->message_type(3);
  static const int AUpdateOrder_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUpdateOrder, stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUpdateOrder, results_),
  };
  AUpdateOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AUpdateOrder_descriptor_,
      AUpdateOrder::default_instance_,
      AUpdateOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUpdateOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUpdateOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AUpdateOrder));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UpdateOrder_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SQUpdateOrder_descriptor_, &SQUpdateOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SAUpdateOrder_descriptor_, &SAUpdateOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QUpdateOrder_descriptor_, &QUpdateOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AUpdateOrder_descriptor_, &AUpdateOrder::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UpdateOrder_2eproto() {
  delete SQUpdateOrder::default_instance_;
  delete SQUpdateOrder_reflection_;
  delete SAUpdateOrder::default_instance_;
  delete SAUpdateOrder_reflection_;
  delete QUpdateOrder::default_instance_;
  delete QUpdateOrder_reflection_;
  delete AUpdateOrder::default_instance_;
  delete AUpdateOrder_reflection_;
}

void protobuf_AddDesc_UpdateOrder_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::transMsg::protobuf_AddDesc_EReturnStatus_2eproto();
  ::order::protobuf_AddDesc_EOrderState_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021UpdateOrder.proto\022\010transMsg\032\023EReturnSt"
    "atus.proto\032\021EOrderState.proto\"W\n\rSQUpdat"
    "eOrder\022\017\n\007OrderID\030\001 \002(\003\022$\n\010ToStatus\030\002 \002("
    "\0162\022.order.EOrderState\022\017\n\007Comment\030\003 \001(\t\"H"
    "\n\rSAUpdateOrder\022\017\n\007OrderID\030\001 \002(\003\022&\n\005Stat"
    "s\030\002 \002(\0162\027.transMsg.EReturnStatus\"7\n\014QUpd"
    "ateOrder\022\'\n\006Orders\030\001 \003(\0132\027.transMsg.SQUp"
    "dateOrder\"`\n\014AUpdateOrder\022&\n\005Stats\030\001 \002(\016"
    "2\027.transMsg.EReturnStatus\022(\n\007Results\030\002 \003"
    "(\0132\027.transMsg.SAUpdateOrder", 387);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UpdateOrder.proto", &protobuf_RegisterTypes);
  SQUpdateOrder::default_instance_ = new SQUpdateOrder();
  SAUpdateOrder::default_instance_ = new SAUpdateOrder();
  QUpdateOrder::default_instance_ = new QUpdateOrder();
  AUpdateOrder::default_instance_ = new AUpdateOrder();
  SQUpdateOrder::default_instance_->InitAsDefaultInstance();
  SAUpdateOrder::default_instance_->InitAsDefaultInstance();
  QUpdateOrder::default_instance_->InitAsDefaultInstance();
  AUpdateOrder::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UpdateOrder_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UpdateOrder_2eproto {
  StaticDescriptorInitializer_UpdateOrder_2eproto() {
    protobuf_AddDesc_UpdateOrder_2eproto();
  }
} static_descriptor_initializer_UpdateOrder_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SQUpdateOrder::kOrderIDFieldNumber;
const int SQUpdateOrder::kToStatusFieldNumber;
const int SQUpdateOrder::kCommentFieldNumber;
#endif  // !_MSC_VER

SQUpdateOrder::SQUpdateOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SQUpdateOrder::InitAsDefaultInstance() {
}

SQUpdateOrder::SQUpdateOrder(const SQUpdateOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SQUpdateOrder::SharedCtor() {
  _cached_size_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  tostatus_ = 1;
  comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SQUpdateOrder::~SQUpdateOrder() {
  SharedDtor();
}

void SQUpdateOrder::SharedDtor() {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    delete comment_;
  }
  if (this != default_instance_) {
  }
}

void SQUpdateOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SQUpdateOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SQUpdateOrder_descriptor_;
}

const SQUpdateOrder& SQUpdateOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UpdateOrder_2eproto();
  return *default_instance_;
}

SQUpdateOrder* SQUpdateOrder::default_instance_ = NULL;

SQUpdateOrder* SQUpdateOrder::New() const {
  return new SQUpdateOrder;
}

void SQUpdateOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    orderid_ = GOOGLE_LONGLONG(0);
    tostatus_ = 1;
    if (has_comment()) {
      if (comment_ != &::google::protobuf::internal::kEmptyString) {
        comment_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SQUpdateOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 OrderID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ToStatus;
        break;
      }

      // required .order.EOrderState ToStatus = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ToStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::order::EOrderState_IsValid(value)) {
            set_tostatus(static_cast< ::order::EOrderState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Comment;
        break;
      }

      // optional string Comment = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Comment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SQUpdateOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 OrderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->orderid(), output);
  }

  // required .order.EOrderState ToStatus = 2;
  if (has_tostatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->tostatus(), output);
  }

  // optional string Comment = 3;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->comment(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SQUpdateOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 OrderID = 1;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->orderid(), target);
  }

  // required .order.EOrderState ToStatus = 2;
  if (has_tostatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->tostatus(), target);
  }

  // optional string Comment = 3;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->comment(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SQUpdateOrder::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 OrderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required .order.EOrderState ToStatus = 2;
    if (has_tostatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->tostatus());
    }

    // optional string Comment = 3;
    if (has_comment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SQUpdateOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SQUpdateOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SQUpdateOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SQUpdateOrder::MergeFrom(const SQUpdateOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_tostatus()) {
      set_tostatus(from.tostatus());
    }
    if (from.has_comment()) {
      set_comment(from.comment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SQUpdateOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SQUpdateOrder::CopyFrom(const SQUpdateOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SQUpdateOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SQUpdateOrder::Swap(SQUpdateOrder* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(tostatus_, other->tostatus_);
    std::swap(comment_, other->comment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SQUpdateOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SQUpdateOrder_descriptor_;
  metadata.reflection = SQUpdateOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SAUpdateOrder::kOrderIDFieldNumber;
const int SAUpdateOrder::kStatsFieldNumber;
#endif  // !_MSC_VER

SAUpdateOrder::SAUpdateOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SAUpdateOrder::InitAsDefaultInstance() {
}

SAUpdateOrder::SAUpdateOrder(const SAUpdateOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SAUpdateOrder::SharedCtor() {
  _cached_size_ = 0;
  orderid_ = GOOGLE_LONGLONG(0);
  stats_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SAUpdateOrder::~SAUpdateOrder() {
  SharedDtor();
}

void SAUpdateOrder::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SAUpdateOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SAUpdateOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SAUpdateOrder_descriptor_;
}

const SAUpdateOrder& SAUpdateOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UpdateOrder_2eproto();
  return *default_instance_;
}

SAUpdateOrder* SAUpdateOrder::default_instance_ = NULL;

SAUpdateOrder* SAUpdateOrder::New() const {
  return new SAUpdateOrder;
}

void SAUpdateOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    orderid_ = GOOGLE_LONGLONG(0);
    stats_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SAUpdateOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 OrderID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Stats;
        break;
      }

      // required .transMsg.EReturnStatus Stats = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Stats:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::EReturnStatus_IsValid(value)) {
            set_stats(static_cast< ::transMsg::EReturnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SAUpdateOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 OrderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->orderid(), output);
  }

  // required .transMsg.EReturnStatus Stats = 2;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stats(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SAUpdateOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 OrderID = 1;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->orderid(), target);
  }

  // required .transMsg.EReturnStatus Stats = 2;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stats(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SAUpdateOrder::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 OrderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->orderid());
    }

    // required .transMsg.EReturnStatus Stats = 2;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stats());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SAUpdateOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SAUpdateOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SAUpdateOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SAUpdateOrder::MergeFrom(const SAUpdateOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_stats()) {
      set_stats(from.stats());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SAUpdateOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAUpdateOrder::CopyFrom(const SAUpdateOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAUpdateOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SAUpdateOrder::Swap(SAUpdateOrder* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(stats_, other->stats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SAUpdateOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SAUpdateOrder_descriptor_;
  metadata.reflection = SAUpdateOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QUpdateOrder::kOrdersFieldNumber;
#endif  // !_MSC_VER

QUpdateOrder::QUpdateOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QUpdateOrder::InitAsDefaultInstance() {
}

QUpdateOrder::QUpdateOrder(const QUpdateOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QUpdateOrder::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QUpdateOrder::~QUpdateOrder() {
  SharedDtor();
}

void QUpdateOrder::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QUpdateOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QUpdateOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QUpdateOrder_descriptor_;
}

const QUpdateOrder& QUpdateOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UpdateOrder_2eproto();
  return *default_instance_;
}

QUpdateOrder* QUpdateOrder::default_instance_ = NULL;

QUpdateOrder* QUpdateOrder::New() const {
  return new QUpdateOrder;
}

void QUpdateOrder::Clear() {
  orders_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QUpdateOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .transMsg.SQUpdateOrder Orders = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Orders:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_orders()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Orders;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QUpdateOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .transMsg.SQUpdateOrder Orders = 1;
  for (int i = 0; i < this->orders_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->orders(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QUpdateOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .transMsg.SQUpdateOrder Orders = 1;
  for (int i = 0; i < this->orders_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->orders(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QUpdateOrder::ByteSize() const {
  int total_size = 0;

  // repeated .transMsg.SQUpdateOrder Orders = 1;
  total_size += 1 * this->orders_size();
  for (int i = 0; i < this->orders_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->orders(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QUpdateOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QUpdateOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QUpdateOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QUpdateOrder::MergeFrom(const QUpdateOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  orders_.MergeFrom(from.orders_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QUpdateOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QUpdateOrder::CopyFrom(const QUpdateOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QUpdateOrder::IsInitialized() const {

  for (int i = 0; i < orders_size(); i++) {
    if (!this->orders(i).IsInitialized()) return false;
  }
  return true;
}

void QUpdateOrder::Swap(QUpdateOrder* other) {
  if (other != this) {
    orders_.Swap(&other->orders_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QUpdateOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QUpdateOrder_descriptor_;
  metadata.reflection = QUpdateOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AUpdateOrder::kStatsFieldNumber;
const int AUpdateOrder::kResultsFieldNumber;
#endif  // !_MSC_VER

AUpdateOrder::AUpdateOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AUpdateOrder::InitAsDefaultInstance() {
}

AUpdateOrder::AUpdateOrder(const AUpdateOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AUpdateOrder::SharedCtor() {
  _cached_size_ = 0;
  stats_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AUpdateOrder::~AUpdateOrder() {
  SharedDtor();
}

void AUpdateOrder::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AUpdateOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUpdateOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AUpdateOrder_descriptor_;
}

const AUpdateOrder& AUpdateOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UpdateOrder_2eproto();
  return *default_instance_;
}

AUpdateOrder* AUpdateOrder::default_instance_ = NULL;

AUpdateOrder* AUpdateOrder::New() const {
  return new AUpdateOrder;
}

void AUpdateOrder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stats_ = 0;
  }
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AUpdateOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .transMsg.EReturnStatus Stats = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transMsg::EReturnStatus_IsValid(value)) {
            set_stats(static_cast< ::transMsg::EReturnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Results;
        break;
      }

      // repeated .transMsg.SAUpdateOrder Results = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_results()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Results;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AUpdateOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stats(), output);
  }

  // repeated .transMsg.SAUpdateOrder Results = 2;
  for (int i = 0; i < this->results_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->results(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AUpdateOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .transMsg.EReturnStatus Stats = 1;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stats(), target);
  }

  // repeated .transMsg.SAUpdateOrder Results = 2;
  for (int i = 0; i < this->results_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->results(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AUpdateOrder::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .transMsg.EReturnStatus Stats = 1;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stats());
    }

  }
  // repeated .transMsg.SAUpdateOrder Results = 2;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUpdateOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AUpdateOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AUpdateOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AUpdateOrder::MergeFrom(const AUpdateOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  results_.MergeFrom(from.results_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stats()) {
      set_stats(from.stats());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AUpdateOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUpdateOrder::CopyFrom(const AUpdateOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUpdateOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < results_size(); i++) {
    if (!this->results(i).IsInitialized()) return false;
  }
  return true;
}

void AUpdateOrder::Swap(AUpdateOrder* other) {
  if (other != this) {
    std::swap(stats_, other->stats_);
    results_.Swap(&other->results_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AUpdateOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AUpdateOrder_descriptor_;
  metadata.reflection = AUpdateOrder_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace transMsg

// @@protoc_insertion_point(global_scope)
