// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EOrderState.proto

#ifndef PROTOBUF_EOrderState_2eproto__INCLUDED
#define PROTOBUF_EOrderState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace order {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EOrderState_2eproto();
void protobuf_AssignDesc_EOrderState_2eproto();
void protobuf_ShutdownFile_EOrderState_2eproto();


enum EOrderState {
  EOS_LOCAL_UNSAVE = 1,
  EOS_LOCAL_SAVE = 2,
  EOS_SAVE = 3,
  EOS_SHOP_EXAMINE_WAIT = 4,
  EOS_SHOP_EXAMINE_DURING = 5,
  EOS_SHOP_EXAMINE_FAIL = 6,
  EOS_SHOP_EXAMINE_DONE = 7,
  EOS_FACTORY_EXAMINE_WAIT = 8,
  EOS_FACTORY_GRAPH_EXAMINE_DURING = 9,
  EOS_FACTORY_GRAPH_EXAMINE_DONE = 10,
  EOS_FACTORY_GRAPH_EXAMINE_FAIL = 11,
  EOS_FACTORY_DECOMPOSE_WAIT = 12,
  EOS_FACTORY_DECOMPOSE_DURING = 13,
  EOS_FACTORY_DECOMPOSE_FAIL = 14,
  EOS_FACTORY_LIST_EXAMINE_WAIT = 15,
  EOS_FACTORY_LIST_EXAMINE_DURING = 16,
  EOS_FACTORY_LIST_EXAMINE_FAIL = 17,
  EOS_ZB_SAVE = 21,
  EOS_ZB_COMMIT_WAIT = 22,
  EOS_ZB_LIST_EXAMINE_WAIT = 23,
  EOS_ZB_LIST_EXAMINE_DURING = 24,
  EOS_ZB_LIST_EXAMINE_FAIL = 25,
  EOS_FACTORY_FINANCE_EXAMINE_WAIT = 29,
  EOS_FACTORY_FINANCE_EXAMINE_DONE = 30,
  EOS_DROP = 31,
  EOS_DELETE = 32,
  EOS_COUNT = 33
};
bool EOrderState_IsValid(int value);
const EOrderState EOrderState_MIN = EOS_LOCAL_UNSAVE;
const EOrderState EOrderState_MAX = EOS_COUNT;
const int EOrderState_ARRAYSIZE = EOrderState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EOrderState_descriptor();
inline const ::std::string& EOrderState_Name(EOrderState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EOrderState_descriptor(), value);
}
inline bool EOrderState_Parse(
    const ::std::string& name, EOrderState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EOrderState>(
    EOrderState_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace order

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::order::EOrderState>() {
  return ::order::EOrderState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EOrderState_2eproto__INCLUDED
