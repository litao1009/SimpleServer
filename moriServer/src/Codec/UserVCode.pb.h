// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserVCode.proto

#ifndef PROTOBUF_UserVCode_2eproto__INCLUDED
#define PROTOBUF_UserVCode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EClientType.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UserVCode_2eproto();
void protobuf_AssignDesc_UserVCode_2eproto();
void protobuf_ShutdownFile_UserVCode_2eproto();

class UserVCode;

// ===================================================================

class UserVCode : public ::google::protobuf::Message {
 public:
  UserVCode();
  virtual ~UserVCode();

  UserVCode(const UserVCode& from);

  inline UserVCode& operator=(const UserVCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserVCode& default_instance();

  void Swap(UserVCode* other);

  // implements Message ----------------------------------------------

  UserVCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserVCode& from);
  void MergeFrom(const UserVCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // required int64 LoginTime = 2;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 2;
  inline ::google::protobuf::int64 logintime() const;
  inline void set_logintime(::google::protobuf::int64 value);

  // required uint64 UID = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUIDFieldNumber = 3;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required .CodecProtocol.EClientType CType = 4;
  inline bool has_ctype() const;
  inline void clear_ctype();
  static const int kCTypeFieldNumber = 4;
  inline ::CodecProtocol::EClientType ctype() const;
  inline void set_ctype(::CodecProtocol::EClientType value);

  // @@protoc_insertion_point(class_scope:UserVCode)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_ctype();
  inline void clear_has_ctype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 logintime_;
  ::google::protobuf::int32 userid_;
  int ctype_;
  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_UserVCode_2eproto();
  friend void protobuf_AssignDesc_UserVCode_2eproto();
  friend void protobuf_ShutdownFile_UserVCode_2eproto();

  void InitAsDefaultInstance();
  static UserVCode* default_instance_;
};
// ===================================================================


// ===================================================================

// UserVCode

// required int32 UserID = 1;
inline bool UserVCode::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserVCode::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserVCode::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserVCode::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 UserVCode::userid() const {
  return userid_;
}
inline void UserVCode::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// required int64 LoginTime = 2;
inline bool UserVCode::has_logintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserVCode::set_has_logintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserVCode::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserVCode::clear_logintime() {
  logintime_ = GOOGLE_LONGLONG(0);
  clear_has_logintime();
}
inline ::google::protobuf::int64 UserVCode::logintime() const {
  return logintime_;
}
inline void UserVCode::set_logintime(::google::protobuf::int64 value) {
  set_has_logintime();
  logintime_ = value;
}

// required uint64 UID = 3;
inline bool UserVCode::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserVCode::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserVCode::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserVCode::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 UserVCode::uid() const {
  return uid_;
}
inline void UserVCode::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// required .CodecProtocol.EClientType CType = 4;
inline bool UserVCode::has_ctype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserVCode::set_has_ctype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserVCode::clear_has_ctype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserVCode::clear_ctype() {
  ctype_ = 2;
  clear_has_ctype();
}
inline ::CodecProtocol::EClientType UserVCode::ctype() const {
  return static_cast< ::CodecProtocol::EClientType >(ctype_);
}
inline void UserVCode::set_ctype(::CodecProtocol::EClientType value) {
  assert(::CodecProtocol::EClientType_IsValid(value));
  set_has_ctype();
  ctype_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserVCode_2eproto__INCLUDED
